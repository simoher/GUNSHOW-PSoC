ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 00366E01 		.word	24000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 C05D0000 		.word	24000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 18       		.byte	24
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000E02E 		.word	786432000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103 002e 0000     		.section	.text.CySysClkImoStart,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStart
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStart, %function
 109              	CySysClkImoStart:
 110              	.LFB0:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 3


 111              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.30
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the Clocking, Interrupts, SysTick, and Voltage
   7:.\Generated_Source\PSoC4/CyLib.c **** *   Detect.
   8:.\Generated_Source\PSoC4/CyLib.c **** *
   9:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
  10:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the PSoC 4 System
  11:.\Generated_Source\PSoC4/CyLib.c **** *   Reference Guide provided with PSoC Creator.
  12:.\Generated_Source\PSoC4/CyLib.c **** *
  13:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  14:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC4/CyLib.c **** 
  20:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/CyLib.c **** 
  22:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  23:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  24:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  25:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  26:.\Generated_Source\PSoC4/CyLib.c **** 
  27:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  29:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  30:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  31:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  32:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** 
  35:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  36:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  37:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** 
  43:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  44:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:.\Generated_Source\PSoC4/CyLib.c **** *
  47:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:.\Generated_Source\PSoC4/CyLib.c **** *
  50:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 4


  57:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:.\Generated_Source\PSoC4/CyLib.c **** 
  74:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:.\Generated_Source\PSoC4/CyLib.c **** 
  85:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
  87:.\Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkImoTrim4 = 0u;
  88:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
  89:.\Generated_Source\PSoC4/CyLib.c **** 
  90:.\Generated_Source\PSoC4/CyLib.c **** 
  91:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  94:.\Generated_Source\PSoC4/CyLib.c **** *
  95:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  96:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  97:.\Generated_Source\PSoC4/CyLib.c **** *
  98:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  99:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
 100:.\Generated_Source\PSoC4/CyLib.c **** *
 101:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L devices, this function will also enable USB lock if selected
 102:.\Generated_Source\PSoC4/CyLib.c **** *  in the Design Wide Resources tab.
 103:.\Generated_Source\PSoC4/CyLib.c **** *
 104:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 105:.\Generated_Source\PSoC4/CyLib.c **** *  None
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  None
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 111:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 112:.\Generated_Source\PSoC4/CyLib.c **** {
 112              		.loc 1 112 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 5


 113              		.cfi_startproc
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 113:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 120              		.loc 1 113 0
 121 0004 044B     		ldr	r3, .L2
 122 0006 044A     		ldr	r2, .L2
 123 0008 1268     		ldr	r2, [r2]
 124 000a 8021     		mov	r1, #128
 125 000c 0906     		lsl	r1, r1, #24
 126 000e 0A43     		orr	r2, r1
 127 0010 1A60     		str	r2, [r3]
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** 
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 123:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 124:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 125:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 126:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 127:.\Generated_Source\PSoC4/CyLib.c **** 
 128:.\Generated_Source\PSoC4/CyLib.c **** }
 128              		.loc 1 128 0
 129 0012 BD46     		mov	sp, r7
 130              		@ sp needed
 131 0014 80BD     		pop	{r7, pc}
 132              	.L3:
 133 0016 C046     		.align	2
 134              	.L2:
 135 0018 08010B40 		.word	1074462984
 136              		.cfi_endproc
 137              	.LFE0:
 138              		.size	CySysClkImoStart, .-CySysClkImoStart
 139              		.section	.text.CySysClkImoStop,"ax",%progbits
 140              		.align	2
 141              		.global	CySysClkImoStop
 142              		.code	16
 143              		.thumb_func
 144              		.type	CySysClkImoStop, %function
 145              	CySysClkImoStop:
 146              	.LFB1:
 129:.\Generated_Source\PSoC4/CyLib.c **** 
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 133:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 6


 136:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 137:.\Generated_Source\PSoC4/CyLib.c **** *
 138:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, this function will also disable WCO lock.
 139:.\Generated_Source\PSoC4/CyLib.c **** *
 140:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC PSoC 4200L devices, this function will also disable USB lock.
 141:.\Generated_Source\PSoC4/CyLib.c **** *
 142:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c **** *  None
 144:.\Generated_Source\PSoC4/CyLib.c **** *
 145:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 146:.\Generated_Source\PSoC4/CyLib.c **** *  None
 147:.\Generated_Source\PSoC4/CyLib.c **** *
 148:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 150:.\Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 150 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 151:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 153:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 154:.\Generated_Source\PSoC4/CyLib.c **** 
 155:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 156:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 157:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 158:.\Generated_Source\PSoC4/CyLib.c **** 
 159:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 155              		.loc 1 159 0
 156 0004 034B     		ldr	r3, .L5
 157 0006 034A     		ldr	r2, .L5
 158 0008 1268     		ldr	r2, [r2]
 159 000a 5200     		lsl	r2, r2, #1
 160 000c 5208     		lsr	r2, r2, #1
 161 000e 1A60     		str	r2, [r3]
 160:.\Generated_Source\PSoC4/CyLib.c **** }
 162              		.loc 1 160 0
 163 0010 BD46     		mov	sp, r7
 164              		@ sp needed
 165 0012 80BD     		pop	{r7, pc}
 166              	.L6:
 167              		.align	2
 168              	.L5:
 169 0014 08010B40 		.word	1074462984
 170              		.cfi_endproc
 171              	.LFE1:
 172              		.size	CySysClkImoStop, .-CySysClkImoStop
 173              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 174              		.align	2
 175              		.global	CySysClkWriteHfclkDirect
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkWriteHfclkDirect, %function
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 7


 179              	CySysClkWriteHfclkDirect:
 180              	.LFB2:
 161:.\Generated_Source\PSoC4/CyLib.c **** 
 162:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 163:.\Generated_Source\PSoC4/CyLib.c **** 
 164:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 165:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 166:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 169:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 170:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 171:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 172:.\Generated_Source\PSoC4/CyLib.c ****     *
 173:.\Generated_Source\PSoC4/CyLib.c ****     *  It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 174:.\Generated_Source\PSoC4/CyLib.c ****     *  CyDelay() function. The delay interval is measured based on the system
 175:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency defined by PSoC Creator at build time. If System clock frequency
 176:.\Generated_Source\PSoC4/CyLib.c ****     *  is changed in runtime, the CyDelayFreq() with the appropriate parameter
 177:.\Generated_Source\PSoC4/CyLib.c ****     *  should be called.
 178:.\Generated_Source\PSoC4/CyLib.c ****     *
 179:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 180:.\Generated_Source\PSoC4/CyLib.c ****     *  but not both.
 181:.\Generated_Source\PSoC4/CyLib.c ****     *
 182:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 183:.\Generated_Source\PSoC4/CyLib.c ****     *
 184:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 185:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 186:.\Generated_Source\PSoC4/CyLib.c ****     *
 187:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 188:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 189:.\Generated_Source\PSoC4/CyLib.c ****     *
 190:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 191:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 192:.\Generated_Source\PSoC4/CyLib.c ****     {
 193:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 194:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 195:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 196:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 197:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 198:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 201:.\Generated_Source\PSoC4/CyLib.c ****         {
 202:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 203:.\Generated_Source\PSoC4/CyLib.c **** 
 204:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 205:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 206:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 207:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 208:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 209:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 210:.\Generated_Source\PSoC4/CyLib.c **** 
 211:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 212:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 213:.\Generated_Source\PSoC4/CyLib.c ****             {
 214:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 215:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 8


 216:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 217:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 218:.\Generated_Source\PSoC4/CyLib.c ****                 }
 219:.\Generated_Source\PSoC4/CyLib.c ****             }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 222:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****             {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 225:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****             }
 227:.\Generated_Source\PSoC4/CyLib.c **** 
 228:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 229:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 232:.\Generated_Source\PSoC4/CyLib.c **** 
 233:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 234:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 235:.\Generated_Source\PSoC4/CyLib.c **** 
 236:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 237:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 238:.\Generated_Source\PSoC4/CyLib.c **** 
 239:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 240:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 241:.\Generated_Source\PSoC4/CyLib.c ****             {
 242:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243:.\Generated_Source\PSoC4/CyLib.c ****             }
 244:.\Generated_Source\PSoC4/CyLib.c ****             else
 245:.\Generated_Source\PSoC4/CyLib.c ****             {
 246:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 247:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 248:.\Generated_Source\PSoC4/CyLib.c **** 
 249:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 250:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 251:.\Generated_Source\PSoC4/CyLib.c **** 
 252:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 253:.\Generated_Source\PSoC4/CyLib.c ****             }
 254:.\Generated_Source\PSoC4/CyLib.c **** 
 255:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 256:.\Generated_Source\PSoC4/CyLib.c **** 
 257:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 258:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 259:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 260:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 261:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 262:.\Generated_Source\PSoC4/CyLib.c **** 
 263:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 264:.\Generated_Source\PSoC4/CyLib.c ****         }
 265:.\Generated_Source\PSoC4/CyLib.c ****     }
 266:.\Generated_Source\PSoC4/CyLib.c **** 
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 269:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 270:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 271:.\Generated_Source\PSoC4/CyLib.c ****     *
 272:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 9


 273:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 276:.\Generated_Source\PSoC4/CyLib.c ****     *
 277:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 278:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 279:.\Generated_Source\PSoC4/CyLib.c ****     *
 280:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 281:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 282:.\Generated_Source\PSoC4/CyLib.c ****     *
 283:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 284:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 285:.\Generated_Source\PSoC4/CyLib.c ****     {
 286:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 287:.\Generated_Source\PSoC4/CyLib.c ****     }
 288:.\Generated_Source\PSoC4/CyLib.c **** 
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 291:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 292:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 295:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 298:.\Generated_Source\PSoC4/CyLib.c ****     *
 299:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 300:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 301:.\Generated_Source\PSoC4/CyLib.c ****     *
 302:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 303:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 304:.\Generated_Source\PSoC4/CyLib.c ****     *
 305:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 306:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 307:.\Generated_Source\PSoC4/CyLib.c ****     {
 308:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 309:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 310:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 311:.\Generated_Source\PSoC4/CyLib.c ****     }
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 314:.\Generated_Source\PSoC4/CyLib.c **** 
 315:.\Generated_Source\PSoC4/CyLib.c **** 
 316:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 317:.\Generated_Source\PSoC4/CyLib.c **** 
 318:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 320:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 321:.\Generated_Source\PSoC4/CyLib.c ****     *
 322:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 323:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to USB lock feature.
 324:.\Generated_Source\PSoC4/CyLib.c ****     *
 325:.\Generated_Source\PSoC4/CyLib.c ****     *  This function must be called before CySysClkWriteImoFreq().
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStart() function if USB lock
 328:.\Generated_Source\PSoC4/CyLib.c ****     *  selected in the Design Wide Resources tab.
 329:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 10


 330:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 331:.\Generated_Source\PSoC4/CyLib.c ****     *  devices, the IMO can lock to either WCO or USB, but not both.
 332:.\Generated_Source\PSoC4/CyLib.c ****     *
 333:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 334:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 335:.\Generated_Source\PSoC4/CyLib.c ****     *
 336:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 337:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 338:.\Generated_Source\PSoC4/CyLib.c ****     *
 339:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 340:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 341:.\Generated_Source\PSoC4/CyLib.c ****     {
 342:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 343:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 344:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 345:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 346:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 347:.\Generated_Source\PSoC4/CyLib.c **** 
 348:.\Generated_Source\PSoC4/CyLib.c ****         /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 349:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 350:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 351:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 352:.\Generated_Source\PSoC4/CyLib.c **** 
 353:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 354:.\Generated_Source\PSoC4/CyLib.c ****     }
 355:.\Generated_Source\PSoC4/CyLib.c **** 
 356:.\Generated_Source\PSoC4/CyLib.c **** 
 357:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 358:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 359:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 360:.\Generated_Source\PSoC4/CyLib.c ****     *
 361:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 362:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to USB lock feature.
 363:.\Generated_Source\PSoC4/CyLib.c ****     *
 364:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStop() function if USB lock selected
 365:.\Generated_Source\PSoC4/CyLib.c ****     *  in the Design Wide Resources tab.
 366:.\Generated_Source\PSoC4/CyLib.c ****     *
 367:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only.
 368:.\Generated_Source\PSoC4/CyLib.c ****     *
 369:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 370:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 371:.\Generated_Source\PSoC4/CyLib.c ****     *
 372:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 373:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 374:.\Generated_Source\PSoC4/CyLib.c ****     *
 375:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 376:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 377:.\Generated_Source\PSoC4/CyLib.c ****     {
 378:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 379:.\Generated_Source\PSoC4/CyLib.c **** 
 380:.\Generated_Source\PSoC4/CyLib.c ****         /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 381:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 382:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 383:.\Generated_Source\PSoC4/CyLib.c ****     }
 384:.\Generated_Source\PSoC4/CyLib.c **** 
 385:.\Generated_Source\PSoC4/CyLib.c **** 
 386:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 11


 387:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 388:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 389:.\Generated_Source\PSoC4/CyLib.c ****     *
 390:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 391:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to USB lock enable state.
 392:.\Generated_Source\PSoC4/CyLib.c ****     *
 393:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4200L devices only.
 394:.\Generated_Source\PSoC4/CyLib.c ****     *
 395:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 396:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 397:.\Generated_Source\PSoC4/CyLib.c ****     *
 398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 399:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to USB lock is enabled, and 0 if IMO to USB lock is disabled.
 400:.\Generated_Source\PSoC4/CyLib.c ****     *
 401:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 403:.\Generated_Source\PSoC4/CyLib.c ****     {
 404:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 405:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 406:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 407:.\Generated_Source\PSoC4/CyLib.c ****     }
 408:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409:.\Generated_Source\PSoC4/CyLib.c **** 
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c **** 
 412:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 413:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 414:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 415:.\Generated_Source\PSoC4/CyLib.c **** *
 416:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 417:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 418:.\Generated_Source\PSoC4/CyLib.c **** *
 419:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 420:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 421:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 422:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 423:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 424:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 425:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 426:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL0    PLL#0
 427:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 428:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL1    PLL#1
 429:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 430:.\Generated_Source\PSoC4/CyLib.c **** *
 431:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 432:.\Generated_Source\PSoC4/CyLib.c **** *  None
 433:.\Generated_Source\PSoC4/CyLib.c **** *
 434:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 435:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 436:.\Generated_Source\PSoC4/CyLib.c **** *
 437:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 438:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 439:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 440:.\Generated_Source\PSoC4/CyLib.c **** *
 441:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 442:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 443:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 12


 444:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 445:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 446:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 447:.\Generated_Source\PSoC4/CyLib.c **** *
 448:.\Generated_Source\PSoC4/CyLib.c **** *  Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 449:.\Generated_Source\PSoC4/CyLib.c **** *  maximum permissible value for HFCLK.
 450:.\Generated_Source\PSoC4/CyLib.c **** *
 451:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 452:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 453:.\Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 453 0
 182              		.cfi_startproc
 183 0000 90B5     		push	{r4, r7, lr}
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              		.cfi_def_cfa_offset 32
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 454:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 455:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 456:.\Generated_Source\PSoC4/CyLib.c **** 
 457:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 193              		.loc 1 457 0
 194 0008 0F23     		mov	r3, #15
 195 000a FC18     		add	r4, r7, r3
 196 000c FFF7FEFF 		bl	CyEnterCriticalSection
 197 0010 031C     		mov	r3, r0
 198 0012 2370     		strb	r3, [r4]
 458:.\Generated_Source\PSoC4/CyLib.c **** 
 459:.\Generated_Source\PSoC4/CyLib.c **** 
 460:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 199              		.loc 1 460 0
 200 0014 0B4B     		ldr	r3, .L8
 201 0016 1B68     		ldr	r3, [r3]
 202 0018 0722     		mov	r2, #7
 203 001a 9343     		bic	r3, r2
 204 001c BB60     		str	r3, [r7, #8]
 461:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 462:.\Generated_Source\PSoC4/CyLib.c **** 
 463:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 465:.\Generated_Source\PSoC4/CyLib.c ****     {
 466:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 467:.\Generated_Source\PSoC4/CyLib.c ****     }
 468:.\Generated_Source\PSoC4/CyLib.c ****     else
 469:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:.\Generated_Source\PSoC4/CyLib.c ****     {
 471:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 205              		.loc 1 471 0
 206 001e 7B68     		ldr	r3, [r7, #4]
 207 0020 0722     		mov	r2, #7
 208 0022 1340     		and	r3, r2
 209 0024 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 13


 210 0026 1343     		orr	r3, r2
 211 0028 BB60     		str	r3, [r7, #8]
 472:.\Generated_Source\PSoC4/CyLib.c ****     }
 473:.\Generated_Source\PSoC4/CyLib.c **** 
 474:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 212              		.loc 1 474 0
 213 002a 064B     		ldr	r3, .L8
 214 002c BA68     		ldr	r2, [r7, #8]
 215 002e 1A60     		str	r2, [r3]
 475:.\Generated_Source\PSoC4/CyLib.c **** 
 476:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 216              		.loc 1 476 0
 217 0030 0F23     		mov	r3, #15
 218 0032 FB18     		add	r3, r7, r3
 219 0034 1B78     		ldrb	r3, [r3]
 220 0036 181C     		mov	r0, r3
 221 0038 FFF7FEFF 		bl	CyExitCriticalSection
 477:.\Generated_Source\PSoC4/CyLib.c **** }
 222              		.loc 1 477 0
 223 003c BD46     		mov	sp, r7
 224 003e 05B0     		add	sp, sp, #20
 225              		@ sp needed
 226 0040 90BD     		pop	{r4, r7, pc}
 227              	.L9:
 228 0042 C046     		.align	2
 229              	.L8:
 230 0044 00010B40 		.word	1074462976
 231              		.cfi_endproc
 232              	.LFE2:
 233              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 234              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 235              		.align	2
 236              		.global	CySysClkGetSysclkSource
 237              		.code	16
 238              		.thumb_func
 239              		.type	CySysClkGetSysclkSource, %function
 240              	CySysClkGetSysclkSource:
 241              	.LFB3:
 478:.\Generated_Source\PSoC4/CyLib.c **** 
 479:.\Generated_Source\PSoC4/CyLib.c **** 
 480:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 482:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 483:.\Generated_Source\PSoC4/CyLib.c **** *
 484:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 485:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the source of the System clock.
 486:.\Generated_Source\PSoC4/CyLib.c **** *
 487:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 488:.\Generated_Source\PSoC4/CyLib.c **** *  None
 489:.\Generated_Source\PSoC4/CyLib.c **** *
 490:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 491:.\Generated_Source\PSoC4/CyLib.c **** *  The same as CySysClkWriteHfclkDirect() function parameters.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 495:.\Generated_Source\PSoC4/CyLib.c **** {
 242              		.loc 1 495 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 14


 243              		.cfi_startproc
 244 0000 90B5     		push	{r4, r7, lr}
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              		.cfi_def_cfa_offset 24
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 496:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 497:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 498:.\Generated_Source\PSoC4/CyLib.c **** 
 499:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 253              		.loc 1 499 0
 254 0006 FC1D     		add	r4, r7, #7
 255 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 256 000c 031C     		mov	r3, r0
 257 000e 2370     		strb	r3, [r4]
 500:.\Generated_Source\PSoC4/CyLib.c **** 
 501:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 502:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 503:.\Generated_Source\PSoC4/CyLib.c ****     {
 504:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 505:.\Generated_Source\PSoC4/CyLib.c ****     }
 506:.\Generated_Source\PSoC4/CyLib.c ****     else
 507:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 508:.\Generated_Source\PSoC4/CyLib.c ****     {
 509:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 258              		.loc 1 509 0
 259 0010 074B     		ldr	r3, .L12
 260 0012 1B68     		ldr	r3, [r3]
 261 0014 0722     		mov	r2, #7
 262 0016 1340     		and	r3, r2
 263 0018 3B60     		str	r3, [r7]
 510:.\Generated_Source\PSoC4/CyLib.c ****     }
 511:.\Generated_Source\PSoC4/CyLib.c **** 
 512:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 264              		.loc 1 512 0
 265 001a FB1D     		add	r3, r7, #7
 266 001c 1B78     		ldrb	r3, [r3]
 267 001e 181C     		mov	r0, r3
 268 0020 FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/CyLib.c **** 
 514:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 269              		.loc 1 514 0
 270 0024 3B68     		ldr	r3, [r7]
 515:.\Generated_Source\PSoC4/CyLib.c **** }
 271              		.loc 1 515 0
 272 0026 181C     		mov	r0, r3
 273 0028 BD46     		mov	sp, r7
 274 002a 03B0     		add	sp, sp, #12
 275              		@ sp needed
 276 002c 90BD     		pop	{r4, r7, pc}
 277              	.L13:
 278 002e C046     		.align	2
 279              	.L12:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 15


 280 0030 00010B40 		.word	1074462976
 281              		.cfi_endproc
 282              	.LFE3:
 283              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 284              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 285              		.align	2
 286              		.global	CySysClkWriteSysclkDiv
 287              		.code	16
 288              		.thumb_func
 289              		.type	CySysClkWriteSysclkDiv, %function
 290              	CySysClkWriteSysclkDiv:
 291              	.LFB4:
 516:.\Generated_Source\PSoC4/CyLib.c **** 
 517:.\Generated_Source\PSoC4/CyLib.c **** 
 518:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 519:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 520:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 521:.\Generated_Source\PSoC4/CyLib.c **** *
 522:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 523:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 524:.\Generated_Source\PSoC4/CyLib.c **** *
 525:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 526:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 527:.\Generated_Source\PSoC4/CyLib.c **** *
 528:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 529:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 530:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 531:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 532:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 533:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 534:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 535:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 536:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 537:.\Generated_Source\PSoC4/CyLib.c **** *
 538:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 539:.\Generated_Source\PSoC4/CyLib.c **** *  None
 540:.\Generated_Source\PSoC4/CyLib.c **** *
 541:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 543:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 544:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 547:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 548:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 549:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 550:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 551:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 552:.\Generated_Source\PSoC4/CyLib.c **** *
 553:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 554:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 555:.\Generated_Source\PSoC4/CyLib.c **** {
 292              		.loc 1 555 0
 293              		.cfi_startproc
 294 0000 90B5     		push	{r4, r7, lr}
 295              		.cfi_def_cfa_offset 12
 296              		.cfi_offset 4, -12
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 16


 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 85B0     		sub	sp, sp, #20
 300              		.cfi_def_cfa_offset 32
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
 556:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 304              		.loc 1 558 0
 305 0008 0F23     		mov	r3, #15
 306 000a FC18     		add	r4, r7, r3
 307 000c FFF7FEFF 		bl	CyEnterCriticalSection
 308 0010 031C     		mov	r3, r0
 309 0012 2370     		strb	r3, [r4]
 559:.\Generated_Source\PSoC4/CyLib.c **** 
 560:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 310              		.loc 1 560 0
 311 0014 094B     		ldr	r3, .L15
 312 0016 7A68     		ldr	r2, [r7, #4]
 313 0018 0721     		mov	r1, #7
 314 001a 0A40     		and	r2, r1
 315 001c D104     		lsl	r1, r2, #19
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 562:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 316              		.loc 1 562 0
 317 001e 074A     		ldr	r2, .L15
 318 0020 1268     		ldr	r2, [r2]
 319 0022 0748     		ldr	r0, .L15+4
 320 0024 0240     		and	r2, r0
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 321              		.loc 1 561 0
 322 0026 0A43     		orr	r2, r1
 560:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 323              		.loc 1 560 0
 324 0028 1A60     		str	r2, [r3]
 563:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 325              		.loc 1 565 0
 326 002a 0F23     		mov	r3, #15
 327 002c FB18     		add	r3, r7, r3
 328 002e 1B78     		ldrb	r3, [r3]
 329 0030 181C     		mov	r0, r3
 330 0032 FFF7FEFF 		bl	CyExitCriticalSection
 566:.\Generated_Source\PSoC4/CyLib.c **** }
 331              		.loc 1 566 0
 332 0036 BD46     		mov	sp, r7
 333 0038 05B0     		add	sp, sp, #20
 334              		@ sp needed
 335 003a 90BD     		pop	{r4, r7, pc}
 336              	.L16:
 337              		.align	2
 338              	.L15:
 339 003c 00010B40 		.word	1074462976
 340 0040 FFFFC7FF 		.word	-3670017
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 17


 341              		.cfi_endproc
 342              	.LFE4:
 343              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 344              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 345              		.align	2
 346              		.global	CySysClkWriteImoFreq
 347              		.code	16
 348              		.thumb_func
 349              		.type	CySysClkWriteImoFreq, %function
 350              	CySysClkWriteImoFreq:
 351              	.LFB5:
 567:.\Generated_Source\PSoC4/CyLib.c **** 
 568:.\Generated_Source\PSoC4/CyLib.c **** 
 569:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 571:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 572:.\Generated_Source\PSoC4/CyLib.c **** *
 573:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 574:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 575:.\Generated_Source\PSoC4/CyLib.c **** *
 576:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 577:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 578:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 579:.\Generated_Source\PSoC4/CyLib.c **** *
 580:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 581:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 582:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 583:.\Generated_Source\PSoC4/CyLib.c **** *
 584:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 585:.\Generated_Source\PSoC4/CyLib.c **** *  then this API will disable the lock, write the new IMO frequency and then
 586:.\Generated_Source\PSoC4/CyLib.c **** *  re-enable the lock.
 587:.\Generated_Source\PSoC4/CyLib.c **** *
 588:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L device families, this function enables the USB lock when 24 or
 589:.\Generated_Source\PSoC4/CyLib.c **** *  48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 590:.\Generated_Source\PSoC4/CyLib.c **** *  Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 591:.\Generated_Source\PSoC4/CyLib.c **** *  lock is disabled during IMO frequency change.
 592:.\Generated_Source\PSoC4/CyLib.c **** *
 593:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is compiled
 594:.\Generated_Source\PSoC4/CyLib.c **** *  in debug mode.
 595:.\Generated_Source\PSoC4/CyLib.c **** *
 596:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 598:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 599:.\Generated_Source\PSoC4/CyLib.c **** *
 600:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 601:.\Generated_Source\PSoC4/CyLib.c **** *
 602:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 603:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 604:.\Generated_Source\PSoC4/CyLib.c **** *
 605:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 606:.\Generated_Source\PSoC4/CyLib.c **** *  None
 607:.\Generated_Source\PSoC4/CyLib.c **** *
 608:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 609:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 610:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 611:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 612:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 18


 613:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 614:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 615:.\Generated_Source\PSoC4/CyLib.c **** *
 616:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 617:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 618:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 619:.\Generated_Source\PSoC4/CyLib.c **** *
 620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 621:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 622:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 623:.\Generated_Source\PSoC4/CyLib.c ****     {
 352              		.loc 1 623 0
 353              		.cfi_startproc
 354 0000 90B5     		push	{r4, r7, lr}
 355              		.cfi_def_cfa_offset 12
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
 359 0002 85B0     		sub	sp, sp, #20
 360              		.cfi_def_cfa_offset 32
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 624:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 626:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 627:.\Generated_Source\PSoC4/CyLib.c ****         #else
 628:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 629:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 630:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 631:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 632:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 633:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 636:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 637:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 640:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 641:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 644:.\Generated_Source\PSoC4/CyLib.c **** 
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 364              		.loc 1 646 0
 365 0008 0C23     		mov	r3, #12
 366 000a FC18     		add	r4, r7, r3
 367 000c FFF7FEFF 		bl	CyEnterCriticalSection
 368 0010 031C     		mov	r3, r0
 369 0012 2370     		strb	r3, [r4]
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 649:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 650:.\Generated_Source\PSoC4/CyLib.c ****             {
 651:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 19


 652:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 653:.\Generated_Source\PSoC4/CyLib.c ****             }
 654:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 655:.\Generated_Source\PSoC4/CyLib.c **** 
 656:.\Generated_Source\PSoC4/CyLib.c **** 
 657:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 658:.\Generated_Source\PSoC4/CyLib.c **** 
 659:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 660:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 661:.\Generated_Source\PSoC4/CyLib.c ****                 {
 662:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 663:.\Generated_Source\PSoC4/CyLib.c **** 
 664:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 665:.\Generated_Source\PSoC4/CyLib.c ****                 {
 666:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 667:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 668:.\Generated_Source\PSoC4/CyLib.c ****                 }
 669:.\Generated_Source\PSoC4/CyLib.c **** 
 670:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 671:.\Generated_Source\PSoC4/CyLib.c ****                 }
 672:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 673:.\Generated_Source\PSoC4/CyLib.c **** 
 674:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 675:.\Generated_Source\PSoC4/CyLib.c **** 
 676:.\Generated_Source\PSoC4/CyLib.c **** 
 677:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 678:.\Generated_Source\PSoC4/CyLib.c **** 
 679:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 680:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 681:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 682:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 683:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 684:.\Generated_Source\PSoC4/CyLib.c **** 
 685:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 686:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 687:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 688:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 689:.\Generated_Source\PSoC4/CyLib.c **** 
 690:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 691:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 692:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 693:.\Generated_Source\PSoC4/CyLib.c **** 
 694:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 695:.\Generated_Source\PSoC4/CyLib.c **** 
 696:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 370              		.loc 1 696 0
 371 0014 7B68     		ldr	r3, [r7, #4]
 372 0016 022B     		cmp	r3, #2
 373 0018 00D8     		bhi	.LCB233
 374 001a B4E0     		b	.L18	@long jump
 375              	.LCB233:
 376              		.loc 1 696 0 is_stmt 0 discriminator 1
 377 001c 7B68     		ldr	r3, [r7, #4]
 378 001e 302B     		cmp	r3, #48
 379 0020 00D9     		bls	.LCB236
 380 0022 B0E0     		b	.L18	@long jump
 381              	.LCB236:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 20


 697:.\Generated_Source\PSoC4/CyLib.c ****         {
 698:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 382              		.loc 1 698 0 is_stmt 1
 383 0024 5E4B     		ldr	r3, .L29
 384 0026 1B78     		ldrb	r3, [r3]
 385 0028 DBB2     		uxtb	r3, r3
 386 002a 1A1E     		sub	r2, r3, #0
 387 002c 7B68     		ldr	r3, [r7, #4]
 388 002e 9A42     		cmp	r2, r3
 389 0030 0AD3     		bcc	.L19
 699:.\Generated_Source\PSoC4/CyLib.c ****             {
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 390              		.loc 1 700 0
 391 0032 5C4A     		ldr	r2, .L29+4
 392 0034 0F23     		mov	r3, #15
 393 0036 FB18     		add	r3, r7, r3
 394 0038 1278     		ldrb	r2, [r2]
 395 003a 1A70     		strb	r2, [r3]
 701:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 396              		.loc 1 701 0
 397 003c 5A4A     		ldr	r2, .L29+8
 398 003e 0E23     		mov	r3, #14
 399 0040 FB18     		add	r3, r7, r3
 400 0042 1278     		ldrb	r2, [r2]
 401 0044 1A70     		strb	r2, [r3]
 402 0046 3FE0     		b	.L20
 403              	.L19:
 702:.\Generated_Source\PSoC4/CyLib.c ****             }
 703:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 404              		.loc 1 703 0
 405 0048 584B     		ldr	r3, .L29+12
 406 004a 1B78     		ldrb	r3, [r3]
 407 004c DBB2     		uxtb	r3, r3
 408 004e 1A1E     		sub	r2, r3, #0
 409 0050 7B68     		ldr	r3, [r7, #4]
 410 0052 9A42     		cmp	r2, r3
 411 0054 0AD3     		bcc	.L21
 704:.\Generated_Source\PSoC4/CyLib.c ****             {
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 412              		.loc 1 705 0
 413 0056 564A     		ldr	r2, .L29+16
 414 0058 0F23     		mov	r3, #15
 415 005a FB18     		add	r3, r7, r3
 416 005c 1278     		ldrb	r2, [r2]
 417 005e 1A70     		strb	r2, [r3]
 706:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 418              		.loc 1 706 0
 419 0060 544A     		ldr	r2, .L29+20
 420 0062 0E23     		mov	r3, #14
 421 0064 FB18     		add	r3, r7, r3
 422 0066 1278     		ldrb	r2, [r2]
 423 0068 1A70     		strb	r2, [r3]
 424 006a 2DE0     		b	.L20
 425              	.L21:
 707:.\Generated_Source\PSoC4/CyLib.c ****             }
 708:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 426              		.loc 1 708 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 21


 427 006c 524B     		ldr	r3, .L29+24
 428 006e 1B78     		ldrb	r3, [r3]
 429 0070 DBB2     		uxtb	r3, r3
 430 0072 1A1E     		sub	r2, r3, #0
 431 0074 7B68     		ldr	r3, [r7, #4]
 432 0076 9A42     		cmp	r2, r3
 433 0078 0AD3     		bcc	.L22
 709:.\Generated_Source\PSoC4/CyLib.c ****             {
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 434              		.loc 1 710 0
 435 007a 504A     		ldr	r2, .L29+28
 436 007c 0F23     		mov	r3, #15
 437 007e FB18     		add	r3, r7, r3
 438 0080 1278     		ldrb	r2, [r2]
 439 0082 1A70     		strb	r2, [r3]
 711:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 440              		.loc 1 711 0
 441 0084 4E4A     		ldr	r2, .L29+32
 442 0086 0E23     		mov	r3, #14
 443 0088 FB18     		add	r3, r7, r3
 444 008a 1278     		ldrb	r2, [r2]
 445 008c 1A70     		strb	r2, [r3]
 446 008e 1BE0     		b	.L20
 447              	.L22:
 712:.\Generated_Source\PSoC4/CyLib.c ****             }
 713:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 448              		.loc 1 713 0
 449 0090 4C4B     		ldr	r3, .L29+36
 450 0092 1B78     		ldrb	r3, [r3]
 451 0094 DBB2     		uxtb	r3, r3
 452 0096 1A1E     		sub	r2, r3, #0
 453 0098 7B68     		ldr	r3, [r7, #4]
 454 009a 9A42     		cmp	r2, r3
 455 009c 0AD3     		bcc	.L23
 714:.\Generated_Source\PSoC4/CyLib.c ****             {
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 456              		.loc 1 715 0
 457 009e 4A4A     		ldr	r2, .L29+40
 458 00a0 0F23     		mov	r3, #15
 459 00a2 FB18     		add	r3, r7, r3
 460 00a4 1278     		ldrb	r2, [r2]
 461 00a6 1A70     		strb	r2, [r3]
 716:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 462              		.loc 1 716 0
 463 00a8 484A     		ldr	r2, .L29+44
 464 00aa 0E23     		mov	r3, #14
 465 00ac FB18     		add	r3, r7, r3
 466 00ae 1278     		ldrb	r2, [r2]
 467 00b0 1A70     		strb	r2, [r3]
 468 00b2 09E0     		b	.L20
 469              	.L23:
 717:.\Generated_Source\PSoC4/CyLib.c ****             }
 718:.\Generated_Source\PSoC4/CyLib.c ****             else
 719:.\Generated_Source\PSoC4/CyLib.c ****             {
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 470              		.loc 1 720 0
 471 00b4 464A     		ldr	r2, .L29+48
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 22


 472 00b6 0F23     		mov	r3, #15
 473 00b8 FB18     		add	r3, r7, r3
 474 00ba 1278     		ldrb	r2, [r2]
 475 00bc 1A70     		strb	r2, [r3]
 721:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 476              		.loc 1 721 0
 477 00be 454A     		ldr	r2, .L29+52
 478 00c0 0E23     		mov	r3, #14
 479 00c2 FB18     		add	r3, r7, r3
 480 00c4 1278     		ldrb	r2, [r2]
 481 00c6 1A70     		strb	r2, [r3]
 482              	.L20:
 722:.\Generated_Source\PSoC4/CyLib.c ****             }
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 725:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 483              		.loc 1 725 0
 484 00c8 7B68     		ldr	r3, [r7, #4]
 485 00ca DA1E     		sub	r2, r3, #3
 486 00cc 0B23     		mov	r3, #11
 487 00ce FB18     		add	r3, r7, r3
 488 00d0 4149     		ldr	r1, .L29+56
 489 00d2 8A5C     		ldrb	r2, [r1, r2]
 490 00d4 1A70     		strb	r2, [r3]
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c **** 
 728:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 729:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 730:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 731:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 732:.\Generated_Source\PSoC4/CyLib.c ****             *
 733:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 734:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 735:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 736:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 737:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 491              		.loc 1 737 0
 492 00d6 0B23     		mov	r3, #11
 493 00d8 FB18     		add	r3, r7, r3
 494 00da 1B78     		ldrb	r3, [r3]
 495 00dc 2F2B     		cmp	r3, #47
 496 00de 0DD9     		bls	.L24
 497              		.loc 1 737 0 is_stmt 0 discriminator 1
 498 00e0 7B68     		ldr	r3, [r7, #4]
 499 00e2 2A2B     		cmp	r3, #42
 500 00e4 0AD9     		bls	.L24
 738:.\Generated_Source\PSoC4/CyLib.c ****             {
 739:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 740:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 501              		.loc 1 740 0 is_stmt 1
 502 00e6 3D4B     		ldr	r3, .L29+60
 503 00e8 1922     		mov	r2, #25
 504 00ea 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 742:.\Generated_Source\PSoC4/CyLib.c **** 
 743:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 505              		.loc 1 743 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 23


 506 00ec 0520     		mov	r0, #5
 507 00ee FFF7FEFF 		bl	CyDelayCycles
 744:.\Generated_Source\PSoC4/CyLib.c **** 
 745:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 508              		.loc 1 745 0
 509 00f2 0D23     		mov	r3, #13
 510 00f4 FB18     		add	r3, r7, r3
 511 00f6 1922     		mov	r2, #25
 512 00f8 1A70     		strb	r2, [r3]
 513 00fa 07E0     		b	.L25
 514              	.L24:
 746:.\Generated_Source\PSoC4/CyLib.c ****             }
 747:.\Generated_Source\PSoC4/CyLib.c ****             else
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 515              		.loc 1 749 0
 516 00fc 374B     		ldr	r3, .L29+60
 517 00fe 1B68     		ldr	r3, [r3]
 518 0100 DAB2     		uxtb	r2, r3
 519 0102 0D23     		mov	r3, #13
 520 0104 FB18     		add	r3, r7, r3
 521 0106 3F21     		mov	r1, #63
 522 0108 0A40     		and	r2, r1
 523 010a 1A70     		strb	r2, [r3]
 524              	.L25:
 750:.\Generated_Source\PSoC4/CyLib.c ****             }
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c **** 
 753:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 754:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 755:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 756:.\Generated_Source\PSoC4/CyLib.c ****             *
 757:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 758:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 759:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 760:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 761:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 525              		.loc 1 761 0
 526 010c 0B23     		mov	r3, #11
 527 010e FA18     		add	r2, r7, r3
 528 0110 0D23     		mov	r3, #13
 529 0112 FB18     		add	r3, r7, r3
 530 0114 1278     		ldrb	r2, [r2]
 531 0116 1B78     		ldrb	r3, [r3]
 532 0118 9A42     		cmp	r2, r3
 533 011a 08D2     		bcs	.L26
 762:.\Generated_Source\PSoC4/CyLib.c ****             {
 763:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 764:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 534              		.loc 1 764 0
 535 011c 2F4B     		ldr	r3, .L29+60
 536 011e 7A68     		ldr	r2, [r7, #4]
 537 0120 033A     		sub	r2, r2, #3
 538 0122 2D49     		ldr	r1, .L29+56
 539 0124 8A5C     		ldrb	r2, [r1, r2]
 540 0126 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 24


 541              		.loc 1 765 0
 542 0128 0520     		mov	r0, #5
 543 012a FFF7FEFF 		bl	CyDelayCycles
 544              	.L26:
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c **** 
 768:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 769:.\Generated_Source\PSoC4/CyLib.c **** 
 770:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 771:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 772:.\Generated_Source\PSoC4/CyLib.c ****                 {
 773:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 774:.\Generated_Source\PSoC4/CyLib.c ****                 }
 775:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 776:.\Generated_Source\PSoC4/CyLib.c ****                 {
 777:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 778:.\Generated_Source\PSoC4/CyLib.c ****                 }
 779:.\Generated_Source\PSoC4/CyLib.c ****                 else
 780:.\Generated_Source\PSoC4/CyLib.c ****                 {
 781:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 782:.\Generated_Source\PSoC4/CyLib.c ****                 }
 783:.\Generated_Source\PSoC4/CyLib.c ****             #else
 784:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 545              		.loc 1 784 0
 546 012e 7B68     		ldr	r3, [r7, #4]
 547 0130 284A     		ldr	r2, .L29+52
 548 0132 9A18     		add	r2, r3, r2
 549 0134 0A23     		mov	r3, #10
 550 0136 FB18     		add	r3, r7, r3
 551 0138 1278     		ldrb	r2, [r2]
 552 013a 1A70     		strb	r2, [r3]
 785:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:.\Generated_Source\PSoC4/CyLib.c **** 
 787:.\Generated_Source\PSoC4/CyLib.c **** 
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 553              		.loc 1 788 0
 554 013c 284B     		ldr	r3, .L29+64
 555 013e 0A22     		mov	r2, #10
 556 0140 BA18     		add	r2, r7, r2
 557 0142 1278     		ldrb	r2, [r2]
 558 0144 1A60     		str	r2, [r3]
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 559              		.loc 1 789 0
 560 0146 274B     		ldr	r3, .L29+68
 561 0148 0F22     		mov	r2, #15
 562 014a BA18     		add	r2, r7, r2
 563 014c 1278     		ldrb	r2, [r2]
 564 014e 1A60     		str	r2, [r3]
 790:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 565              		.loc 1 790 0
 566 0150 254B     		ldr	r3, .L29+72
 567 0152 0E22     		mov	r2, #14
 568 0154 BA18     		add	r2, r7, r2
 569 0156 1278     		ldrb	r2, [r2]
 570 0158 1A60     		str	r2, [r3]
 791:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 571              		.loc 1 791 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 25


 572 015a 0520     		mov	r0, #5
 573 015c FFF7FEFF 		bl	CyDelayUs
 792:.\Generated_Source\PSoC4/CyLib.c **** 
 793:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 574              		.loc 1 793 0
 575 0160 0B23     		mov	r3, #11
 576 0162 FA18     		add	r2, r7, r3
 577 0164 0D23     		mov	r3, #13
 578 0166 FB18     		add	r3, r7, r3
 579 0168 1278     		ldrb	r2, [r2]
 580 016a 1B78     		ldrb	r3, [r3]
 581 016c 9A42     		cmp	r2, r3
 582 016e 09D9     		bls	.L27
 794:.\Generated_Source\PSoC4/CyLib.c ****             {
 795:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 583              		.loc 1 796 0
 584 0170 1A4B     		ldr	r3, .L29+60
 585 0172 7A68     		ldr	r2, [r7, #4]
 586 0174 033A     		sub	r2, r2, #3
 587 0176 1849     		ldr	r1, .L29+56
 588 0178 8A5C     		ldrb	r2, [r1, r2]
 589 017a 1A60     		str	r2, [r3]
 797:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 590              		.loc 1 797 0
 591 017c 0520     		mov	r0, #5
 592 017e FFF7FEFF 		bl	CyDelayCycles
 793:.\Generated_Source\PSoC4/CyLib.c ****             {
 593              		.loc 1 793 0
 594 0182 03E0     		b	.L28
 595              	.L27:
 596 0184 02E0     		b	.L28
 597              	.L18:
 798:.\Generated_Source\PSoC4/CyLib.c ****             }
 799:.\Generated_Source\PSoC4/CyLib.c ****         }
 800:.\Generated_Source\PSoC4/CyLib.c ****         else
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 803:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 598              		.loc 1 803 0 discriminator 1
 599 0186 0020     		mov	r0, #0
 600 0188 FFF7FEFF 		bl	CyHalt
 601              	.L28:
 804:.\Generated_Source\PSoC4/CyLib.c ****         }
 805:.\Generated_Source\PSoC4/CyLib.c **** 
 806:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 809:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 810:.\Generated_Source\PSoC4/CyLib.c ****             {
 811:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 812:.\Generated_Source\PSoC4/CyLib.c ****             }
 813:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 814:.\Generated_Source\PSoC4/CyLib.c **** 
 815:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 816:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 817:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 26


 818:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 819:.\Generated_Source\PSoC4/CyLib.c ****             }
 820:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 821:.\Generated_Source\PSoC4/CyLib.c **** 
 822:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 602              		.loc 1 822 0
 603 018c 0C23     		mov	r3, #12
 604 018e FB18     		add	r3, r7, r3
 605 0190 1B78     		ldrb	r3, [r3]
 606 0192 181C     		mov	r0, r3
 607 0194 FFF7FEFF 		bl	CyExitCriticalSection
 823:.\Generated_Source\PSoC4/CyLib.c ****     }
 608              		.loc 1 823 0
 609 0198 BD46     		mov	sp, r7
 610 019a 05B0     		add	sp, sp, #20
 611              		@ sp needed
 612 019c 90BD     		pop	{r4, r7, pc}
 613              	.L30:
 614 019e C046     		.align	2
 615              	.L29:
 616 01a0 C0F1FF0F 		.word	268431808
 617 01a4 C1F1FF0F 		.word	268431809
 618 01a8 C2F1FF0F 		.word	268431810
 619 01ac C3F1FF0F 		.word	268431811
 620 01b0 C4F1FF0F 		.word	268431812
 621 01b4 C5F1FF0F 		.word	268431813
 622 01b8 C6F1FF0F 		.word	268431814
 623 01bc C7F1FF0F 		.word	268431815
 624 01c0 C8F1FF0F 		.word	268431816
 625 01c4 C9F1FF0F 		.word	268431817
 626 01c8 CAF1FF0F 		.word	268431818
 627 01cc CBF1FF0F 		.word	268431819
 628 01d0 CCF1FF0F 		.word	268431820
 629 01d4 CDF1FF0F 		.word	268431821
 630 01d8 00000000 		.word	cyImoFreqMhz2Reg
 631 01dc 2CFF0B40 		.word	1074528044
 632 01e0 28FF0B40 		.word	1074528040
 633 01e4 1CFF0B40 		.word	1074528028
 634 01e8 20FF0B40 		.word	1074528032
 635              		.cfi_endproc
 636              	.LFE5:
 637              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 638              		.section	.text.CySysLvdEnable,"ax",%progbits
 639              		.align	2
 640              		.global	CySysLvdEnable
 641              		.code	16
 642              		.thumb_func
 643              		.type	CySysLvdEnable, %function
 644              	CySysLvdEnable:
 645              	.LFB6:
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c **** #else
 826:.\Generated_Source\PSoC4/CyLib.c **** 
 827:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 828:.\Generated_Source\PSoC4/CyLib.c ****     {
 829:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 830:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 27


 831:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 832:.\Generated_Source\PSoC4/CyLib.c ****         {
 833:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 836:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 837:.\Generated_Source\PSoC4/CyLib.c **** 
 838:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 839:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 840:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 841:.\Generated_Source\PSoC4/CyLib.c **** 
 842:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 843:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 844:.\Generated_Source\PSoC4/CyLib.c **** 
 845:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 846:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 847:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 848:.\Generated_Source\PSoC4/CyLib.c **** 
 849:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 850:.\Generated_Source\PSoC4/CyLib.c **** 
 851:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 852:.\Generated_Source\PSoC4/CyLib.c ****             {
 853:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 854:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 855:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 858:.\Generated_Source\PSoC4/CyLib.c **** 
 859:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 860:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 861:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 862:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 863:.\Generated_Source\PSoC4/CyLib.c ****             }
 864:.\Generated_Source\PSoC4/CyLib.c **** 
 865:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 866:.\Generated_Source\PSoC4/CyLib.c ****         }
 867:.\Generated_Source\PSoC4/CyLib.c ****         else
 868:.\Generated_Source\PSoC4/CyLib.c ****         {
 869:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 870:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 871:.\Generated_Source\PSoC4/CyLib.c ****         }
 872:.\Generated_Source\PSoC4/CyLib.c ****     }
 873:.\Generated_Source\PSoC4/CyLib.c **** 
 874:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 875:.\Generated_Source\PSoC4/CyLib.c **** 
 876:.\Generated_Source\PSoC4/CyLib.c **** 
 877:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 878:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 879:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 880:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 881:.\Generated_Source\PSoC4/CyLib.c ****     *
 882:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 883:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 884:.\Generated_Source\PSoC4/CyLib.c ****     *
 885:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 886:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 887:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 28


 888:.\Generated_Source\PSoC4/CyLib.c ****     *
 889:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 890:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 891:.\Generated_Source\PSoC4/CyLib.c ****     *
 892:.\Generated_Source\PSoC4/CyLib.c ****     *
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 894:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 895:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 896:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 897:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 898:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 899:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 900:.\Generated_Source\PSoC4/CyLib.c ****     *
 901:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 902:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 903:.\Generated_Source\PSoC4/CyLib.c ****     *
 904:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 905:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 906:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 907:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 908:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 909:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 910:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 913:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 914:.\Generated_Source\PSoC4/CyLib.c ****     {
 915:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 916:.\Generated_Source\PSoC4/CyLib.c **** 
 917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 918:.\Generated_Source\PSoC4/CyLib.c **** 
 919:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 920:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 921:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 922:.\Generated_Source\PSoC4/CyLib.c **** 
 923:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 924:.\Generated_Source\PSoC4/CyLib.c ****     }
 925:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 926:.\Generated_Source\PSoC4/CyLib.c **** 
 927:.\Generated_Source\PSoC4/CyLib.c **** 
 928:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 929:.\Generated_Source\PSoC4/CyLib.c **** 
 930:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 931:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 932:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 933:.\Generated_Source\PSoC4/CyLib.c ****     *
 934:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 935:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 936:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 937:.\Generated_Source\PSoC4/CyLib.c ****     *
 938:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 939:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 940:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 941:.\Generated_Source\PSoC4/CyLib.c ****     *
 942:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 943:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 944:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 29


 945:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 946:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 947:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 948:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 949:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 950:.\Generated_Source\PSoC4/CyLib.c ****     *
 951:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 952:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 953:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 954:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 956:.\Generated_Source\PSoC4/CyLib.c ****     *
 957:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 958:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 959:.\Generated_Source\PSoC4/CyLib.c ****     {
 960:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 961:.\Generated_Source\PSoC4/CyLib.c **** 
 962:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 963:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 964:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 965:.\Generated_Source\PSoC4/CyLib.c **** 
 966:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 967:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 968:.\Generated_Source\PSoC4/CyLib.c **** 
 969:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 970:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 971:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 972:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 973:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 974:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 975:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 976:.\Generated_Source\PSoC4/CyLib.c **** 
 977:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 978:.\Generated_Source\PSoC4/CyLib.c ****         {
 979:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 980:.\Generated_Source\PSoC4/CyLib.c **** 
 981:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 982:.\Generated_Source\PSoC4/CyLib.c ****             {
 983:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 984:.\Generated_Source\PSoC4/CyLib.c **** 
 985:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 986:.\Generated_Source\PSoC4/CyLib.c ****                 {
 987:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 988:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 989:.\Generated_Source\PSoC4/CyLib.c ****                 }
 990:.\Generated_Source\PSoC4/CyLib.c ****             }
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****         }
 993:.\Generated_Source\PSoC4/CyLib.c **** 
 994:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 995:.\Generated_Source\PSoC4/CyLib.c ****     }
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c **** 
 998:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1000:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 30


1002:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1003:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
1004:.\Generated_Source\PSoC4/CyLib.c ****     *
1005:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1006:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1007:.\Generated_Source\PSoC4/CyLib.c ****     *
1008:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1009:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1010:.\Generated_Source\PSoC4/CyLib.c ****     *
1011:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1012:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1013:.\Generated_Source\PSoC4/CyLib.c ****     {
1014:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1015:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1016:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1019:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1020:.\Generated_Source\PSoC4/CyLib.c ****         #else
1021:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1022:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1023:.\Generated_Source\PSoC4/CyLib.c ****     }
1024:.\Generated_Source\PSoC4/CyLib.c **** 
1025:.\Generated_Source\PSoC4/CyLib.c **** 
1026:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1027:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1028:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1029:.\Generated_Source\PSoC4/CyLib.c ****     *
1030:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1031:.\Generated_Source\PSoC4/CyLib.c ****     *  Reads the status bit for the megahertz crystal.
1032:.\Generated_Source\PSoC4/CyLib.c ****     *
1033:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4100 BLE/PSoC 4200 BLE devices, the status bit is the XO_AMP_DETECT
1034:.\Generated_Source\PSoC4/CyLib.c ****     *  bit in FSM register.
1035:.\Generated_Source\PSoC4/CyLib.c ****     *
1036:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1037:.\Generated_Source\PSoC4/CyLib.c ****     *  ECO_STATUS register.
1038:.\Generated_Source\PSoC4/CyLib.c ****     *
1039:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1040:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1041:.\Generated_Source\PSoC4/CyLib.c ****     *
1042:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1043:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 BLE/PSoC 4200 BLE:
1044:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO output reached 50 ppm and is oscillating in valid
1045:.\Generated_Source\PSoC4/CyLib.c ****     *  range.
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4200L:
1048:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO is running.
1049:.\Generated_Source\PSoC4/CyLib.c ****     *
1050:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1051:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1052:.\Generated_Source\PSoC4/CyLib.c ****     {
1053:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1056:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1057:.\Generated_Source\PSoC4/CyLib.c ****         #else
1058:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 31


1059:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1060:.\Generated_Source\PSoC4/CyLib.c **** 
1061:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1062:.\Generated_Source\PSoC4/CyLib.c ****     }
1063:.\Generated_Source\PSoC4/CyLib.c **** 
1064:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1065:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1066:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1067:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1068:.\Generated_Source\PSoC4/CyLib.c ****         *
1069:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1070:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects value for the ECO divider.
1071:.\Generated_Source\PSoC4/CyLib.c ****         *
1072:.\Generated_Source\PSoC4/CyLib.c ****         *  The ECO must not be the HFCLK clock source when this function is called.
1073:.\Generated_Source\PSoC4/CyLib.c ****         *  The HFCLK source can be changed to the other clock source by call to the
1074:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1075:.\Generated_Source\PSoC4/CyLib.c ****         *  function will not have any effect if compiler in release mode, and halt the
1076:.\Generated_Source\PSoC4/CyLib.c ****         *  CPU when compiler in debug mode.
1077:.\Generated_Source\PSoC4/CyLib.c ****         *
1078:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1079:.\Generated_Source\PSoC4/CyLib.c ****         *  divider: Power of 2 divider selection.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         *   Define                        Description
1082:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
1083:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
1084:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
1085:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1088:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1089:.\Generated_Source\PSoC4/CyLib.c ****         *
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1091:.\Generated_Source\PSoC4/CyLib.c ****         *  If the SYSCLK clock frequency increases during the device operation, call
1092:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1093:.\Generated_Source\PSoC4/CyLib.c ****         *  of clock cycles the cache will wait before sampling data comes back from
1094:.\Generated_Source\PSoC4/CyLib.c ****         *  Flash. If the SYSCLK clock frequency decreases, you can call
1095:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() to improve the CPU performance. See
1096:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() description for more information.
1097:.\Generated_Source\PSoC4/CyLib.c ****         *
1098:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1099:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1100:.\Generated_Source\PSoC4/CyLib.c ****         {
1101:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1102:.\Generated_Source\PSoC4/CyLib.c **** 
1103:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1104:.\Generated_Source\PSoC4/CyLib.c ****             {
1105:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1108:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1111:.\Generated_Source\PSoC4/CyLib.c ****             }
1112:.\Generated_Source\PSoC4/CyLib.c ****             else
1113:.\Generated_Source\PSoC4/CyLib.c ****             {
1114:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1115:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 32


1116:.\Generated_Source\PSoC4/CyLib.c ****             }
1117:.\Generated_Source\PSoC4/CyLib.c ****         }
1118:.\Generated_Source\PSoC4/CyLib.c **** 
1119:.\Generated_Source\PSoC4/CyLib.c ****     #else
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1122:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1123:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         *
1125:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1126:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO. This API is available only for PSoC
1127:.\Generated_Source\PSoC4/CyLib.c ****         *  4200L devices only.
1128:.\Generated_Source\PSoC4/CyLib.c ****         *
1129:.\Generated_Source\PSoC4/CyLib.c ****         *  The following parameters can be trimmed for ECO. The affected registers are
1130:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_TRIM0 and ECO_TRIM1.
1131:.\Generated_Source\PSoC4/CyLib.c ****         *
1132:.\Generated_Source\PSoC4/CyLib.c ****         *  Watchdog trim - This bit field sets the error threshold below the steady
1133:.\Generated_Source\PSoC4/CyLib.c ****         *  state amplitude level.
1134:.\Generated_Source\PSoC4/CyLib.c ****         *
1135:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplitude trim - This bit field is to set the crystal drive level when
1136:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1137:.\Generated_Source\PSoC4/CyLib.c ****         *  driving a crystal beyond its rated limit can permanently damage the crystal.
1138:.\Generated_Source\PSoC4/CyLib.c ****         *
1139:.\Generated_Source\PSoC4/CyLib.c ****         *  Filter frequency trim - This bit field sets LPF frequency trim and affects
1140:.\Generated_Source\PSoC4/CyLib.c ****         *  the 3rd harmonic content.
1141:.\Generated_Source\PSoC4/CyLib.c ****         *
1142:.\Generated_Source\PSoC4/CyLib.c ****         *  Feedback resistor trim - This bit field sets the feedback resistor trim and
1143:.\Generated_Source\PSoC4/CyLib.c ****         *  impacts the oscillation amplitude.
1144:.\Generated_Source\PSoC4/CyLib.c ****         *
1145:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1146:.\Generated_Source\PSoC4/CyLib.c ****         *  the startup time of the crystal.
1147:.\Generated_Source\PSoC4/CyLib.c ****         *
1148:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1149:.\Generated_Source\PSoC4/CyLib.c ****         *  wDTrim: Watchdog trim
1150:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1151:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1152:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1153:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         *
1156:.\Generated_Source\PSoC4/CyLib.c ****         *  aTrim: Amplitude trim
1157:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1158:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1159:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         *
1167:.\Generated_Source\PSoC4/CyLib.c ****         *  fTrim: Filter frequency trim
1168:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1169:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 33


1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         *  rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1176:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz        *
1180:.\Generated_Source\PSoC4/CyLib.c ****         *
1181:.\Generated_Source\PSoC4/CyLib.c ****         *  gTrim: Amplifier gain trim. Calculate the minimum required gm
1182:.\Generated_Source\PSoC4/CyLib.c ****         *         (trans-conductance value). Divide the calculated gm value by
1183:.\Generated_Source\PSoC4/CyLib.c ****         *         4.5 to obtain an integer value 'result'. For more information
1184:.\Generated_Source\PSoC4/CyLib.c ****         *         please refer to the device TRM.
1185:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1186:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM0       If result = 1
1187:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM1       If result = 0
1188:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 2
1189:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 3
1190:.\Generated_Source\PSoC4/CyLib.c **** 
1191:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1192:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1193:.\Generated_Source\PSoC4/CyLib.c ****         *
1194:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1195:.\Generated_Source\PSoC4/CyLib.c ****         *  Use care when setting the amplitude trim field because driving a crystal
1196:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1197:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1198:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1199:.\Generated_Source\PSoC4/CyLib.c ****         {
1200:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1201:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1204:.\Generated_Source\PSoC4/CyLib.c **** 
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1208:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1209:.\Generated_Source\PSoC4/CyLib.c **** 
1210:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1211:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1212:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1213:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1214:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1215:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1216:.\Generated_Source\PSoC4/CyLib.c **** 
1217:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1218:.\Generated_Source\PSoC4/CyLib.c **** 
1219:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1220:.\Generated_Source\PSoC4/CyLib.c ****         }
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1225:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c ****         *
1227:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO based on crystal parameters. Use care
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  when setting the driveLevel parameter because driving a crystal beyond its
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 34


1230:.\Generated_Source\PSoC4/CyLib.c ****         *  rated limit can permanently damage the crystal.
1231:.\Generated_Source\PSoC4/CyLib.c ****         *
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4200L devices only.
1233:.\Generated_Source\PSoC4/CyLib.c ****         *
1234:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  freq: frequency of the crystal in kHz.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *  cLoad: crystal load capacitance in pF.
1237:.\Generated_Source\PSoC4/CyLib.c ****         *  esr: equivalent series resistance of the crystal in ohm.
1238:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1239:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1240:.\Generated_Source\PSoC4/CyLib.c ****         *
1241:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1242:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1243:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1244:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1245:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1246:.\Generated_Source\PSoC4/CyLib.c ****         *
1247:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1248:.\Generated_Source\PSoC4/CyLib.c ****         *  status:
1249:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_SUCCESS - ECO configuration completed successfully.
1250:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_BAD_PARAM - One or more invalid parameters
1251:.\Generated_Source\PSoC4/CyLib.c ****         *
1252:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1253:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1254:.\Generated_Source\PSoC4/CyLib.c ****         {
1255:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1256:.\Generated_Source\PSoC4/CyLib.c **** 
1257:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1258:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1259:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1260:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1261:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1264:.\Generated_Source\PSoC4/CyLib.c **** 
1265:.\Generated_Source\PSoC4/CyLib.c **** 
1266:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1267:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1268:.\Generated_Source\PSoC4/CyLib.c ****             {
1269:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1270:.\Generated_Source\PSoC4/CyLib.c ****             }
1271:.\Generated_Source\PSoC4/CyLib.c ****             else
1272:.\Generated_Source\PSoC4/CyLib.c ****             {
1273:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1274:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1275:.\Generated_Source\PSoC4/CyLib.c **** 
1276:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 35


1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1297:.\Generated_Source\PSoC4/CyLib.c ****                 {
1298:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1299:.\Generated_Source\PSoC4/CyLib.c ****                 }
1300:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1301:.\Generated_Source\PSoC4/CyLib.c ****                 {
1302:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1303:.\Generated_Source\PSoC4/CyLib.c ****                 }
1304:.\Generated_Source\PSoC4/CyLib.c ****                 else
1305:.\Generated_Source\PSoC4/CyLib.c ****                 {
1306:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1307:.\Generated_Source\PSoC4/CyLib.c ****                 }
1308:.\Generated_Source\PSoC4/CyLib.c **** 
1309:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1310:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1311:.\Generated_Source\PSoC4/CyLib.c **** 
1312:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1313:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1314:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1315:.\Generated_Source\PSoC4/CyLib.c ****                 {
1316:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1317:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1318:.\Generated_Source\PSoC4/CyLib.c ****                 }
1319:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1320:.\Generated_Source\PSoC4/CyLib.c ****                 {
1321:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1322:.\Generated_Source\PSoC4/CyLib.c ****                 }
1323:.\Generated_Source\PSoC4/CyLib.c ****                 else
1324:.\Generated_Source\PSoC4/CyLib.c ****                 {
1325:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1326:.\Generated_Source\PSoC4/CyLib.c ****                 }
1327:.\Generated_Source\PSoC4/CyLib.c **** 
1328:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1329:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1334:.\Generated_Source\PSoC4/CyLib.c ****                 {
1335:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1336:.\Generated_Source\PSoC4/CyLib.c ****                 }
1337:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1338:.\Generated_Source\PSoC4/CyLib.c ****                 {
1339:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1340:.\Generated_Source\PSoC4/CyLib.c ****                 }
1341:.\Generated_Source\PSoC4/CyLib.c ****                 else
1342:.\Generated_Source\PSoC4/CyLib.c ****                 {
1343:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 36


1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c **** 
1346:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1347:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1348:.\Generated_Source\PSoC4/CyLib.c **** 
1349:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1350:.\Generated_Source\PSoC4/CyLib.c **** 
1351:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1352:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1353:.\Generated_Source\PSoC4/CyLib.c ****                 {
1354:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1355:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1356:.\Generated_Source\PSoC4/CyLib.c ****                 }
1357:.\Generated_Source\PSoC4/CyLib.c ****                 else
1358:.\Generated_Source\PSoC4/CyLib.c ****                 {
1359:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1360:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1361:.\Generated_Source\PSoC4/CyLib.c ****                     */
1362:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1363:.\Generated_Source\PSoC4/CyLib.c ****                 }
1364:.\Generated_Source\PSoC4/CyLib.c ****             }
1365:.\Generated_Source\PSoC4/CyLib.c **** 
1366:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1367:.\Generated_Source\PSoC4/CyLib.c ****         }
1368:.\Generated_Source\PSoC4/CyLib.c **** 
1369:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1370:.\Generated_Source\PSoC4/CyLib.c **** 
1371:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1372:.\Generated_Source\PSoC4/CyLib.c **** 
1373:.\Generated_Source\PSoC4/CyLib.c **** 
1374:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1375:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1376:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1377:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1380:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the PLL. Optionally waits for it to become stable. Waits at least
1381:.\Generated_Source\PSoC4/CyLib.c ****     *  250 us or until it is detected that the PLL is stable.
1382:.\Generated_Source\PSoC4/CyLib.c ****     *
1383:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1384:.\Generated_Source\PSoC4/CyLib.c ****     *  once the PLL is locked if the wait parameter is 1).
1385:.\Generated_Source\PSoC4/CyLib.c ****     *
1386:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1387:.\Generated_Source\PSoC4/CyLib.c ****     *
1388:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1389:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1390:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1391:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1392:.\Generated_Source\PSoC4/CyLib.c ****     *
1393:.\Generated_Source\PSoC4/CyLib.c ****     *  wait:
1394:.\Generated_Source\PSoC4/CyLib.c ****     *  0 - Return immediately after configuration.
1395:.\Generated_Source\PSoC4/CyLib.c ****     *  1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1396:.\Generated_Source\PSoC4/CyLib.c ****     *  implement the timeout feature.
1397:.\Generated_Source\PSoC4/CyLib.c ****     *
1398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1399:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1400:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 37


1401:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_TIMEOUT - The timeout occurred without detecting a stable clock.  If the
1402:.\Generated_Source\PSoC4/CyLib.c ****     *  input source of the clock is jittery, then the lock indication may not occur.
1403:.\Generated_Source\PSoC4/CyLib.c ****     *  However, after the timeout has expired, the generated PLL clock can still be
1404:.\Generated_Source\PSoC4/CyLib.c ****     *  used.
1405:.\Generated_Source\PSoC4/CyLib.c ****     *
1406:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1407:.\Generated_Source\PSoC4/CyLib.c ****     *
1408:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1410:.\Generated_Source\PSoC4/CyLib.c ****     {
1411:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1412:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1413:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1414:.\Generated_Source\PSoC4/CyLib.c **** 
1415:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1416:.\Generated_Source\PSoC4/CyLib.c ****         {
1417:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1418:.\Generated_Source\PSoC4/CyLib.c **** 
1419:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1420:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1421:.\Generated_Source\PSoC4/CyLib.c **** 
1422:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1423:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1424:.\Generated_Source\PSoC4/CyLib.c **** 
1425:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1426:.\Generated_Source\PSoC4/CyLib.c **** 
1427:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1428:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1429:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1430:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1431:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1432:.\Generated_Source\PSoC4/CyLib.c **** 
1433:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1434:.\Generated_Source\PSoC4/CyLib.c ****             {
1435:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1438:.\Generated_Source\PSoC4/CyLib.c ****                 {
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1441:.\Generated_Source\PSoC4/CyLib.c ****                     {
1442:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1443:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1444:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1445:.\Generated_Source\PSoC4/CyLib.c ****                     }
1446:.\Generated_Source\PSoC4/CyLib.c **** 
1447:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1448:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1449:.\Generated_Source\PSoC4/CyLib.c ****                 }
1450:.\Generated_Source\PSoC4/CyLib.c ****             }
1451:.\Generated_Source\PSoC4/CyLib.c ****         }
1452:.\Generated_Source\PSoC4/CyLib.c ****         else
1453:.\Generated_Source\PSoC4/CyLib.c ****         {
1454:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1455:.\Generated_Source\PSoC4/CyLib.c ****         }
1456:.\Generated_Source\PSoC4/CyLib.c **** 
1457:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 38


1458:.\Generated_Source\PSoC4/CyLib.c ****     }
1459:.\Generated_Source\PSoC4/CyLib.c **** 
1460:.\Generated_Source\PSoC4/CyLib.c **** 
1461:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1462:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1463:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1464:.\Generated_Source\PSoC4/CyLib.c ****     *
1465:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1466:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero if the output of the specified PLL output is locked.
1467:.\Generated_Source\PSoC4/CyLib.c ****     *
1468:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1469:.\Generated_Source\PSoC4/CyLib.c ****     *
1470:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1471:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1472:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1473:.\Generated_Source\PSoC4/CyLib.c ****     *
1474:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1475:.\Generated_Source\PSoC4/CyLib.c ****     *  A non-zero value when the specified PLL is locked.
1476:.\Generated_Source\PSoC4/CyLib.c ****     *
1477:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1478:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1479:.\Generated_Source\PSoC4/CyLib.c ****     {
1480:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1481:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1482:.\Generated_Source\PSoC4/CyLib.c **** 
1483:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1484:.\Generated_Source\PSoC4/CyLib.c **** 
1485:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1486:.\Generated_Source\PSoC4/CyLib.c **** 
1487:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1488:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1489:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1490:.\Generated_Source\PSoC4/CyLib.c ****         {
1491:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1492:.\Generated_Source\PSoC4/CyLib.c ****         }
1493:.\Generated_Source\PSoC4/CyLib.c **** 
1494:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1495:.\Generated_Source\PSoC4/CyLib.c **** 
1496:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1497:.\Generated_Source\PSoC4/CyLib.c ****     }
1498:.\Generated_Source\PSoC4/CyLib.c **** 
1499:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1500:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1501:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1502:.\Generated_Source\PSoC4/CyLib.c ****     *
1503:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1504:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the PLL and isolates its outputs.
1505:.\Generated_Source\PSoC4/CyLib.c ****     *
1506:.\Generated_Source\PSoC4/CyLib.c ****     *  Ensures that either PLL is not the source of HFCLK before it is disabled,
1507:.\Generated_Source\PSoC4/CyLib.c ****     *  otherwise, the CPU will halt.
1508:.\Generated_Source\PSoC4/CyLib.c ****     *
1509:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1510:.\Generated_Source\PSoC4/CyLib.c ****     *
1511:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1512:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1513:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1514:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 39


1515:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1516:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1519:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1520:.\Generated_Source\PSoC4/CyLib.c ****     {
1521:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1522:.\Generated_Source\PSoC4/CyLib.c **** 
1523:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1524:.\Generated_Source\PSoC4/CyLib.c ****         {
1525:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1526:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1527:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1528:.\Generated_Source\PSoC4/CyLib.c ****         }
1529:.\Generated_Source\PSoC4/CyLib.c ****     }
1530:.\Generated_Source\PSoC4/CyLib.c **** 
1531:.\Generated_Source\PSoC4/CyLib.c **** 
1532:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1533:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1534:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1537:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets feedback (P) and reference the (Q) divider value. This API also sets the
1538:.\Generated_Source\PSoC4/CyLib.c ****     *  programmable charge pump current value. Note that the PLL has to be disabled
1539:.\Generated_Source\PSoC4/CyLib.c ****     *  before calling this API. If this function is called while any PLL is sourcing,
1540:.\Generated_Source\PSoC4/CyLib.c ****     *  the SYSCLK will return an error.
1541:.\Generated_Source\PSoC4/CyLib.c ****     *
1542:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1543:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1544:.\Generated_Source\PSoC4/CyLib.c ****     *
1545:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1546:.\Generated_Source\PSoC4/CyLib.c ****     *
1547:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1548:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1549:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1550:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1551:.\Generated_Source\PSoC4/CyLib.c ****     *
1552:.\Generated_Source\PSoC4/CyLib.c ****     *  feedback: P divider
1553:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 4 - 259. Control bits for the feedback divider
1554:.\Generated_Source\PSoC4/CyLib.c ****     *
1555:.\Generated_Source\PSoC4/CyLib.c ****     *  reference: The Q divider.
1556:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 1 - 64. Divide by the reference.
1557:.\Generated_Source\PSoC4/CyLib.c ****     *
1558:.\Generated_Source\PSoC4/CyLib.c ****     *  current: Charge the pump current in uA. The 2 uA for output frequencies
1559:.\Generated_Source\PSoC4/CyLib.c ****     *  of 67 MHz or less, and 3 uA for higher output frequencies. The default
1560:.\Generated_Source\PSoC4/CyLib.c ****     *  value is 2 uA.
1561:.\Generated_Source\PSoC4/CyLib.c ****     *
1562:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1563:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1564:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL sources
1565:.\Generated_Source\PSoC4/CyLib.c ****     *  the system clock.
1566:.\Generated_Source\PSoC4/CyLib.c ****     *
1567:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1568:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1569:.\Generated_Source\PSoC4/CyLib.c ****     {
1570:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1571:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 40


1572:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1573:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1574:.\Generated_Source\PSoC4/CyLib.c **** 
1575:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1580:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1581:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1582:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1583:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1584:.\Generated_Source\PSoC4/CyLib.c ****         {
1585:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1586:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1587:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1588:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1589:.\Generated_Source\PSoC4/CyLib.c **** 
1590:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1591:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1592:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1593:.\Generated_Source\PSoC4/CyLib.c **** 
1594:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1595:.\Generated_Source\PSoC4/CyLib.c **** 
1596:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1597:.\Generated_Source\PSoC4/CyLib.c ****         }
1598:.\Generated_Source\PSoC4/CyLib.c **** 
1599:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1600:.\Generated_Source\PSoC4/CyLib.c **** 
1601:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1602:.\Generated_Source\PSoC4/CyLib.c ****     }
1603:.\Generated_Source\PSoC4/CyLib.c **** 
1604:.\Generated_Source\PSoC4/CyLib.c **** 
1605:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1607:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1608:.\Generated_Source\PSoC4/CyLib.c ****     *
1609:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1610:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the bypass mode for the specified PLL.
1611:.\Generated_Source\PSoC4/CyLib.c ****     *
1612:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function.
1613:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL output will glitch during this function call.
1614:.\Generated_Source\PSoC4/CyLib.c ****     *
1615:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1616:.\Generated_Source\PSoC4/CyLib.c ****     *
1617:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1618:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1619:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1620:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1621:.\Generated_Source\PSoC4/CyLib.c ****     *
1622:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: The bypass mode.
1623:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1624:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects PLL the reference input (bypass mode). When locked,
1625:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects the PLL output.
1626:.\Generated_Source\PSoC4/CyLib.c ****     *
1627:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1628:.\Generated_Source\PSoC4/CyLib.c ****     *   Ignores the lock indicator.
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 41


1629:.\Generated_Source\PSoC4/CyLib.c ****     *
1630:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1631:.\Generated_Source\PSoC4/CyLib.c ****     *
1632:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1633:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1634:.\Generated_Source\PSoC4/CyLib.c ****     *
1635:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1636:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1637:.\Generated_Source\PSoC4/CyLib.c ****     {
1638:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1639:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1640:.\Generated_Source\PSoC4/CyLib.c **** 
1641:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1642:.\Generated_Source\PSoC4/CyLib.c **** 
1643:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1644:.\Generated_Source\PSoC4/CyLib.c ****         {
1645:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1646:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1647:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1648:.\Generated_Source\PSoC4/CyLib.c ****         }
1649:.\Generated_Source\PSoC4/CyLib.c **** 
1650:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1651:.\Generated_Source\PSoC4/CyLib.c ****     }
1652:.\Generated_Source\PSoC4/CyLib.c **** 
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1655:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1656:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1657:.\Generated_Source\PSoC4/CyLib.c ****     *
1658:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1659:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1660:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1661:.\Generated_Source\PSoC4/CyLib.c ****     *
1662:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1663:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1664:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1665:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  Return
1668:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: Bypass mode.
1669:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1670:.\Generated_Source\PSoC4/CyLib.c ****     *
1671:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1672:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1673:.\Generated_Source\PSoC4/CyLib.c ****     {
1674:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1675:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1676:.\Generated_Source\PSoC4/CyLib.c **** 
1677:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1678:.\Generated_Source\PSoC4/CyLib.c **** 
1679:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1680:.\Generated_Source\PSoC4/CyLib.c **** 
1681:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1682:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1683:.\Generated_Source\PSoC4/CyLib.c **** 
1684:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 42


1686:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:.\Generated_Source\PSoC4/CyLib.c ****     }
1688:.\Generated_Source\PSoC4/CyLib.c **** 
1689:.\Generated_Source\PSoC4/CyLib.c **** 
1690:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1692:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1693:.\Generated_Source\PSoC4/CyLib.c ****     *
1694:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1695:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1696:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1697:.\Generated_Source\PSoC4/CyLib.c ****     *
1698:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1699:.\Generated_Source\PSoC4/CyLib.c ****     *
1700:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1702:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:.\Generated_Source\PSoC4/CyLib.c ****     *
1705:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL sources the System clock and the PLL
1707:.\Generated_Source\PSoC4/CyLib.c ****     *  is not in the bypass mode.
1708:.\Generated_Source\PSoC4/CyLib.c ****     *
1709:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1710:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1711:.\Generated_Source\PSoC4/CyLib.c ****     {
1712:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1713:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1714:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1715:.\Generated_Source\PSoC4/CyLib.c **** 
1716:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1717:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1718:.\Generated_Source\PSoC4/CyLib.c **** 
1719:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1720:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1721:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1722:.\Generated_Source\PSoC4/CyLib.c ****         {
1723:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1724:.\Generated_Source\PSoC4/CyLib.c ****         }
1725:.\Generated_Source\PSoC4/CyLib.c **** 
1726:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1727:.\Generated_Source\PSoC4/CyLib.c ****     }
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1732:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c ****     *
1734:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1736:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1737:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1738:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1739:.\Generated_Source\PSoC4/CyLib.c ****     *
1740:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 43


1743:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1744:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1745:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1746:.\Generated_Source\PSoC4/CyLib.c ****     *
1747:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1748:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL was unlocked.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1751:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1752:.\Generated_Source\PSoC4/CyLib.c ****     {
1753:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1754:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:.\Generated_Source\PSoC4/CyLib.c **** 
1756:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1757:.\Generated_Source\PSoC4/CyLib.c **** 
1758:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1759:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1760:.\Generated_Source\PSoC4/CyLib.c **** 
1761:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1762:.\Generated_Source\PSoC4/CyLib.c **** 
1763:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1764:.\Generated_Source\PSoC4/CyLib.c ****     }
1765:.\Generated_Source\PSoC4/CyLib.c **** 
1766:.\Generated_Source\PSoC4/CyLib.c **** 
1767:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1768:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1769:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1770:.\Generated_Source\PSoC4/CyLib.c ****     *
1771:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1772:.\Generated_Source\PSoC4/CyLib.c ****     *  Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1773:.\Generated_Source\PSoC4/CyLib.c ****     *  The input frequency is the frequency of the source to the PLL. The source is
1774:.\Generated_Source\PSoC4/CyLib.c ****     *  set using the CySysClkPllSetSource() function.
1775:.\Generated_Source\PSoC4/CyLib.c ****     *
1776:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1777:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1778:.\Generated_Source\PSoC4/CyLib.c ****     *
1779:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1780:.\Generated_Source\PSoC4/CyLib.c ****     *
1781:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1782:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1783:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1784:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1785:.\Generated_Source\PSoC4/CyLib.c ****     *
1786:.\Generated_Source\PSoC4/CyLib.c ****     *  inputFreq:
1787:.\Generated_Source\PSoC4/CyLib.c ****     *   The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1788:.\Generated_Source\PSoC4/CyLib.c ****     *
1789:.\Generated_Source\PSoC4/CyLib.c ****     *  pllFreq:
1790:.\Generated_Source\PSoC4/CyLib.c ****     *   The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1791:.\Generated_Source\PSoC4/CyLib.c ****     *
1792:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1793:.\Generated_Source\PSoC4/CyLib.c ****     *  The output clock divider for the PLL:
1794:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1795:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1796:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1797:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1798:.\Generated_Source\PSoC4/CyLib.c ****     *
1799:.\Generated_Source\PSoC4/CyLib.c ****     * freqTol:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 44


1800:.\Generated_Source\PSoC4/CyLib.c ****     *  The tolerance in ppm, 10 ppm is equal to 0.001%.
1801:.\Generated_Source\PSoC4/CyLib.c ****     *
1802:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1803:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - The PLL was successfully configured for the requested
1804:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency.
1805:.\Generated_Source\PSoC4/CyLib.c ****     *
1806:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The PLL was not able to successfully configure for the
1807:.\Generated_Source\PSoC4/CyLib.c ****     *  requested frequency.
1808:.\Generated_Source\PSoC4/CyLib.c ****     *
1809:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1810:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1811:.\Generated_Source\PSoC4/CyLib.c ****     {
1812:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1813:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1814:.\Generated_Source\PSoC4/CyLib.c **** 
1815:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1816:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1817:.\Generated_Source\PSoC4/CyLib.c **** 
1818:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1819:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1820:.\Generated_Source\PSoC4/CyLib.c **** 
1821:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1822:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1823:.\Generated_Source\PSoC4/CyLib.c **** 
1824:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1825:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c **** 
1828:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1829:.\Generated_Source\PSoC4/CyLib.c **** 
1830:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1831:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1832:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1833:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1834:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c **** 
1837:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1838:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1839:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1842:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1843:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1846:.\Generated_Source\PSoC4/CyLib.c ****             {
1847:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1848:.\Generated_Source\PSoC4/CyLib.c ****                 {
1849:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1850:.\Generated_Source\PSoC4/CyLib.c **** 
1851:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1852:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1853:.\Generated_Source\PSoC4/CyLib.c **** 
1854:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1855:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1856:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 45


1857:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1858:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1859:.\Generated_Source\PSoC4/CyLib.c **** 
1860:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1861:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1862:.\Generated_Source\PSoC4/CyLib.c ****                     {
1863:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1864:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1865:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1866:.\Generated_Source\PSoC4/CyLib.c ****                     }
1867:.\Generated_Source\PSoC4/CyLib.c ****                 }
1868:.\Generated_Source\PSoC4/CyLib.c **** 
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1871:.\Generated_Source\PSoC4/CyLib.c ****                 {
1872:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1873:.\Generated_Source\PSoC4/CyLib.c ****                     {
1874:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1875:.\Generated_Source\PSoC4/CyLib.c ****                     }
1876:.\Generated_Source\PSoC4/CyLib.c ****                 }
1877:.\Generated_Source\PSoC4/CyLib.c ****             }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         }
1880:.\Generated_Source\PSoC4/CyLib.c **** 
1881:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1882:.\Generated_Source\PSoC4/CyLib.c ****     }
1883:.\Generated_Source\PSoC4/CyLib.c **** 
1884:.\Generated_Source\PSoC4/CyLib.c **** 
1885:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1886:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1887:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must not be the system clock
1891:.\Generated_Source\PSoC4/CyLib.c ****     *  source when calling this function. The PLL output will glitch during this
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  function call.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1895:.\Generated_Source\PSoC4/CyLib.c ****     *
1896:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1897:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1898:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1900:.\Generated_Source\PSoC4/CyLib.c ****     *
1901:.\Generated_Source\PSoC4/CyLib.c ****     * source:
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1903:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1904:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1905:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1906:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1907:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1908:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1909:.\Generated_Source\PSoC4/CyLib.c ****     *
1910:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1911:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1912:.\Generated_Source\PSoC4/CyLib.c ****     *
1913:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 46


1914:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1915:.\Generated_Source\PSoC4/CyLib.c ****     {
1916:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1917:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1924:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1925:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1926:.\Generated_Source\PSoC4/CyLib.c ****         }
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1929:.\Generated_Source\PSoC4/CyLib.c ****     }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c **** 
1932:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1933:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1934:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1935:.\Generated_Source\PSoC4/CyLib.c ****     *
1936:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1937:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1938:.\Generated_Source\PSoC4/CyLib.c ****     *
1939:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1940:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1941:.\Generated_Source\PSoC4/CyLib.c ****     *
1942:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1946:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1947:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1948:.\Generated_Source\PSoC4/CyLib.c ****     *
1949:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1950:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1951:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1952:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1953:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1954:.\Generated_Source\PSoC4/CyLib.c ****     *
1955:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1956:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS   - Completed successfully.
1957:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL
1958:.\Generated_Source\PSoC4/CyLib.c ****     *                    sources the System clock.
1959:.\Generated_Source\PSoC4/CyLib.c ****     *
1960:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1961:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1962:.\Generated_Source\PSoC4/CyLib.c ****     {
1963:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1964:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1965:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1966:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1967:.\Generated_Source\PSoC4/CyLib.c **** 
1968:.\Generated_Source\PSoC4/CyLib.c **** 
1969:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1970:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 47


1971:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1972:.\Generated_Source\PSoC4/CyLib.c **** 
1973:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1974:.\Generated_Source\PSoC4/CyLib.c ****         {
1975:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1976:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1979:.\Generated_Source\PSoC4/CyLib.c **** 
1980:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1981:.\Generated_Source\PSoC4/CyLib.c ****         }
1982:.\Generated_Source\PSoC4/CyLib.c **** 
1983:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1984:.\Generated_Source\PSoC4/CyLib.c **** 
1985:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1986:.\Generated_Source\PSoC4/CyLib.c ****     }
1987:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1988:.\Generated_Source\PSoC4/CyLib.c **** 
1989:.\Generated_Source\PSoC4/CyLib.c **** 
1990:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1997:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1998:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1999:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2000:.\Generated_Source\PSoC4/CyLib.c ****     *
2001:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
2003:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2004:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2005:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2006:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2007:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2008:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2009:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2010:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2011:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2012:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2013:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2015:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2016:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2017:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2018:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2019:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2020:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2021:.\Generated_Source\PSoC4/CyLib.c ****     *
2022:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2023:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2024:.\Generated_Source\PSoC4/CyLib.c ****     *
2025:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2027:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 48


 646              		.loc 1 2027 0
 647              		.cfi_startproc
 648 0000 80B5     		push	{r7, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 82B0     		sub	sp, sp, #8
 653              		.cfi_def_cfa_offset 16
 654 0004 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 656 0006 7860     		str	r0, [r7, #4]
2028:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2029:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 657              		.loc 1 2029 0
 658 0008 134B     		ldr	r3, .L32
 659 000a 134A     		ldr	r2, .L32
 660 000c 1268     		ldr	r2, [r2]
 661 000e 0221     		mov	r1, #2
 662 0010 8A43     		bic	r2, r1
 663 0012 1A60     		str	r2, [r3]
2030:.\Generated_Source\PSoC4/CyLib.c **** 
2031:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2032:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 664              		.loc 1 2032 0
 665 0014 114B     		ldr	r3, .L32+4
 666 0016 114A     		ldr	r2, .L32+4
 667 0018 1268     		ldr	r2, [r2]
 668 001a 1E21     		mov	r1, #30
 669 001c 8A43     		bic	r2, r1
 670 001e 111C     		mov	r1, r2
2033:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 671              		.loc 1 2033 0
 672 0020 7A68     		ldr	r2, [r7, #4]
 673 0022 5200     		lsl	r2, r2, #1
 674 0024 1E20     		mov	r0, #30
 675 0026 0240     		and	r2, r0
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 676              		.loc 1 2032 0
 677 0028 0A43     		orr	r2, r1
 678 002a 1A60     		str	r2, [r3]
2034:.\Generated_Source\PSoC4/CyLib.c **** 
2035:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2036:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 679              		.loc 1 2036 0
 680 002c 0B4B     		ldr	r3, .L32+4
 681 002e 0B4A     		ldr	r2, .L32+4
 682 0030 1268     		ldr	r2, [r2]
 683 0032 0121     		mov	r1, #1
 684 0034 0A43     		orr	r2, r1
 685 0036 1A60     		str	r2, [r3]
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2039:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 686              		.loc 1 2039 0
 687 0038 FA23     		mov	r3, #250
 688 003a 9B00     		lsl	r3, r3, #2
 689 003c 181C     		mov	r0, r3
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 49


 690 003e FFF7FEFF 		bl	CyDelayUs
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2042:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 691              		.loc 1 2042 0
 692 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2043:.\Generated_Source\PSoC4/CyLib.c **** 
2044:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2045:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 693              		.loc 1 2045 0
 694 0046 044B     		ldr	r3, .L32
 695 0048 034A     		ldr	r2, .L32
 696 004a 1268     		ldr	r2, [r2]
 697 004c 0221     		mov	r1, #2
 698 004e 0A43     		orr	r2, r1
 699 0050 1A60     		str	r2, [r3]
2046:.\Generated_Source\PSoC4/CyLib.c ****     }
 700              		.loc 1 2046 0
 701 0052 BD46     		mov	sp, r7
 702 0054 02B0     		add	sp, sp, #8
 703              		@ sp needed
 704 0056 80BD     		pop	{r7, pc}
 705              	.L33:
 706              		.align	2
 707              	.L32:
 708 0058 08000B40 		.word	1074462728
 709 005c 18000B40 		.word	1074462744
 710              		.cfi_endproc
 711              	.LFE6:
 712              		.size	CySysLvdEnable, .-CySysLvdEnable
 713              		.section	.text.CySysLvdDisable,"ax",%progbits
 714              		.align	2
 715              		.global	CySysLvdDisable
 716              		.code	16
 717              		.thumb_func
 718              		.type	CySysLvdDisable, %function
 719              	CySysLvdDisable:
 720              	.LFB7:
2047:.\Generated_Source\PSoC4/CyLib.c **** 
2048:.\Generated_Source\PSoC4/CyLib.c **** 
2049:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2050:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2051:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2052:.\Generated_Source\PSoC4/CyLib.c ****     *
2053:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2054:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2055:.\Generated_Source\PSoC4/CyLib.c ****     *
2056:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2057:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2058:.\Generated_Source\PSoC4/CyLib.c ****     *
2059:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2060:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2061:.\Generated_Source\PSoC4/CyLib.c ****     *
2062:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2063:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2064:.\Generated_Source\PSoC4/CyLib.c ****     {
 721              		.loc 1 2064 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 50


 722              		.cfi_startproc
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
2065:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 729              		.loc 1 2065 0
 730 0004 064B     		ldr	r3, .L35
 731 0006 064A     		ldr	r2, .L35
 732 0008 1268     		ldr	r2, [r2]
 733 000a 0221     		mov	r1, #2
 734 000c 8A43     		bic	r2, r1
 735 000e 1A60     		str	r2, [r3]
2066:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 736              		.loc 1 2066 0
 737 0010 044B     		ldr	r3, .L35+4
 738 0012 044A     		ldr	r2, .L35+4
 739 0014 1268     		ldr	r2, [r2]
 740 0016 0121     		mov	r1, #1
 741 0018 8A43     		bic	r2, r1
 742 001a 1A60     		str	r2, [r3]
2067:.\Generated_Source\PSoC4/CyLib.c ****     }
 743              		.loc 1 2067 0
 744 001c BD46     		mov	sp, r7
 745              		@ sp needed
 746 001e 80BD     		pop	{r7, pc}
 747              	.L36:
 748              		.align	2
 749              	.L35:
 750 0020 08000B40 		.word	1074462728
 751 0024 18000B40 		.word	1074462744
 752              		.cfi_endproc
 753              	.LFE7:
 754              		.size	CySysLvdDisable, .-CySysLvdDisable
 755              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 756              		.align	2
 757              		.global	CySysLvdGetInterruptSource
 758              		.code	16
 759              		.thumb_func
 760              		.type	CySysLvdGetInterruptSource, %function
 761              	CySysLvdGetInterruptSource:
 762              	.LFB8:
2068:.\Generated_Source\PSoC4/CyLib.c **** 
2069:.\Generated_Source\PSoC4/CyLib.c **** 
2070:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2071:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2072:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c ****     *
2074:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2075:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2076:.\Generated_Source\PSoC4/CyLib.c ****     *
2077:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2078:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2079:.\Generated_Source\PSoC4/CyLib.c ****     *
2080:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 51


2081:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2082:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2083:.\Generated_Source\PSoC4/CyLib.c ****     *
2084:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2085:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2086:.\Generated_Source\PSoC4/CyLib.c ****     {
 763              		.loc 1 2086 0
 764              		.cfi_startproc
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 00AF     		add	r7, sp, #0
 770              		.cfi_def_cfa_register 7
2087:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 771              		.loc 1 2087 0
 772 0004 034B     		ldr	r3, .L39
 773 0006 1B68     		ldr	r3, [r3]
 774 0008 0222     		mov	r2, #2
 775 000a 1340     		and	r3, r2
2088:.\Generated_Source\PSoC4/CyLib.c ****     }
 776              		.loc 1 2088 0
 777 000c 181C     		mov	r0, r3
 778 000e BD46     		mov	sp, r7
 779              		@ sp needed
 780 0010 80BD     		pop	{r7, pc}
 781              	.L40:
 782 0012 C046     		.align	2
 783              	.L39:
 784 0014 04000B40 		.word	1074462724
 785              		.cfi_endproc
 786              	.LFE8:
 787              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 788              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 789              		.align	2
 790              		.global	CySysLvdClearInterrupt
 791              		.code	16
 792              		.thumb_func
 793              		.type	CySysLvdClearInterrupt, %function
 794              	CySysLvdClearInterrupt:
 795              	.LFB9:
2089:.\Generated_Source\PSoC4/CyLib.c **** 
2090:.\Generated_Source\PSoC4/CyLib.c **** 
2091:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2093:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2094:.\Generated_Source\PSoC4/CyLib.c ****     *
2095:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2096:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2097:.\Generated_Source\PSoC4/CyLib.c ****     *
2098:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2099:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2100:.\Generated_Source\PSoC4/CyLib.c ****     *
2101:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2102:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2103:.\Generated_Source\PSoC4/CyLib.c ****     *
2104:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 52


2105:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2106:.\Generated_Source\PSoC4/CyLib.c ****     {
 796              		.loc 1 2106 0
 797              		.cfi_startproc
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
2107:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 804              		.loc 1 2107 0
 805 0004 024B     		ldr	r3, .L42
 806 0006 0222     		mov	r2, #2
 807 0008 1A60     		str	r2, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c ****     }
 808              		.loc 1 2108 0
 809 000a BD46     		mov	sp, r7
 810              		@ sp needed
 811 000c 80BD     		pop	{r7, pc}
 812              	.L43:
 813 000e C046     		.align	2
 814              	.L42:
 815 0010 04000B40 		.word	1074462724
 816              		.cfi_endproc
 817              	.LFE9:
 818              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 819              		.section	.text.CySysGetResetReason,"ax",%progbits
 820              		.align	2
 821              		.global	CySysGetResetReason
 822              		.code	16
 823              		.thumb_func
 824              		.type	CySysGetResetReason, %function
 825              	CySysGetResetReason:
 826              	.LFB10:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2111:.\Generated_Source\PSoC4/CyLib.c **** 
2112:.\Generated_Source\PSoC4/CyLib.c **** 
2113:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2114:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2115:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2116:.\Generated_Source\PSoC4/CyLib.c **** *
2117:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2118:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2119:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2120:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2121:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2122:.\Generated_Source\PSoC4/CyLib.c **** *
2123:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2124:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2125:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2126:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2127:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2130:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 53


2131:.\Generated_Source\PSoC4/CyLib.c **** *
2132:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2133:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2134:.\Generated_Source\PSoC4/CyLib.c **** {
 827              		.loc 1 2134 0
 828              		.cfi_startproc
 829 0000 80B5     		push	{r7, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 84B0     		sub	sp, sp, #16
 834              		.cfi_def_cfa_offset 24
 835 0004 00AF     		add	r7, sp, #0
 836              		.cfi_def_cfa_register 7
 837 0006 7860     		str	r0, [r7, #4]
2135:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 838              		.loc 1 2137 0
 839 0008 7B68     		ldr	r3, [r7, #4]
 840 000a 1922     		mov	r2, #25
 841 000c 1340     		and	r3, r2
 842 000e 7B60     		str	r3, [r7, #4]
2138:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 843              		.loc 1 2138 0
 844 0010 064B     		ldr	r3, .L46
 845 0012 1B68     		ldr	r3, [r3]
 846 0014 1922     		mov	r2, #25
 847 0016 1340     		and	r3, r2
 848 0018 FB60     		str	r3, [r7, #12]
2139:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2140:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 849              		.loc 1 2140 0
 850 001a 044B     		ldr	r3, .L46
 851 001c 7A68     		ldr	r2, [r7, #4]
 852 001e 1A60     		str	r2, [r3]
2141:.\Generated_Source\PSoC4/CyLib.c **** 
2142:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 853              		.loc 1 2142 0
 854 0020 FB68     		ldr	r3, [r7, #12]
2143:.\Generated_Source\PSoC4/CyLib.c **** }
 855              		.loc 1 2143 0
 856 0022 181C     		mov	r0, r3
 857 0024 BD46     		mov	sp, r7
 858 0026 04B0     		add	sp, sp, #16
 859              		@ sp needed
 860 0028 80BD     		pop	{r7, pc}
 861              	.L47:
 862 002a C046     		.align	2
 863              	.L46:
 864 002c 00030B40 		.word	1074463488
 865              		.cfi_endproc
 866              	.LFE10:
 867              		.size	CySysGetResetReason, .-CySysGetResetReason
 868              		.section	.text.CyDisableInts,"ax",%progbits
 869              		.align	2
 870              		.global	CyDisableInts
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 54


 871              		.code	16
 872              		.thumb_func
 873              		.type	CyDisableInts, %function
 874              	CyDisableInts:
 875              	.LFB11:
2144:.\Generated_Source\PSoC4/CyLib.c **** 
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2147:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2148:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2149:.\Generated_Source\PSoC4/CyLib.c **** *
2150:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2151:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2152:.\Generated_Source\PSoC4/CyLib.c **** *
2153:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2154:.\Generated_Source\PSoC4/CyLib.c **** *  None
2155:.\Generated_Source\PSoC4/CyLib.c **** *
2156:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2157:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2158:.\Generated_Source\PSoC4/CyLib.c **** *
2159:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2160:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2161:.\Generated_Source\PSoC4/CyLib.c **** {
 876              		.loc 1 2161 0
 877              		.cfi_startproc
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 82B0     		sub	sp, sp, #8
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
 885              		.cfi_def_cfa_register 7
2162:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2163:.\Generated_Source\PSoC4/CyLib.c **** 
2164:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2165:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 886              		.loc 1 2165 0
 887 0006 064B     		ldr	r3, .L50
 888 0008 1B68     		ldr	r3, [r3]
 889 000a 7B60     		str	r3, [r7, #4]
2166:.\Generated_Source\PSoC4/CyLib.c **** 
2167:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2168:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 890              		.loc 1 2168 0
 891 000c 044B     		ldr	r3, .L50
 892 000e 0122     		mov	r2, #1
 893 0010 5242     		neg	r2, r2
 894 0012 1A60     		str	r2, [r3]
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 895              		.loc 1 2170 0
 896 0014 7B68     		ldr	r3, [r7, #4]
2171:.\Generated_Source\PSoC4/CyLib.c **** }
 897              		.loc 1 2171 0
 898 0016 181C     		mov	r0, r3
 899 0018 BD46     		mov	sp, r7
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 55


 900 001a 02B0     		add	sp, sp, #8
 901              		@ sp needed
 902 001c 80BD     		pop	{r7, pc}
 903              	.L51:
 904 001e C046     		.align	2
 905              	.L50:
 906 0020 80E100E0 		.word	-536813184
 907              		.cfi_endproc
 908              	.LFE11:
 909              		.size	CyDisableInts, .-CyDisableInts
 910              		.section	.text.CyEnableInts,"ax",%progbits
 911              		.align	2
 912              		.global	CyEnableInts
 913              		.code	16
 914              		.thumb_func
 915              		.type	CyEnableInts, %function
 916              	CyEnableInts:
 917              	.LFB12:
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2176:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2179:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2180:.\Generated_Source\PSoC4/CyLib.c **** *
2181:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2182:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2183:.\Generated_Source\PSoC4/CyLib.c **** *
2184:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2185:.\Generated_Source\PSoC4/CyLib.c **** *  None
2186:.\Generated_Source\PSoC4/CyLib.c **** *
2187:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2188:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2189:.\Generated_Source\PSoC4/CyLib.c **** {
 918              		.loc 1 2189 0
 919              		.cfi_startproc
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 82B0     		sub	sp, sp, #8
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
2190:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 929              		.loc 1 2190 0
 930 0008 024B     		ldr	r3, .L53
 931 000a 7A68     		ldr	r2, [r7, #4]
 932 000c 1A60     		str	r2, [r3]
2191:.\Generated_Source\PSoC4/CyLib.c **** }
 933              		.loc 1 2191 0
 934 000e BD46     		mov	sp, r7
 935 0010 02B0     		add	sp, sp, #8
 936              		@ sp needed
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 56


 937 0012 80BD     		pop	{r7, pc}
 938              	.L54:
 939              		.align	2
 940              	.L53:
 941 0014 00E100E0 		.word	-536813312
 942              		.cfi_endproc
 943              	.LFE12:
 944              		.size	CyEnableInts, .-CyEnableInts
 945              		.section	.text.CyIntSetSysVector,"ax",%progbits
 946              		.align	2
 947              		.global	CyIntSetSysVector
 948              		.code	16
 949              		.thumb_func
 950              		.type	CyIntSetSysVector, %function
 951              	CyIntSetSysVector:
 952              	.LFB13:
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c **** 
2194:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2195:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2196:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2197:.\Generated_Source\PSoC4/CyLib.c **** *
2198:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2199:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2200:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2201:.\Generated_Source\PSoC4/CyLib.c **** *
2202:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2203:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2204:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2205:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2206:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2207:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2208:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2209:.\Generated_Source\PSoC4/CyLib.c **** *
2210:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2211:.\Generated_Source\PSoC4/CyLib.c **** *
2212:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2213:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2214:.\Generated_Source\PSoC4/CyLib.c **** *
2215:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2216:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2217:.\Generated_Source\PSoC4/CyLib.c **** {
 953              		.loc 1 2217 0
 954              		.cfi_startproc
 955 0000 80B5     		push	{r7, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
 959 0002 84B0     		sub	sp, sp, #16
 960              		.cfi_def_cfa_offset 24
 961 0004 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
 963 0006 021C     		mov	r2, r0
 964 0008 3960     		str	r1, [r7]
 965 000a FB1D     		add	r3, r7, #7
 966 000c 1A70     		strb	r2, [r3]
2218:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 57


2219:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 967              		.loc 1 2219 0
 968 000e 8023     		mov	r3, #128
 969 0010 9B05     		lsl	r3, r3, #22
 970 0012 FB60     		str	r3, [r7, #12]
2220:.\Generated_Source\PSoC4/CyLib.c **** 
2221:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 971              		.loc 1 2221 0
 972 0014 FB1D     		add	r3, r7, #7
 973 0016 1B78     		ldrb	r3, [r3]
 974 0018 0F2B     		cmp	r3, #15
 975 001a 02D9     		bls	.L56
 976              		.loc 1 2221 0 is_stmt 0 discriminator 1
 977 001c 0020     		mov	r0, #0
 978 001e FFF7FEFF 		bl	CyHalt
 979              	.L56:
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2224:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 980              		.loc 1 2224 0 is_stmt 1
 981 0022 FB1D     		add	r3, r7, #7
 982 0024 1B78     		ldrb	r3, [r3]
 983 0026 9B00     		lsl	r3, r3, #2
 984 0028 FA68     		ldr	r2, [r7, #12]
 985 002a D318     		add	r3, r2, r3
 986 002c 1B68     		ldr	r3, [r3]
 987 002e BB60     		str	r3, [r7, #8]
2225:.\Generated_Source\PSoC4/CyLib.c **** 
2226:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2227:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 988              		.loc 1 2227 0
 989 0030 FB1D     		add	r3, r7, #7
 990 0032 1B78     		ldrb	r3, [r3]
 991 0034 9B00     		lsl	r3, r3, #2
 992 0036 FA68     		ldr	r2, [r7, #12]
 993 0038 D318     		add	r3, r2, r3
 994 003a 3A68     		ldr	r2, [r7]
 995 003c 1A60     		str	r2, [r3]
2228:.\Generated_Source\PSoC4/CyLib.c **** 
2229:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 996              		.loc 1 2229 0
 997 003e BB68     		ldr	r3, [r7, #8]
2230:.\Generated_Source\PSoC4/CyLib.c **** }
 998              		.loc 1 2230 0
 999 0040 181C     		mov	r0, r3
 1000 0042 BD46     		mov	sp, r7
 1001 0044 04B0     		add	sp, sp, #16
 1002              		@ sp needed
 1003 0046 80BD     		pop	{r7, pc}
 1004              		.cfi_endproc
 1005              	.LFE13:
 1006              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1007              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1008              		.align	2
 1009              		.global	CyIntGetSysVector
 1010              		.code	16
 1011              		.thumb_func
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 58


 1012              		.type	CyIntGetSysVector, %function
 1013              	CyIntGetSysVector:
 1014              	.LFB14:
2231:.\Generated_Source\PSoC4/CyLib.c **** 
2232:.\Generated_Source\PSoC4/CyLib.c **** 
2233:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2234:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2235:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2236:.\Generated_Source\PSoC4/CyLib.c **** *
2237:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2238:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2239:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2240:.\Generated_Source\PSoC4/CyLib.c **** *
2241:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2242:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2243:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2244:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2245:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2246:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2247:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2248:.\Generated_Source\PSoC4/CyLib.c **** *
2249:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2250:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2251:.\Generated_Source\PSoC4/CyLib.c **** *
2252:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2253:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2254:.\Generated_Source\PSoC4/CyLib.c **** {
 1015              		.loc 1 2254 0
 1016              		.cfi_startproc
 1017 0000 80B5     		push	{r7, lr}
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 7, -8
 1020              		.cfi_offset 14, -4
 1021 0002 84B0     		sub	sp, sp, #16
 1022              		.cfi_def_cfa_offset 24
 1023 0004 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 1025 0006 021C     		mov	r2, r0
 1026 0008 FB1D     		add	r3, r7, #7
 1027 000a 1A70     		strb	r2, [r3]
2255:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1028              		.loc 1 2255 0
 1029 000c 8023     		mov	r3, #128
 1030 000e 9B05     		lsl	r3, r3, #22
 1031 0010 FB60     		str	r3, [r7, #12]
2256:.\Generated_Source\PSoC4/CyLib.c **** 
2257:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1032              		.loc 1 2257 0
 1033 0012 FB1D     		add	r3, r7, #7
 1034 0014 1B78     		ldrb	r3, [r3]
 1035 0016 0F2B     		cmp	r3, #15
 1036 0018 02D9     		bls	.L59
 1037              		.loc 1 2257 0 is_stmt 0 discriminator 1
 1038 001a 0020     		mov	r0, #0
 1039 001c FFF7FEFF 		bl	CyHalt
 1040              	.L59:
2258:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 59


2259:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1041              		.loc 1 2259 0 is_stmt 1
 1042 0020 FB1D     		add	r3, r7, #7
 1043 0022 1B78     		ldrb	r3, [r3]
 1044 0024 9B00     		lsl	r3, r3, #2
 1045 0026 FA68     		ldr	r2, [r7, #12]
 1046 0028 D318     		add	r3, r2, r3
 1047 002a 1B68     		ldr	r3, [r3]
2260:.\Generated_Source\PSoC4/CyLib.c **** }
 1048              		.loc 1 2260 0
 1049 002c 181C     		mov	r0, r3
 1050 002e BD46     		mov	sp, r7
 1051 0030 04B0     		add	sp, sp, #16
 1052              		@ sp needed
 1053 0032 80BD     		pop	{r7, pc}
 1054              		.cfi_endproc
 1055              	.LFE14:
 1056              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1057              		.section	.text.CyIntSetVector,"ax",%progbits
 1058              		.align	2
 1059              		.global	CyIntSetVector
 1060              		.code	16
 1061              		.thumb_func
 1062              		.type	CyIntSetVector, %function
 1063              	CyIntSetVector:
 1064              	.LFB15:
2261:.\Generated_Source\PSoC4/CyLib.c **** 
2262:.\Generated_Source\PSoC4/CyLib.c **** 
2263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2266:.\Generated_Source\PSoC4/CyLib.c **** *
2267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2268:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2269:.\Generated_Source\PSoC4/CyLib.c **** *
2270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2272:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2273:.\Generated_Source\PSoC4/CyLib.c **** *
2274:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2275:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2276:.\Generated_Source\PSoC4/CyLib.c **** *
2277:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2278:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2279:.\Generated_Source\PSoC4/CyLib.c **** {
 1065              		.loc 1 2279 0
 1066              		.cfi_startproc
 1067 0000 80B5     		push	{r7, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 84B0     		sub	sp, sp, #16
 1072              		.cfi_def_cfa_offset 24
 1073 0004 00AF     		add	r7, sp, #0
 1074              		.cfi_def_cfa_register 7
 1075 0006 021C     		mov	r2, r0
 1076 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 60


 1077 000a FB1D     		add	r3, r7, #7
 1078 000c 1A70     		strb	r2, [r3]
2280:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2281:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1079              		.loc 1 2281 0
 1080 000e 8023     		mov	r3, #128
 1081 0010 9B05     		lsl	r3, r3, #22
 1082 0012 FB60     		str	r3, [r7, #12]
2282:.\Generated_Source\PSoC4/CyLib.c **** 
2283:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1083              		.loc 1 2283 0
 1084 0014 FB1D     		add	r3, r7, #7
 1085 0016 1B78     		ldrb	r3, [r3]
 1086 0018 1F2B     		cmp	r3, #31
 1087 001a 02D9     		bls	.L62
 1088              		.loc 1 2283 0 is_stmt 0 discriminator 1
 1089 001c 0020     		mov	r0, #0
 1090 001e FFF7FEFF 		bl	CyHalt
 1091              	.L62:
2284:.\Generated_Source\PSoC4/CyLib.c **** 
2285:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2286:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1092              		.loc 1 2286 0 is_stmt 1
 1093 0022 FB1D     		add	r3, r7, #7
 1094 0024 1B78     		ldrb	r3, [r3]
 1095 0026 1033     		add	r3, r3, #16
 1096 0028 9B00     		lsl	r3, r3, #2
 1097 002a FA68     		ldr	r2, [r7, #12]
 1098 002c D318     		add	r3, r2, r3
 1099 002e 1B68     		ldr	r3, [r3]
 1100 0030 BB60     		str	r3, [r7, #8]
2287:.\Generated_Source\PSoC4/CyLib.c **** 
2288:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2289:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1101              		.loc 1 2289 0
 1102 0032 FB1D     		add	r3, r7, #7
 1103 0034 1B78     		ldrb	r3, [r3]
 1104 0036 1033     		add	r3, r3, #16
 1105 0038 9B00     		lsl	r3, r3, #2
 1106 003a FA68     		ldr	r2, [r7, #12]
 1107 003c D318     		add	r3, r2, r3
 1108 003e 3A68     		ldr	r2, [r7]
 1109 0040 1A60     		str	r2, [r3]
2290:.\Generated_Source\PSoC4/CyLib.c **** 
2291:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1110              		.loc 1 2291 0
 1111 0042 BB68     		ldr	r3, [r7, #8]
2292:.\Generated_Source\PSoC4/CyLib.c **** }
 1112              		.loc 1 2292 0
 1113 0044 181C     		mov	r0, r3
 1114 0046 BD46     		mov	sp, r7
 1115 0048 04B0     		add	sp, sp, #16
 1116              		@ sp needed
 1117 004a 80BD     		pop	{r7, pc}
 1118              		.cfi_endproc
 1119              	.LFE15:
 1120              		.size	CyIntSetVector, .-CyIntSetVector
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 61


 1121              		.section	.text.CyIntGetVector,"ax",%progbits
 1122              		.align	2
 1123              		.global	CyIntGetVector
 1124              		.code	16
 1125              		.thumb_func
 1126              		.type	CyIntGetVector, %function
 1127              	CyIntGetVector:
 1128              	.LFB16:
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** 
2295:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2296:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2297:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2298:.\Generated_Source\PSoC4/CyLib.c **** *
2299:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2300:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2303:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2306:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2307:.\Generated_Source\PSoC4/CyLib.c **** *
2308:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2309:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2310:.\Generated_Source\PSoC4/CyLib.c **** {
 1129              		.loc 1 2310 0
 1130              		.cfi_startproc
 1131 0000 80B5     		push	{r7, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 7, -8
 1134              		.cfi_offset 14, -4
 1135 0002 84B0     		sub	sp, sp, #16
 1136              		.cfi_def_cfa_offset 24
 1137 0004 00AF     		add	r7, sp, #0
 1138              		.cfi_def_cfa_register 7
 1139 0006 021C     		mov	r2, r0
 1140 0008 FB1D     		add	r3, r7, #7
 1141 000a 1A70     		strb	r2, [r3]
2311:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1142              		.loc 1 2311 0
 1143 000c 8023     		mov	r3, #128
 1144 000e 9B05     		lsl	r3, r3, #22
 1145 0010 FB60     		str	r3, [r7, #12]
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1146              		.loc 1 2313 0
 1147 0012 FB1D     		add	r3, r7, #7
 1148 0014 1B78     		ldrb	r3, [r3]
 1149 0016 1F2B     		cmp	r3, #31
 1150 0018 02D9     		bls	.L65
 1151              		.loc 1 2313 0 is_stmt 0 discriminator 1
 1152 001a 0020     		mov	r0, #0
 1153 001c FFF7FEFF 		bl	CyHalt
 1154              	.L65:
2314:.\Generated_Source\PSoC4/CyLib.c **** 
2315:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 62


 1155              		.loc 1 2315 0 is_stmt 1
 1156 0020 FB1D     		add	r3, r7, #7
 1157 0022 1B78     		ldrb	r3, [r3]
 1158 0024 1033     		add	r3, r3, #16
 1159 0026 9B00     		lsl	r3, r3, #2
 1160 0028 FA68     		ldr	r2, [r7, #12]
 1161 002a D318     		add	r3, r2, r3
 1162 002c 1B68     		ldr	r3, [r3]
2316:.\Generated_Source\PSoC4/CyLib.c **** }
 1163              		.loc 1 2316 0
 1164 002e 181C     		mov	r0, r3
 1165 0030 BD46     		mov	sp, r7
 1166 0032 04B0     		add	sp, sp, #16
 1167              		@ sp needed
 1168 0034 80BD     		pop	{r7, pc}
 1169              		.cfi_endproc
 1170              	.LFE16:
 1171              		.size	CyIntGetVector, .-CyIntGetVector
 1172              		.section	.text.CyIntSetPriority,"ax",%progbits
 1173              		.align	2
 1174              		.global	CyIntSetPriority
 1175              		.code	16
 1176              		.thumb_func
 1177              		.type	CyIntSetPriority, %function
 1178              	CyIntSetPriority:
 1179              	.LFB17:
2317:.\Generated_Source\PSoC4/CyLib.c **** 
2318:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2319:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2320:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2321:.\Generated_Source\PSoC4/CyLib.c **** *
2322:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2323:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2324:.\Generated_Source\PSoC4/CyLib.c **** *
2325:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2326:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2327:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2328:.\Generated_Source\PSoC4/CyLib.c **** *
2329:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2330:.\Generated_Source\PSoC4/CyLib.c **** *  None
2331:.\Generated_Source\PSoC4/CyLib.c **** *
2332:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2333:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2334:.\Generated_Source\PSoC4/CyLib.c **** {
 1180              		.loc 1 2334 0
 1181              		.cfi_startproc
 1182 0000 90B5     		push	{r4, r7, lr}
 1183              		.cfi_def_cfa_offset 12
 1184              		.cfi_offset 4, -12
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
 1187 0002 87B0     		sub	sp, sp, #28
 1188              		.cfi_def_cfa_offset 40
 1189 0004 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 1191 0006 021C     		mov	r2, r0
 1192 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 63


 1193 000a 1A70     		strb	r2, [r3]
 1194 000c BB1D     		add	r3, r7, #6
 1195 000e 0A1C     		add	r2, r1, #0
 1196 0010 1A70     		strb	r2, [r3]
2335:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2336:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2337:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2338:.\Generated_Source\PSoC4/CyLib.c **** 
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1197              		.loc 1 2339 0
 1198 0012 BB1D     		add	r3, r7, #6
 1199 0014 1B78     		ldrb	r3, [r3]
 1200 0016 032B     		cmp	r3, #3
 1201 0018 02D9     		bls	.L68
 1202              		.loc 1 2339 0 is_stmt 0 discriminator 1
 1203 001a 0020     		mov	r0, #0
 1204 001c FFF7FEFF 		bl	CyHalt
 1205              	.L68:
2340:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1206              		.loc 1 2340 0 is_stmt 1
 1207 0020 FB1D     		add	r3, r7, #7
 1208 0022 1B78     		ldrb	r3, [r3]
 1209 0024 1F2B     		cmp	r3, #31
 1210 0026 02D9     		bls	.L69
 1211              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1212 0028 0020     		mov	r0, #0
 1213 002a FFF7FEFF 		bl	CyHalt
 1214              	.L69:
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1215              		.loc 1 2342 0 is_stmt 1
 1216 002e FB1D     		add	r3, r7, #7
 1217 0030 1B78     		ldrb	r3, [r3]
 1218 0032 0322     		mov	r2, #3
 1219 0034 1340     		and	r3, r2
 1220 0036 DB00     		lsl	r3, r3, #3
 1221 0038 0633     		add	r3, r3, #6
 1222 003a 7B61     		str	r3, [r7, #20]
2343:.\Generated_Source\PSoC4/CyLib.c **** 
2344:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1223              		.loc 1 2344 0
 1224 003c 1323     		mov	r3, #19
 1225 003e FC18     		add	r4, r7, r3
 1226 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1227 0044 031C     		mov	r3, r0
 1228 0046 2370     		strb	r3, [r4]
2345:.\Generated_Source\PSoC4/CyLib.c **** 
2346:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1229              		.loc 1 2346 0
 1230 0048 FB1D     		add	r3, r7, #7
 1231 004a 1B78     		ldrb	r3, [r3]
 1232 004c 9B08     		lsr	r3, r3, #2
 1233 004e DBB2     		uxtb	r3, r3
 1234 0050 9B00     		lsl	r3, r3, #2
 1235 0052 144A     		ldr	r2, .L70
 1236 0054 9446     		mov	ip, r2
 1237 0056 6344     		add	r3, r3, ip
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 64


 1238 0058 1B68     		ldr	r3, [r3]
 1239 005a FB60     		str	r3, [r7, #12]
2347:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1240              		.loc 1 2347 0
 1241 005c 7B69     		ldr	r3, [r7, #20]
 1242 005e 0322     		mov	r2, #3
 1243 0060 9A40     		lsl	r2, r2, r3
 1244 0062 131C     		mov	r3, r2
 1245 0064 DA43     		mvn	r2, r3
 1246 0066 FB68     		ldr	r3, [r7, #12]
 1247 0068 1340     		and	r3, r2
 1248 006a FB60     		str	r3, [r7, #12]
2348:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1249              		.loc 1 2348 0
 1250 006c BB1D     		add	r3, r7, #6
 1251 006e 1A78     		ldrb	r2, [r3]
 1252 0070 7B69     		ldr	r3, [r7, #20]
 1253 0072 9A40     		lsl	r2, r2, r3
 1254 0074 131C     		mov	r3, r2
 1255 0076 FA68     		ldr	r2, [r7, #12]
 1256 0078 1343     		orr	r3, r2
 1257 007a FB60     		str	r3, [r7, #12]
2349:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1258              		.loc 1 2349 0
 1259 007c FB1D     		add	r3, r7, #7
 1260 007e 1B78     		ldrb	r3, [r3]
 1261 0080 9B08     		lsr	r3, r3, #2
 1262 0082 DBB2     		uxtb	r3, r3
 1263 0084 9B00     		lsl	r3, r3, #2
 1264 0086 074A     		ldr	r2, .L70
 1265 0088 9446     		mov	ip, r2
 1266 008a 6344     		add	r3, r3, ip
 1267 008c FA68     		ldr	r2, [r7, #12]
 1268 008e 1A60     		str	r2, [r3]
2350:.\Generated_Source\PSoC4/CyLib.c **** 
2351:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1269              		.loc 1 2351 0
 1270 0090 1323     		mov	r3, #19
 1271 0092 FB18     		add	r3, r7, r3
 1272 0094 1B78     		ldrb	r3, [r3]
 1273 0096 181C     		mov	r0, r3
 1274 0098 FFF7FEFF 		bl	CyExitCriticalSection
2352:.\Generated_Source\PSoC4/CyLib.c **** }
 1275              		.loc 1 2352 0
 1276 009c BD46     		mov	sp, r7
 1277 009e 07B0     		add	sp, sp, #28
 1278              		@ sp needed
 1279 00a0 90BD     		pop	{r4, r7, pc}
 1280              	.L71:
 1281 00a2 C046     		.align	2
 1282              	.L70:
 1283 00a4 00E400E0 		.word	-536812544
 1284              		.cfi_endproc
 1285              	.LFE17:
 1286              		.size	CyIntSetPriority, .-CyIntSetPriority
 1287              		.section	.text.CyIntGetPriority,"ax",%progbits
 1288              		.align	2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 65


 1289              		.global	CyIntGetPriority
 1290              		.code	16
 1291              		.thumb_func
 1292              		.type	CyIntGetPriority, %function
 1293              	CyIntGetPriority:
 1294              	.LFB18:
2353:.\Generated_Source\PSoC4/CyLib.c **** 
2354:.\Generated_Source\PSoC4/CyLib.c **** 
2355:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2356:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2357:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** *
2359:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2360:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2361:.\Generated_Source\PSoC4/CyLib.c **** *
2362:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2363:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2366:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2367:.\Generated_Source\PSoC4/CyLib.c **** *
2368:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2369:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2370:.\Generated_Source\PSoC4/CyLib.c **** {
 1295              		.loc 1 2370 0
 1296              		.cfi_startproc
 1297 0000 80B5     		push	{r7, lr}
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 84B0     		sub	sp, sp, #16
 1302              		.cfi_def_cfa_offset 24
 1303 0004 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 1305 0006 021C     		mov	r2, r0
 1306 0008 FB1D     		add	r3, r7, #7
 1307 000a 1A70     		strb	r2, [r3]
2371:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1308              		.loc 1 2373 0
 1309 000c FB1D     		add	r3, r7, #7
 1310 000e 1B78     		ldrb	r3, [r3]
 1311 0010 1F2B     		cmp	r3, #31
 1312 0012 02D9     		bls	.L73
 1313              		.loc 1 2373 0 is_stmt 0 discriminator 1
 1314 0014 0020     		mov	r0, #0
 1315 0016 FFF7FEFF 		bl	CyHalt
 1316              	.L73:
2374:.\Generated_Source\PSoC4/CyLib.c **** 
2375:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1317              		.loc 1 2375 0 is_stmt 1
 1318 001a FB1D     		add	r3, r7, #7
 1319 001c 1B78     		ldrb	r3, [r3]
 1320 001e 9B08     		lsr	r3, r3, #2
 1321 0020 DBB2     		uxtb	r3, r3
 1322 0022 9B00     		lsl	r3, r3, #2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 66


 1323 0024 0C4A     		ldr	r2, .L75
 1324 0026 9446     		mov	ip, r2
 1325 0028 6344     		add	r3, r3, ip
 1326 002a 1B68     		ldr	r3, [r3]
 1327 002c FA1D     		add	r2, r7, #7
 1328 002e 1278     		ldrb	r2, [r2]
 1329 0030 0321     		mov	r1, #3
 1330 0032 0A40     		and	r2, r1
 1331 0034 D200     		lsl	r2, r2, #3
 1332 0036 0632     		add	r2, r2, #6
 1333 0038 D340     		lsr	r3, r3, r2
 1334 003a 1A1C     		mov	r2, r3
 1335 003c 0F23     		mov	r3, #15
 1336 003e FB18     		add	r3, r7, r3
 1337 0040 1A70     		strb	r2, [r3]
2376:.\Generated_Source\PSoC4/CyLib.c **** 
2377:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1338              		.loc 1 2377 0
 1339 0042 0F23     		mov	r3, #15
 1340 0044 FB18     		add	r3, r7, r3
 1341 0046 1B78     		ldrb	r3, [r3]
 1342 0048 0322     		mov	r2, #3
 1343 004a 1340     		and	r3, r2
 1344 004c DBB2     		uxtb	r3, r3
2378:.\Generated_Source\PSoC4/CyLib.c **** }
 1345              		.loc 1 2378 0
 1346 004e 181C     		mov	r0, r3
 1347 0050 BD46     		mov	sp, r7
 1348 0052 04B0     		add	sp, sp, #16
 1349              		@ sp needed
 1350 0054 80BD     		pop	{r7, pc}
 1351              	.L76:
 1352 0056 C046     		.align	2
 1353              	.L75:
 1354 0058 00E400E0 		.word	-536812544
 1355              		.cfi_endproc
 1356              	.LFE18:
 1357              		.size	CyIntGetPriority, .-CyIntGetPriority
 1358              		.section	.text.CyIntEnable,"ax",%progbits
 1359              		.align	2
 1360              		.global	CyIntEnable
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	CyIntEnable, %function
 1364              	CyIntEnable:
 1365              	.LFB19:
2379:.\Generated_Source\PSoC4/CyLib.c **** 
2380:.\Generated_Source\PSoC4/CyLib.c **** 
2381:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2382:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2383:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** *
2385:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2386:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2387:.\Generated_Source\PSoC4/CyLib.c **** *
2388:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2389:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 67


2390:.\Generated_Source\PSoC4/CyLib.c **** *
2391:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2392:.\Generated_Source\PSoC4/CyLib.c **** *  None
2393:.\Generated_Source\PSoC4/CyLib.c **** *
2394:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2395:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2396:.\Generated_Source\PSoC4/CyLib.c **** {
 1366              		.loc 1 2396 0
 1367              		.cfi_startproc
 1368 0000 80B5     		push	{r7, lr}
 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 7, -8
 1371              		.cfi_offset 14, -4
 1372 0002 82B0     		sub	sp, sp, #8
 1373              		.cfi_def_cfa_offset 16
 1374 0004 00AF     		add	r7, sp, #0
 1375              		.cfi_def_cfa_register 7
 1376 0006 021C     		mov	r2, r0
 1377 0008 FB1D     		add	r3, r7, #7
 1378 000a 1A70     		strb	r2, [r3]
2397:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1379              		.loc 1 2397 0
 1380 000c 054B     		ldr	r3, .L78
 1381 000e FA1D     		add	r2, r7, #7
 1382 0010 1278     		ldrb	r2, [r2]
 1383 0012 1F21     		mov	r1, #31
 1384 0014 0A40     		and	r2, r1
 1385 0016 0121     		mov	r1, #1
 1386 0018 9140     		lsl	r1, r1, r2
 1387 001a 0A1C     		mov	r2, r1
 1388 001c 1A60     		str	r2, [r3]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 1389              		.loc 1 2398 0
 1390 001e BD46     		mov	sp, r7
 1391 0020 02B0     		add	sp, sp, #8
 1392              		@ sp needed
 1393 0022 80BD     		pop	{r7, pc}
 1394              	.L79:
 1395              		.align	2
 1396              	.L78:
 1397 0024 00E100E0 		.word	-536813312
 1398              		.cfi_endproc
 1399              	.LFE19:
 1400              		.size	CyIntEnable, .-CyIntEnable
 1401              		.section	.text.CyIntGetState,"ax",%progbits
 1402              		.align	2
 1403              		.global	CyIntGetState
 1404              		.code	16
 1405              		.thumb_func
 1406              		.type	CyIntGetState, %function
 1407              	CyIntGetState:
 1408              	.LFB20:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2403:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 68


2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2406:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2407:.\Generated_Source\PSoC4/CyLib.c **** *
2408:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2409:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2410:.\Generated_Source\PSoC4/CyLib.c **** *
2411:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2412:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2413:.\Generated_Source\PSoC4/CyLib.c **** *
2414:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2415:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2416:.\Generated_Source\PSoC4/CyLib.c **** {
 1409              		.loc 1 2416 0
 1410              		.cfi_startproc
 1411 0000 80B5     		push	{r7, lr}
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 7, -8
 1414              		.cfi_offset 14, -4
 1415 0002 82B0     		sub	sp, sp, #8
 1416              		.cfi_def_cfa_offset 16
 1417 0004 00AF     		add	r7, sp, #0
 1418              		.cfi_def_cfa_register 7
 1419 0006 021C     		mov	r2, r0
 1420 0008 FB1D     		add	r3, r7, #7
 1421 000a 1A70     		strb	r2, [r3]
2417:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2418:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1422              		.loc 1 2418 0
 1423 000c 074B     		ldr	r3, .L82
 1424 000e 1A68     		ldr	r2, [r3]
 1425 0010 FB1D     		add	r3, r7, #7
 1426 0012 1B78     		ldrb	r3, [r3]
 1427 0014 1F21     		mov	r1, #31
 1428 0016 0B40     		and	r3, r1
 1429 0018 DA40     		lsr	r2, r2, r3
 1430 001a 131C     		mov	r3, r2
 1431 001c DBB2     		uxtb	r3, r3
 1432 001e 0122     		mov	r2, #1
 1433 0020 1340     		and	r3, r2
 1434 0022 DBB2     		uxtb	r3, r3
2419:.\Generated_Source\PSoC4/CyLib.c **** }
 1435              		.loc 1 2419 0
 1436 0024 181C     		mov	r0, r3
 1437 0026 BD46     		mov	sp, r7
 1438 0028 02B0     		add	sp, sp, #8
 1439              		@ sp needed
 1440 002a 80BD     		pop	{r7, pc}
 1441              	.L83:
 1442              		.align	2
 1443              	.L82:
 1444 002c 00E100E0 		.word	-536813312
 1445              		.cfi_endproc
 1446              	.LFE20:
 1447              		.size	CyIntGetState, .-CyIntGetState
 1448              		.section	.text.CyIntDisable,"ax",%progbits
 1449              		.align	2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 69


 1450              		.global	CyIntDisable
 1451              		.code	16
 1452              		.thumb_func
 1453              		.type	CyIntDisable, %function
 1454              	CyIntDisable:
 1455              	.LFB21:
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c **** 
2422:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2423:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2424:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2425:.\Generated_Source\PSoC4/CyLib.c **** *
2426:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2427:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2428:.\Generated_Source\PSoC4/CyLib.c **** *
2429:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2430:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2433:.\Generated_Source\PSoC4/CyLib.c **** *  None
2434:.\Generated_Source\PSoC4/CyLib.c **** *
2435:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2436:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2437:.\Generated_Source\PSoC4/CyLib.c **** {
 1456              		.loc 1 2437 0
 1457              		.cfi_startproc
 1458 0000 80B5     		push	{r7, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 7, -8
 1461              		.cfi_offset 14, -4
 1462 0002 82B0     		sub	sp, sp, #8
 1463              		.cfi_def_cfa_offset 16
 1464 0004 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 1466 0006 021C     		mov	r2, r0
 1467 0008 FB1D     		add	r3, r7, #7
 1468 000a 1A70     		strb	r2, [r3]
2438:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1469              		.loc 1 2438 0
 1470 000c 054B     		ldr	r3, .L85
 1471 000e FA1D     		add	r2, r7, #7
 1472 0010 1278     		ldrb	r2, [r2]
 1473 0012 1F21     		mov	r1, #31
 1474 0014 0A40     		and	r2, r1
 1475 0016 0121     		mov	r1, #1
 1476 0018 9140     		lsl	r1, r1, r2
 1477 001a 0A1C     		mov	r2, r1
 1478 001c 1A60     		str	r2, [r3]
2439:.\Generated_Source\PSoC4/CyLib.c **** }
 1479              		.loc 1 2439 0
 1480 001e BD46     		mov	sp, r7
 1481 0020 02B0     		add	sp, sp, #8
 1482              		@ sp needed
 1483 0022 80BD     		pop	{r7, pc}
 1484              	.L86:
 1485              		.align	2
 1486              	.L85:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 70


 1487 0024 80E100E0 		.word	-536813184
 1488              		.cfi_endproc
 1489              	.LFE21:
 1490              		.size	CyIntDisable, .-CyIntDisable
 1491              		.section	.text.CyIntSetPending,"ax",%progbits
 1492              		.align	2
 1493              		.global	CyIntSetPending
 1494              		.code	16
 1495              		.thumb_func
 1496              		.type	CyIntSetPending, %function
 1497              	CyIntSetPending:
 1498              	.LFB22:
2440:.\Generated_Source\PSoC4/CyLib.c **** 
2441:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2442:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2443:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2444:.\Generated_Source\PSoC4/CyLib.c **** *
2445:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2446:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2447:.\Generated_Source\PSoC4/CyLib.c **** *
2448:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2449:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2450:.\Generated_Source\PSoC4/CyLib.c **** *
2451:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2452:.\Generated_Source\PSoC4/CyLib.c **** *  None
2453:.\Generated_Source\PSoC4/CyLib.c **** *
2454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2456:.\Generated_Source\PSoC4/CyLib.c **** {
 1499              		.loc 1 2456 0
 1500              		.cfi_startproc
 1501 0000 80B5     		push	{r7, lr}
 1502              		.cfi_def_cfa_offset 8
 1503              		.cfi_offset 7, -8
 1504              		.cfi_offset 14, -4
 1505 0002 82B0     		sub	sp, sp, #8
 1506              		.cfi_def_cfa_offset 16
 1507 0004 00AF     		add	r7, sp, #0
 1508              		.cfi_def_cfa_register 7
 1509 0006 021C     		mov	r2, r0
 1510 0008 FB1D     		add	r3, r7, #7
 1511 000a 1A70     		strb	r2, [r3]
2457:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1512              		.loc 1 2457 0
 1513 000c 054B     		ldr	r3, .L88
 1514 000e FA1D     		add	r2, r7, #7
 1515 0010 1278     		ldrb	r2, [r2]
 1516 0012 1F21     		mov	r1, #31
 1517 0014 0A40     		and	r2, r1
 1518 0016 0121     		mov	r1, #1
 1519 0018 9140     		lsl	r1, r1, r2
 1520 001a 0A1C     		mov	r2, r1
 1521 001c 1A60     		str	r2, [r3]
2458:.\Generated_Source\PSoC4/CyLib.c **** }
 1522              		.loc 1 2458 0
 1523 001e BD46     		mov	sp, r7
 1524 0020 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 71


 1525              		@ sp needed
 1526 0022 80BD     		pop	{r7, pc}
 1527              	.L89:
 1528              		.align	2
 1529              	.L88:
 1530 0024 00E200E0 		.word	-536813056
 1531              		.cfi_endproc
 1532              	.LFE22:
 1533              		.size	CyIntSetPending, .-CyIntSetPending
 1534              		.section	.text.CyIntClearPending,"ax",%progbits
 1535              		.align	2
 1536              		.global	CyIntClearPending
 1537              		.code	16
 1538              		.thumb_func
 1539              		.type	CyIntClearPending, %function
 1540              	CyIntClearPending:
 1541              	.LFB23:
2459:.\Generated_Source\PSoC4/CyLib.c **** 
2460:.\Generated_Source\PSoC4/CyLib.c **** 
2461:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2462:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2463:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2464:.\Generated_Source\PSoC4/CyLib.c **** *
2465:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2466:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2469:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2472:.\Generated_Source\PSoC4/CyLib.c **** *  None
2473:.\Generated_Source\PSoC4/CyLib.c **** *
2474:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2475:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2476:.\Generated_Source\PSoC4/CyLib.c **** {
 1542              		.loc 1 2476 0
 1543              		.cfi_startproc
 1544 0000 80B5     		push	{r7, lr}
 1545              		.cfi_def_cfa_offset 8
 1546              		.cfi_offset 7, -8
 1547              		.cfi_offset 14, -4
 1548 0002 82B0     		sub	sp, sp, #8
 1549              		.cfi_def_cfa_offset 16
 1550 0004 00AF     		add	r7, sp, #0
 1551              		.cfi_def_cfa_register 7
 1552 0006 021C     		mov	r2, r0
 1553 0008 FB1D     		add	r3, r7, #7
 1554 000a 1A70     		strb	r2, [r3]
2477:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1555              		.loc 1 2477 0
 1556 000c 054B     		ldr	r3, .L91
 1557 000e FA1D     		add	r2, r7, #7
 1558 0010 1278     		ldrb	r2, [r2]
 1559 0012 1F21     		mov	r1, #31
 1560 0014 0A40     		and	r2, r1
 1561 0016 0121     		mov	r1, #1
 1562 0018 9140     		lsl	r1, r1, r2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 72


 1563 001a 0A1C     		mov	r2, r1
 1564 001c 1A60     		str	r2, [r3]
2478:.\Generated_Source\PSoC4/CyLib.c **** }
 1565              		.loc 1 2478 0
 1566 001e BD46     		mov	sp, r7
 1567 0020 02B0     		add	sp, sp, #8
 1568              		@ sp needed
 1569 0022 80BD     		pop	{r7, pc}
 1570              	.L92:
 1571              		.align	2
 1572              	.L91:
 1573 0024 80E200E0 		.word	-536812928
 1574              		.cfi_endproc
 1575              	.LFE23:
 1576              		.size	CyIntClearPending, .-CyIntClearPending
 1577              		.section	.text.CyHalt,"ax",%progbits
 1578              		.align	2
 1579              		.global	CyHalt
 1580              		.code	16
 1581              		.thumb_func
 1582              		.type	CyHalt, %function
 1583              	CyHalt:
 1584              	.LFB24:
2479:.\Generated_Source\PSoC4/CyLib.c **** 
2480:.\Generated_Source\PSoC4/CyLib.c **** 
2481:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2482:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2483:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2484:.\Generated_Source\PSoC4/CyLib.c **** *
2485:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2486:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2487:.\Generated_Source\PSoC4/CyLib.c **** *
2488:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2489:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2490:.\Generated_Source\PSoC4/CyLib.c **** *
2491:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2492:.\Generated_Source\PSoC4/CyLib.c **** *  None
2493:.\Generated_Source\PSoC4/CyLib.c **** *
2494:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2495:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2496:.\Generated_Source\PSoC4/CyLib.c **** {
 1585              		.loc 1 2496 0
 1586              		.cfi_startproc
 1587 0000 80B5     		push	{r7, lr}
 1588              		.cfi_def_cfa_offset 8
 1589              		.cfi_offset 7, -8
 1590              		.cfi_offset 14, -4
 1591 0002 82B0     		sub	sp, sp, #8
 1592              		.cfi_def_cfa_offset 16
 1593 0004 00AF     		add	r7, sp, #0
 1594              		.cfi_def_cfa_register 7
 1595 0006 021C     		mov	r2, r0
 1596 0008 FB1D     		add	r3, r7, #7
 1597 000a 1A70     		strb	r2, [r3]
2497:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2498:.\Generated_Source\PSoC4/CyLib.c ****     {
2499:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 73


2500:.\Generated_Source\PSoC4/CyLib.c ****     }
2501:.\Generated_Source\PSoC4/CyLib.c **** 
2502:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2503:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2504:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2505:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1598              		.loc 1 2505 0
 1599              	@ 2505 ".\Generated_Source\PSoC4\CyLib.c" 1
 1600 000c 01BE     		    bkpt    1
 1601              	@ 0 "" 2
2506:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2507:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2508:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2509:.\Generated_Source\PSoC4/CyLib.c **** }
 1602              		.loc 1 2509 0
 1603              		.code	16
 1604 000e BD46     		mov	sp, r7
 1605 0010 02B0     		add	sp, sp, #8
 1606              		@ sp needed
 1607 0012 80BD     		pop	{r7, pc}
 1608              		.cfi_endproc
 1609              	.LFE24:
 1610              		.size	CyHalt, .-CyHalt
 1611              		.section	.text.CySoftwareReset,"ax",%progbits
 1612              		.align	2
 1613              		.global	CySoftwareReset
 1614              		.code	16
 1615              		.thumb_func
 1616              		.type	CySoftwareReset, %function
 1617              	CySoftwareReset:
 1618              	.LFB25:
2510:.\Generated_Source\PSoC4/CyLib.c **** 
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2513:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2514:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2515:.\Generated_Source\PSoC4/CyLib.c **** *
2516:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2517:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2518:.\Generated_Source\PSoC4/CyLib.c **** *
2519:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2520:.\Generated_Source\PSoC4/CyLib.c **** *  None
2521:.\Generated_Source\PSoC4/CyLib.c **** *
2522:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2523:.\Generated_Source\PSoC4/CyLib.c **** *  None
2524:.\Generated_Source\PSoC4/CyLib.c **** *
2525:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2526:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2527:.\Generated_Source\PSoC4/CyLib.c **** {
 1619              		.loc 1 2527 0
 1620              		.cfi_startproc
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 00AF     		add	r7, sp, #0
 1626              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 74


2528:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2529:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2530:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2531:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2532:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1627              		.loc 1 2532 0
 1628 0004 044B     		ldr	r3, .L95
 1629 0006 044A     		ldr	r2, .L95
 1630 0008 1268     		ldr	r2, [r2]
 1631 000a 1204     		lsl	r2, r2, #16
 1632 000c 120C     		lsr	r2, r2, #16
2533:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1633              		.loc 1 2533 0
 1634 000e 0349     		ldr	r1, .L95+4
 1635 0010 0A43     		orr	r2, r1
2532:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1636              		.loc 1 2532 0
 1637 0012 1A60     		str	r2, [r3]
2534:.\Generated_Source\PSoC4/CyLib.c **** }
 1638              		.loc 1 2534 0
 1639 0014 BD46     		mov	sp, r7
 1640              		@ sp needed
 1641 0016 80BD     		pop	{r7, pc}
 1642              	.L96:
 1643              		.align	2
 1644              	.L95:
 1645 0018 0CED00E0 		.word	-536810228
 1646 001c 0400FA05 		.word	100270084
 1647              		.cfi_endproc
 1648              	.LFE25:
 1649              		.size	CySoftwareReset, .-CySoftwareReset
 1650              		.section	.text.CyDelay,"ax",%progbits
 1651              		.align	2
 1652              		.global	CyDelay
 1653              		.code	16
 1654              		.thumb_func
 1655              		.type	CyDelay, %function
 1656              	CyDelay:
 1657              	.LFB26:
2535:.\Generated_Source\PSoC4/CyLib.c **** 
2536:.\Generated_Source\PSoC4/CyLib.c **** 
2537:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2538:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2539:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2540:.\Generated_Source\PSoC4/CyLib.c **** *
2541:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2542:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2543:.\Generated_Source\PSoC4/CyLib.c **** *
2544:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2545:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2546:.\Generated_Source\PSoC4/CyLib.c **** *
2547:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2548:.\Generated_Source\PSoC4/CyLib.c **** *  None
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2551:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2552:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 75


 1658              		.loc 1 2552 0
 1659              		.cfi_startproc
 1660 0000 80B5     		push	{r7, lr}
 1661              		.cfi_def_cfa_offset 8
 1662              		.cfi_offset 7, -8
 1663              		.cfi_offset 14, -4
 1664 0002 82B0     		sub	sp, sp, #8
 1665              		.cfi_def_cfa_offset 16
 1666 0004 00AF     		add	r7, sp, #0
 1667              		.cfi_def_cfa_register 7
 1668 0006 7860     		str	r0, [r7, #4]
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1669              		.loc 1 2553 0
 1670 0008 09E0     		b	.L98
 1671              	.L99:
2554:.\Generated_Source\PSoC4/CyLib.c ****     {
2555:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2556:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2557:.\Generated_Source\PSoC4/CyLib.c ****          */
2558:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1672              		.loc 1 2558 0
 1673 000a 0C4B     		ldr	r3, .L100
 1674 000c 1B68     		ldr	r3, [r3]
 1675 000e 181C     		mov	r0, r3
 1676 0010 FFF7FEFF 		bl	CyDelayCycles
2559:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1677              		.loc 1 2559 0
 1678 0014 7B68     		ldr	r3, [r7, #4]
 1679 0016 0A4A     		ldr	r2, .L100+4
 1680 0018 9446     		mov	ip, r2
 1681 001a 6344     		add	r3, r3, ip
 1682 001c 7B60     		str	r3, [r7, #4]
 1683              	.L98:
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1684              		.loc 1 2553 0
 1685 001e 7A68     		ldr	r2, [r7, #4]
 1686 0020 8023     		mov	r3, #128
 1687 0022 1B02     		lsl	r3, r3, #8
 1688 0024 9A42     		cmp	r2, r3
 1689 0026 F0D8     		bhi	.L99
2560:.\Generated_Source\PSoC4/CyLib.c ****     }
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1690              		.loc 1 2562 0
 1691 0028 064B     		ldr	r3, .L100+8
 1692 002a 1B68     		ldr	r3, [r3]
 1693 002c 7A68     		ldr	r2, [r7, #4]
 1694 002e 5343     		mul	r3, r2
 1695 0030 181C     		mov	r0, r3
 1696 0032 FFF7FEFF 		bl	CyDelayCycles
2563:.\Generated_Source\PSoC4/CyLib.c **** }
 1697              		.loc 1 2563 0
 1698 0036 BD46     		mov	sp, r7
 1699 0038 02B0     		add	sp, sp, #8
 1700              		@ sp needed
 1701 003a 80BD     		pop	{r7, pc}
 1702              	.L101:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 76


 1703              		.align	2
 1704              	.L100:
 1705 003c 00000000 		.word	cydelay32kMs
 1706 0040 0080FFFF 		.word	-32768
 1707 0044 00000000 		.word	cydelayFreqKhz
 1708              		.cfi_endproc
 1709              	.LFE26:
 1710              		.size	CyDelay, .-CyDelay
 1711              		.section	.text.CyDelayUs,"ax",%progbits
 1712              		.align	2
 1713              		.global	CyDelayUs
 1714              		.code	16
 1715              		.thumb_func
 1716              		.type	CyDelayUs, %function
 1717              	CyDelayUs:
 1718              	.LFB27:
2564:.\Generated_Source\PSoC4/CyLib.c **** 
2565:.\Generated_Source\PSoC4/CyLib.c **** 
2566:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2567:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2568:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2569:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2570:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2571:.\Generated_Source\PSoC4/CyLib.c **** *
2572:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2573:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2574:.\Generated_Source\PSoC4/CyLib.c **** *
2575:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2576:.\Generated_Source\PSoC4/CyLib.c **** *  None
2577:.\Generated_Source\PSoC4/CyLib.c **** *
2578:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2579:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2580:.\Generated_Source\PSoC4/CyLib.c **** {
 1719              		.loc 1 2580 0
 1720              		.cfi_startproc
 1721 0000 80B5     		push	{r7, lr}
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 7, -8
 1724              		.cfi_offset 14, -4
 1725 0002 82B0     		sub	sp, sp, #8
 1726              		.cfi_def_cfa_offset 16
 1727 0004 00AF     		add	r7, sp, #0
 1728              		.cfi_def_cfa_register 7
 1729 0006 021C     		mov	r2, r0
 1730 0008 BB1D     		add	r3, r7, #6
 1731 000a 1A80     		strh	r2, [r3]
2581:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1732              		.loc 1 2581 0
 1733 000c BB1D     		add	r3, r7, #6
 1734 000e 1B88     		ldrh	r3, [r3]
 1735 0010 044A     		ldr	r2, .L103
 1736 0012 1278     		ldrb	r2, [r2]
 1737 0014 5343     		mul	r3, r2
 1738 0016 181C     		mov	r0, r3
 1739 0018 FFF7FEFF 		bl	CyDelayCycles
2582:.\Generated_Source\PSoC4/CyLib.c **** }
 1740              		.loc 1 2582 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 77


 1741 001c BD46     		mov	sp, r7
 1742 001e 02B0     		add	sp, sp, #8
 1743              		@ sp needed
 1744 0020 80BD     		pop	{r7, pc}
 1745              	.L104:
 1746 0022 C046     		.align	2
 1747              	.L103:
 1748 0024 00000000 		.word	cydelayFreqMhz
 1749              		.cfi_endproc
 1750              	.LFE27:
 1751              		.size	CyDelayUs, .-CyDelayUs
 1752              		.global	__aeabi_uidiv
 1753              		.section	.text.CyDelayFreq,"ax",%progbits
 1754              		.align	2
 1755              		.global	CyDelayFreq
 1756              		.code	16
 1757              		.thumb_func
 1758              		.type	CyDelayFreq, %function
 1759              	CyDelayFreq:
 1760              	.LFB28:
2583:.\Generated_Source\PSoC4/CyLib.c **** 
2584:.\Generated_Source\PSoC4/CyLib.c **** 
2585:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2586:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2587:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2588:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2589:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2590:.\Generated_Source\PSoC4/CyLib.c **** *
2591:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2592:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2593:.\Generated_Source\PSoC4/CyLib.c **** *
2594:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2595:.\Generated_Source\PSoC4/CyLib.c **** *  None
2596:.\Generated_Source\PSoC4/CyLib.c **** *
2597:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2599:.\Generated_Source\PSoC4/CyLib.c **** {
 1761              		.loc 1 2599 0
 1762              		.cfi_startproc
 1763 0000 80B5     		push	{r7, lr}
 1764              		.cfi_def_cfa_offset 8
 1765              		.cfi_offset 7, -8
 1766              		.cfi_offset 14, -4
 1767 0002 82B0     		sub	sp, sp, #8
 1768              		.cfi_def_cfa_offset 16
 1769 0004 00AF     		add	r7, sp, #0
 1770              		.cfi_def_cfa_register 7
 1771 0006 7860     		str	r0, [r7, #4]
2600:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1772              		.loc 1 2600 0
 1773 0008 7B68     		ldr	r3, [r7, #4]
 1774 000a 002B     		cmp	r3, #0
 1775 000c 03D0     		beq	.L106
2601:.\Generated_Source\PSoC4/CyLib.c ****     {
2602:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1776              		.loc 1 2602 0
 1777 000e 154B     		ldr	r3, .L108
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 78


 1778 0010 7A68     		ldr	r2, [r7, #4]
 1779 0012 1A60     		str	r2, [r3]
 1780 0014 02E0     		b	.L107
 1781              	.L106:
2603:.\Generated_Source\PSoC4/CyLib.c ****     }
2604:.\Generated_Source\PSoC4/CyLib.c ****     else
2605:.\Generated_Source\PSoC4/CyLib.c ****     {
2606:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1782              		.loc 1 2606 0
 1783 0016 134B     		ldr	r3, .L108
 1784 0018 134A     		ldr	r2, .L108+4
 1785 001a 1A60     		str	r2, [r3]
 1786              	.L107:
2607:.\Generated_Source\PSoC4/CyLib.c ****     }
2608:.\Generated_Source\PSoC4/CyLib.c **** 
2609:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1787              		.loc 1 2609 0
 1788 001c 114B     		ldr	r3, .L108
 1789 001e 1B68     		ldr	r3, [r3]
 1790 0020 124A     		ldr	r2, .L108+8
 1791 0022 9446     		mov	ip, r2
 1792 0024 6344     		add	r3, r3, ip
 1793 0026 181C     		mov	r0, r3
 1794 0028 1149     		ldr	r1, .L108+12
 1795 002a FFF7FEFF 		bl	__aeabi_uidiv
 1796 002e 031C     		mov	r3, r0
 1797 0030 DAB2     		uxtb	r2, r3
 1798 0032 104B     		ldr	r3, .L108+16
 1799 0034 1A70     		strb	r2, [r3]
2610:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1800              		.loc 1 2610 0
 1801 0036 0B4B     		ldr	r3, .L108
 1802 0038 1B68     		ldr	r3, [r3]
 1803 003a 0F4A     		ldr	r2, .L108+20
 1804 003c 9446     		mov	ip, r2
 1805 003e 6344     		add	r3, r3, ip
 1806 0040 181C     		mov	r0, r3
 1807 0042 FA23     		mov	r3, #250
 1808 0044 9900     		lsl	r1, r3, #2
 1809 0046 FFF7FEFF 		bl	__aeabi_uidiv
 1810 004a 031C     		mov	r3, r0
 1811 004c 1A1C     		mov	r2, r3
 1812 004e 0B4B     		ldr	r3, .L108+24
 1813 0050 1A60     		str	r2, [r3]
2611:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1814              		.loc 1 2611 0
 1815 0052 0A4B     		ldr	r3, .L108+24
 1816 0054 1B68     		ldr	r3, [r3]
 1817 0056 DA03     		lsl	r2, r3, #15
 1818 0058 094B     		ldr	r3, .L108+28
 1819 005a 1A60     		str	r2, [r3]
2612:.\Generated_Source\PSoC4/CyLib.c **** }
 1820              		.loc 1 2612 0
 1821 005c BD46     		mov	sp, r7
 1822 005e 02B0     		add	sp, sp, #8
 1823              		@ sp needed
 1824 0060 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 79


 1825              	.L109:
 1826 0062 C046     		.align	2
 1827              	.L108:
 1828 0064 00000000 		.word	cydelayFreqHz
 1829 0068 00366E01 		.word	24000000
 1830 006c 3F420F00 		.word	999999
 1831 0070 40420F00 		.word	1000000
 1832 0074 00000000 		.word	cydelayFreqMhz
 1833 0078 E7030000 		.word	999
 1834 007c 00000000 		.word	cydelayFreqKhz
 1835 0080 00000000 		.word	cydelay32kMs
 1836              		.cfi_endproc
 1837              	.LFE28:
 1838              		.size	CyDelayFreq, .-CyDelayFreq
 1839              		.section	.text.CySysTickStart,"ax",%progbits
 1840              		.align	2
 1841              		.global	CySysTickStart
 1842              		.code	16
 1843              		.thumb_func
 1844              		.type	CySysTickStart, %function
 1845              	CySysTickStart:
 1846              	.LFB29:
2613:.\Generated_Source\PSoC4/CyLib.c **** 
2614:.\Generated_Source\PSoC4/CyLib.c **** 
2615:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStart
2617:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2618:.\Generated_Source\PSoC4/CyLib.c **** *
2619:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2620:.\Generated_Source\PSoC4/CyLib.c **** *  Configures the SysTick timer to generate an interrupt every 1 ms and enables
2621:.\Generated_Source\PSoC4/CyLib.c **** *  the interrupt. Refer to the corresponding function description for details.
2622:.\Generated_Source\PSoC4/CyLib.c **** *
2623:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2624:.\Generated_Source\PSoC4/CyLib.c **** *  None
2625:.\Generated_Source\PSoC4/CyLib.c **** *
2626:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2627:.\Generated_Source\PSoC4/CyLib.c **** *  None
2628:.\Generated_Source\PSoC4/CyLib.c **** *
2629:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2630:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2631:.\Generated_Source\PSoC4/CyLib.c **** *
2632:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2634:.\Generated_Source\PSoC4/CyLib.c **** {
 1847              		.loc 1 2634 0
 1848              		.cfi_startproc
 1849 0000 80B5     		push	{r7, lr}
 1850              		.cfi_def_cfa_offset 8
 1851              		.cfi_offset 7, -8
 1852              		.cfi_offset 14, -4
 1853 0002 00AF     		add	r7, sp, #0
 1854              		.cfi_def_cfa_register 7
2635:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1855              		.loc 1 2635 0
 1856 0004 064B     		ldr	r3, .L112
 1857 0006 1B68     		ldr	r3, [r3]
 1858 0008 002B     		cmp	r3, #0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 80


 1859 000a 04D1     		bne	.L111
2636:.\Generated_Source\PSoC4/CyLib.c ****     {
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1860              		.loc 1 2637 0
 1861 000c FFF7FEFF 		bl	CySysTickInit
2638:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1862              		.loc 1 2638 0
 1863 0010 034B     		ldr	r3, .L112
 1864 0012 0122     		mov	r2, #1
 1865 0014 1A60     		str	r2, [r3]
 1866              	.L111:
2639:.\Generated_Source\PSoC4/CyLib.c ****     }
2640:.\Generated_Source\PSoC4/CyLib.c **** 
2641:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1867              		.loc 1 2641 0
 1868 0016 FFF7FEFF 		bl	CySysTickEnable
2642:.\Generated_Source\PSoC4/CyLib.c **** }
 1869              		.loc 1 2642 0
 1870 001a BD46     		mov	sp, r7
 1871              		@ sp needed
 1872 001c 80BD     		pop	{r7, pc}
 1873              	.L113:
 1874 001e C046     		.align	2
 1875              	.L112:
 1876 0020 00000000 		.word	CySysTickInitVar
 1877              		.cfi_endproc
 1878              	.LFE29:
 1879              		.size	CySysTickStart, .-CySysTickStart
 1880              		.section	.text.CySysTickInit,"ax",%progbits
 1881              		.align	2
 1882              		.global	CySysTickInit
 1883              		.code	16
 1884              		.thumb_func
 1885              		.type	CySysTickInit, %function
 1886              	CySysTickInit:
 1887              	.LFB30:
2643:.\Generated_Source\PSoC4/CyLib.c **** 
2644:.\Generated_Source\PSoC4/CyLib.c **** 
2645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2648:.\Generated_Source\PSoC4/CyLib.c **** *
2649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  every 1 ms.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2657:.\Generated_Source\PSoC4/CyLib.c ****     *
2658:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2660:.\Generated_Source\PSoC4/CyLib.c ****     *
2661:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set.
2663:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 81


2664:.\Generated_Source\PSoC4/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2665:.\Generated_Source\PSoC4/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2666:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2667:.\Generated_Source\PSoC4/CyLib.c ****     *
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickInit(void)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
 1888              		.loc 1 2670 0
 1889              		.cfi_startproc
 1890 0000 80B5     		push	{r7, lr}
 1891              		.cfi_def_cfa_offset 8
 1892              		.cfi_offset 7, -8
 1893              		.cfi_offset 14, -4
 1894 0002 82B0     		sub	sp, sp, #8
 1895              		.cfi_def_cfa_offset 16
 1896 0004 00AF     		add	r7, sp, #0
 1897              		.cfi_def_cfa_register 7
2671:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
2672:.\Generated_Source\PSoC4/CyLib.c **** 
2673:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1898              		.loc 1 2673 0
 1899 0006 0023     		mov	r3, #0
 1900 0008 7B60     		str	r3, [r7, #4]
 1901 000a 07E0     		b	.L115
 1902              	.L116:
2674:.\Generated_Source\PSoC4/CyLib.c ****     {
2675:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1903              		.loc 1 2675 0 discriminator 3
 1904 000c 114B     		ldr	r3, .L117
 1905 000e 7A68     		ldr	r2, [r7, #4]
 1906 0010 9200     		lsl	r2, r2, #2
 1907 0012 0021     		mov	r1, #0
 1908 0014 D150     		str	r1, [r2, r3]
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1909              		.loc 1 2673 0 discriminator 3
 1910 0016 7B68     		ldr	r3, [r7, #4]
 1911 0018 0133     		add	r3, r3, #1
 1912 001a 7B60     		str	r3, [r7, #4]
 1913              	.L115:
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1914              		.loc 1 2673 0 is_stmt 0 discriminator 1
 1915 001c 7B68     		ldr	r3, [r7, #4]
 1916 001e 042B     		cmp	r3, #4
 1917 0020 F4D9     		bls	.L116
2676:.\Generated_Source\PSoC4/CyLib.c ****     }
2677:.\Generated_Source\PSoC4/CyLib.c **** 
2678:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1918              		.loc 1 2678 0 is_stmt 1
 1919 0022 0D4B     		ldr	r3, .L117+4
 1920 0024 0F20     		mov	r0, #15
 1921 0026 191C     		mov	r1, r3
 1922 0028 FFF7FEFF 		bl	CyIntSetSysVector
2679:.\Generated_Source\PSoC4/CyLib.c **** 
2680:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2681:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2682:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2683:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 82


2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1923              		.loc 1 2684 0
 1924 002c 0B4B     		ldr	r3, .L117+8
 1925 002e 1B68     		ldr	r3, [r3]
 1926 0030 181C     		mov	r0, r3
 1927 0032 FA23     		mov	r3, #250
 1928 0034 9900     		lsl	r1, r3, #2
 1929 0036 FFF7FEFF 		bl	__aeabi_uidiv
 1930 003a 031C     		mov	r3, r0
 1931 003c 181C     		mov	r0, r3
 1932 003e FFF7FEFF 		bl	CySysTickSetReload
2685:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1933              		.loc 1 2685 0
 1934 0042 FFF7FEFF 		bl	CySysTickClear
2686:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1935              		.loc 1 2686 0
 1936 0046 0F20     		mov	r0, #15
 1937 0048 FFF7FEFF 		bl	CyIntEnable
2687:.\Generated_Source\PSoC4/CyLib.c **** }
 1938              		.loc 1 2687 0
 1939 004c BD46     		mov	sp, r7
 1940 004e 02B0     		add	sp, sp, #8
 1941              		@ sp needed
 1942 0050 80BD     		pop	{r7, pc}
 1943              	.L118:
 1944 0052 C046     		.align	2
 1945              	.L117:
 1946 0054 00000000 		.word	CySysTickCallbacks
 1947 0058 00000000 		.word	CySysTickServiceCallbacks
 1948 005c 00000000 		.word	cydelayFreqHz
 1949              		.cfi_endproc
 1950              	.LFE30:
 1951              		.size	CySysTickInit, .-CySysTickInit
 1952              		.section	.text.CySysTickEnable,"ax",%progbits
 1953              		.align	2
 1954              		.global	CySysTickEnable
 1955              		.code	16
 1956              		.thumb_func
 1957              		.type	CySysTickEnable, %function
 1958              	CySysTickEnable:
 1959              	.LFB31:
2688:.\Generated_Source\PSoC4/CyLib.c **** 
2689:.\Generated_Source\PSoC4/CyLib.c **** 
2690:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2691:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2692:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2698:.\Generated_Source\PSoC4/CyLib.c **** *  None
2699:.\Generated_Source\PSoC4/CyLib.c **** *
2700:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2701:.\Generated_Source\PSoC4/CyLib.c **** *  None
2702:.\Generated_Source\PSoC4/CyLib.c **** *
2703:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 83


2704:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2705:.\Generated_Source\PSoC4/CyLib.c **** *
2706:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2708:.\Generated_Source\PSoC4/CyLib.c **** {
 1960              		.loc 1 2708 0
 1961              		.cfi_startproc
 1962 0000 80B5     		push	{r7, lr}
 1963              		.cfi_def_cfa_offset 8
 1964              		.cfi_offset 7, -8
 1965              		.cfi_offset 14, -4
 1966 0002 00AF     		add	r7, sp, #0
 1967              		.cfi_def_cfa_register 7
2709:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1968              		.loc 1 2709 0
 1969 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2710:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1970              		.loc 1 2710 0
 1971 0008 034B     		ldr	r3, .L120
 1972 000a 034A     		ldr	r2, .L120
 1973 000c 1268     		ldr	r2, [r2]
 1974 000e 0121     		mov	r1, #1
 1975 0010 0A43     		orr	r2, r1
 1976 0012 1A60     		str	r2, [r3]
2711:.\Generated_Source\PSoC4/CyLib.c **** }
 1977              		.loc 1 2711 0
 1978 0014 BD46     		mov	sp, r7
 1979              		@ sp needed
 1980 0016 80BD     		pop	{r7, pc}
 1981              	.L121:
 1982              		.align	2
 1983              	.L120:
 1984 0018 10E000E0 		.word	-536813552
 1985              		.cfi_endproc
 1986              	.LFE31:
 1987              		.size	CySysTickEnable, .-CySysTickEnable
 1988              		.section	.text.CySysTickStop,"ax",%progbits
 1989              		.align	2
 1990              		.global	CySysTickStop
 1991              		.code	16
 1992              		.thumb_func
 1993              		.type	CySysTickStop, %function
 1994              	CySysTickStop:
 1995              	.LFB32:
2712:.\Generated_Source\PSoC4/CyLib.c **** 
2713:.\Generated_Source\PSoC4/CyLib.c **** 
2714:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2715:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2716:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2717:.\Generated_Source\PSoC4/CyLib.c **** *
2718:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2719:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2722:.\Generated_Source\PSoC4/CyLib.c **** *  None
2723:.\Generated_Source\PSoC4/CyLib.c **** *
2724:.\Generated_Source\PSoC4/CyLib.c **** * Return:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 84


2725:.\Generated_Source\PSoC4/CyLib.c **** *  None
2726:.\Generated_Source\PSoC4/CyLib.c **** *
2727:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2729:.\Generated_Source\PSoC4/CyLib.c **** *
2730:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2731:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2732:.\Generated_Source\PSoC4/CyLib.c **** {
 1996              		.loc 1 2732 0
 1997              		.cfi_startproc
 1998 0000 80B5     		push	{r7, lr}
 1999              		.cfi_def_cfa_offset 8
 2000              		.cfi_offset 7, -8
 2001              		.cfi_offset 14, -4
 2002 0002 00AF     		add	r7, sp, #0
 2003              		.cfi_def_cfa_register 7
2733:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2004              		.loc 1 2733 0
 2005 0004 034B     		ldr	r3, .L123
 2006 0006 034A     		ldr	r2, .L123
 2007 0008 1268     		ldr	r2, [r2]
 2008 000a 0121     		mov	r1, #1
 2009 000c 8A43     		bic	r2, r1
 2010 000e 1A60     		str	r2, [r3]
2734:.\Generated_Source\PSoC4/CyLib.c **** }
 2011              		.loc 1 2734 0
 2012 0010 BD46     		mov	sp, r7
 2013              		@ sp needed
 2014 0012 80BD     		pop	{r7, pc}
 2015              	.L124:
 2016              		.align	2
 2017              	.L123:
 2018 0014 10E000E0 		.word	-536813552
 2019              		.cfi_endproc
 2020              	.LFE32:
 2021              		.size	CySysTickStop, .-CySysTickStop
 2022              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2023              		.align	2
 2024              		.global	CySysTickEnableInterrupt
 2025              		.code	16
 2026              		.thumb_func
 2027              		.type	CySysTickEnableInterrupt, %function
 2028              	CySysTickEnableInterrupt:
 2029              	.LFB33:
2735:.\Generated_Source\PSoC4/CyLib.c **** 
2736:.\Generated_Source\PSoC4/CyLib.c **** 
2737:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2739:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CyLib.c **** *
2741:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2742:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2743:.\Generated_Source\PSoC4/CyLib.c **** *
2744:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CyLib.c **** *  None
2746:.\Generated_Source\PSoC4/CyLib.c **** *
2747:.\Generated_Source\PSoC4/CyLib.c **** * Return:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 85


2748:.\Generated_Source\PSoC4/CyLib.c **** *  None
2749:.\Generated_Source\PSoC4/CyLib.c **** *
2750:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2751:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2752:.\Generated_Source\PSoC4/CyLib.c **** *
2753:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2755:.\Generated_Source\PSoC4/CyLib.c **** {
 2030              		.loc 1 2755 0
 2031              		.cfi_startproc
 2032 0000 80B5     		push	{r7, lr}
 2033              		.cfi_def_cfa_offset 8
 2034              		.cfi_offset 7, -8
 2035              		.cfi_offset 14, -4
 2036 0002 00AF     		add	r7, sp, #0
 2037              		.cfi_def_cfa_register 7
2756:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2038              		.loc 1 2756 0
 2039 0004 034B     		ldr	r3, .L126
 2040 0006 034A     		ldr	r2, .L126
 2041 0008 1268     		ldr	r2, [r2]
 2042 000a 0221     		mov	r1, #2
 2043 000c 0A43     		orr	r2, r1
 2044 000e 1A60     		str	r2, [r3]
2757:.\Generated_Source\PSoC4/CyLib.c **** }
 2045              		.loc 1 2757 0
 2046 0010 BD46     		mov	sp, r7
 2047              		@ sp needed
 2048 0012 80BD     		pop	{r7, pc}
 2049              	.L127:
 2050              		.align	2
 2051              	.L126:
 2052 0014 10E000E0 		.word	-536813552
 2053              		.cfi_endproc
 2054              	.LFE33:
 2055              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2056              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2057              		.align	2
 2058              		.global	CySysTickDisableInterrupt
 2059              		.code	16
 2060              		.thumb_func
 2061              		.type	CySysTickDisableInterrupt, %function
 2062              	CySysTickDisableInterrupt:
 2063              	.LFB34:
2758:.\Generated_Source\PSoC4/CyLib.c **** 
2759:.\Generated_Source\PSoC4/CyLib.c **** 
2760:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2762:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2763:.\Generated_Source\PSoC4/CyLib.c **** *
2764:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2765:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2766:.\Generated_Source\PSoC4/CyLib.c **** *
2767:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2768:.\Generated_Source\PSoC4/CyLib.c **** *  None
2769:.\Generated_Source\PSoC4/CyLib.c **** *
2770:.\Generated_Source\PSoC4/CyLib.c **** * Return:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 86


2771:.\Generated_Source\PSoC4/CyLib.c **** *  None
2772:.\Generated_Source\PSoC4/CyLib.c **** *
2773:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2774:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2775:.\Generated_Source\PSoC4/CyLib.c **** *
2776:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2777:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2778:.\Generated_Source\PSoC4/CyLib.c **** {
 2064              		.loc 1 2778 0
 2065              		.cfi_startproc
 2066 0000 80B5     		push	{r7, lr}
 2067              		.cfi_def_cfa_offset 8
 2068              		.cfi_offset 7, -8
 2069              		.cfi_offset 14, -4
 2070 0002 00AF     		add	r7, sp, #0
 2071              		.cfi_def_cfa_register 7
2779:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2072              		.loc 1 2779 0
 2073 0004 034B     		ldr	r3, .L129
 2074 0006 034A     		ldr	r2, .L129
 2075 0008 1268     		ldr	r2, [r2]
 2076 000a 0221     		mov	r1, #2
 2077 000c 8A43     		bic	r2, r1
 2078 000e 1A60     		str	r2, [r3]
2780:.\Generated_Source\PSoC4/CyLib.c **** }
 2079              		.loc 1 2780 0
 2080 0010 BD46     		mov	sp, r7
 2081              		@ sp needed
 2082 0012 80BD     		pop	{r7, pc}
 2083              	.L130:
 2084              		.align	2
 2085              	.L129:
 2086 0014 10E000E0 		.word	-536813552
 2087              		.cfi_endproc
 2088              	.LFE34:
 2089              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2090              		.section	.text.CySysTickSetReload,"ax",%progbits
 2091              		.align	2
 2092              		.global	CySysTickSetReload
 2093              		.code	16
 2094              		.thumb_func
 2095              		.type	CySysTickSetReload, %function
 2096              	CySysTickSetReload:
 2097              	.LFB35:
2781:.\Generated_Source\PSoC4/CyLib.c **** 
2782:.\Generated_Source\PSoC4/CyLib.c **** 
2783:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2784:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2785:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2786:.\Generated_Source\PSoC4/CyLib.c **** *
2787:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2788:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2789:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2790:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2791:.\Generated_Source\PSoC4/CyLib.c **** *
2792:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2793:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 87


2794:.\Generated_Source\PSoC4/CyLib.c **** *
2795:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2796:.\Generated_Source\PSoC4/CyLib.c **** *  None
2797:.\Generated_Source\PSoC4/CyLib.c **** *
2798:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2799:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2800:.\Generated_Source\PSoC4/CyLib.c **** {
 2098              		.loc 1 2800 0
 2099              		.cfi_startproc
 2100 0000 80B5     		push	{r7, lr}
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 7, -8
 2103              		.cfi_offset 14, -4
 2104 0002 82B0     		sub	sp, sp, #8
 2105              		.cfi_def_cfa_offset 16
 2106 0004 00AF     		add	r7, sp, #0
 2107              		.cfi_def_cfa_register 7
 2108 0006 7860     		str	r0, [r7, #4]
2801:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2109              		.loc 1 2801 0
 2110 0008 034B     		ldr	r3, .L132
 2111 000a 7A68     		ldr	r2, [r7, #4]
 2112 000c 1202     		lsl	r2, r2, #8
 2113 000e 120A     		lsr	r2, r2, #8
 2114 0010 1A60     		str	r2, [r3]
2802:.\Generated_Source\PSoC4/CyLib.c **** }
 2115              		.loc 1 2802 0
 2116 0012 BD46     		mov	sp, r7
 2117 0014 02B0     		add	sp, sp, #8
 2118              		@ sp needed
 2119 0016 80BD     		pop	{r7, pc}
 2120              	.L133:
 2121              		.align	2
 2122              	.L132:
 2123 0018 14E000E0 		.word	-536813548
 2124              		.cfi_endproc
 2125              	.LFE35:
 2126              		.size	CySysTickSetReload, .-CySysTickSetReload
 2127              		.section	.text.CySysTickGetReload,"ax",%progbits
 2128              		.align	2
 2129              		.global	CySysTickGetReload
 2130              		.code	16
 2131              		.thumb_func
 2132              		.type	CySysTickGetReload, %function
 2133              	CySysTickGetReload:
 2134              	.LFB36:
2803:.\Generated_Source\PSoC4/CyLib.c **** 
2804:.\Generated_Source\PSoC4/CyLib.c **** 
2805:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2806:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2807:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2808:.\Generated_Source\PSoC4/CyLib.c **** *
2809:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2810:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2811:.\Generated_Source\PSoC4/CyLib.c **** *
2812:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2813:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 88


2814:.\Generated_Source\PSoC4/CyLib.c **** *
2815:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2816:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2817:.\Generated_Source\PSoC4/CyLib.c **** *
2818:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2820:.\Generated_Source\PSoC4/CyLib.c **** {
 2135              		.loc 1 2820 0
 2136              		.cfi_startproc
 2137 0000 80B5     		push	{r7, lr}
 2138              		.cfi_def_cfa_offset 8
 2139              		.cfi_offset 7, -8
 2140              		.cfi_offset 14, -4
 2141 0002 00AF     		add	r7, sp, #0
 2142              		.cfi_def_cfa_register 7
2821:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2143              		.loc 1 2821 0
 2144 0004 034B     		ldr	r3, .L136
 2145 0006 1B68     		ldr	r3, [r3]
 2146 0008 1B02     		lsl	r3, r3, #8
 2147 000a 1B0A     		lsr	r3, r3, #8
2822:.\Generated_Source\PSoC4/CyLib.c **** }
 2148              		.loc 1 2822 0
 2149 000c 181C     		mov	r0, r3
 2150 000e BD46     		mov	sp, r7
 2151              		@ sp needed
 2152 0010 80BD     		pop	{r7, pc}
 2153              	.L137:
 2154 0012 C046     		.align	2
 2155              	.L136:
 2156 0014 14E000E0 		.word	-536813548
 2157              		.cfi_endproc
 2158              	.LFE36:
 2159              		.size	CySysTickGetReload, .-CySysTickGetReload
 2160              		.section	.text.CySysTickGetValue,"ax",%progbits
 2161              		.align	2
 2162              		.global	CySysTickGetValue
 2163              		.code	16
 2164              		.thumb_func
 2165              		.type	CySysTickGetValue, %function
 2166              	CySysTickGetValue:
 2167              	.LFB37:
2823:.\Generated_Source\PSoC4/CyLib.c **** 
2824:.\Generated_Source\PSoC4/CyLib.c **** 
2825:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2827:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2828:.\Generated_Source\PSoC4/CyLib.c **** *
2829:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2830:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2831:.\Generated_Source\PSoC4/CyLib.c **** *
2832:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2833:.\Generated_Source\PSoC4/CyLib.c **** *  None
2834:.\Generated_Source\PSoC4/CyLib.c **** *
2835:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2836:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2837:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 89


2838:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2839:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2840:.\Generated_Source\PSoC4/CyLib.c **** {
 2168              		.loc 1 2840 0
 2169              		.cfi_startproc
 2170 0000 80B5     		push	{r7, lr}
 2171              		.cfi_def_cfa_offset 8
 2172              		.cfi_offset 7, -8
 2173              		.cfi_offset 14, -4
 2174 0002 00AF     		add	r7, sp, #0
 2175              		.cfi_def_cfa_register 7
2841:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2176              		.loc 1 2841 0
 2177 0004 034B     		ldr	r3, .L140
 2178 0006 1B68     		ldr	r3, [r3]
 2179 0008 1B02     		lsl	r3, r3, #8
 2180 000a 1B0A     		lsr	r3, r3, #8
2842:.\Generated_Source\PSoC4/CyLib.c **** }
 2181              		.loc 1 2842 0
 2182 000c 181C     		mov	r0, r3
 2183 000e BD46     		mov	sp, r7
 2184              		@ sp needed
 2185 0010 80BD     		pop	{r7, pc}
 2186              	.L141:
 2187 0012 C046     		.align	2
 2188              	.L140:
 2189 0014 18E000E0 		.word	-536813544
 2190              		.cfi_endproc
 2191              	.LFE37:
 2192              		.size	CySysTickGetValue, .-CySysTickGetValue
 2193              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2194              		.align	2
 2195              		.global	CySysTickGetCountFlag
 2196              		.code	16
 2197              		.thumb_func
 2198              		.type	CySysTickGetCountFlag, %function
 2199              	CySysTickGetCountFlag:
 2200              	.LFB38:
2843:.\Generated_Source\PSoC4/CyLib.c **** 
2844:.\Generated_Source\PSoC4/CyLib.c **** 
2845:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2846:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2847:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2848:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2849:.\Generated_Source\PSoC4/CyLib.c ****     *
2850:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2851:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2852:.\Generated_Source\PSoC4/CyLib.c ****     *
2853:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2854:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2855:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2856:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2857:.\Generated_Source\PSoC4/CyLib.c ****     *
2858:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2859:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2860:.\Generated_Source\PSoC4/CyLib.c ****     *
2861:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 90


2862:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2863:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2864:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2865:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2866:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2867:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2868:.\Generated_Source\PSoC4/CyLib.c ****     *
2869:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2870:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2871:.\Generated_Source\PSoC4/CyLib.c ****     *
2872:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2873:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2874:.\Generated_Source\PSoC4/CyLib.c ****     {
2875:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2876:.\Generated_Source\PSoC4/CyLib.c ****         {
2877:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2878:.\Generated_Source\PSoC4/CyLib.c ****         }
2879:.\Generated_Source\PSoC4/CyLib.c ****         else
2880:.\Generated_Source\PSoC4/CyLib.c ****         {
2881:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2882:.\Generated_Source\PSoC4/CyLib.c ****         }
2883:.\Generated_Source\PSoC4/CyLib.c ****     }
2884:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2885:.\Generated_Source\PSoC4/CyLib.c **** 
2886:.\Generated_Source\PSoC4/CyLib.c **** 
2887:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2888:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2889:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2890:.\Generated_Source\PSoC4/CyLib.c **** *
2891:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2892:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2893:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2894:.\Generated_Source\PSoC4/CyLib.c **** *
2895:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2896:.\Generated_Source\PSoC4/CyLib.c **** *  None
2897:.\Generated_Source\PSoC4/CyLib.c **** *
2898:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2899:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2900:.\Generated_Source\PSoC4/CyLib.c **** *
2901:.\Generated_Source\PSoC4/CyLib.c **** *
2902:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2903:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2904:.\Generated_Source\PSoC4/CyLib.c **** *
2905:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2907:.\Generated_Source\PSoC4/CyLib.c **** {
 2201              		.loc 1 2907 0
 2202              		.cfi_startproc
 2203 0000 80B5     		push	{r7, lr}
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 7, -8
 2206              		.cfi_offset 14, -4
 2207 0002 00AF     		add	r7, sp, #0
 2208              		.cfi_def_cfa_register 7
2908:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2209              		.loc 1 2908 0
 2210 0004 034B     		ldr	r3, .L144
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 91


 2211 0006 1B68     		ldr	r3, [r3]
 2212 0008 1B0C     		lsr	r3, r3, #16
 2213 000a 0122     		mov	r2, #1
 2214 000c 1340     		and	r3, r2
2909:.\Generated_Source\PSoC4/CyLib.c **** }
 2215              		.loc 1 2909 0
 2216 000e 181C     		mov	r0, r3
 2217 0010 BD46     		mov	sp, r7
 2218              		@ sp needed
 2219 0012 80BD     		pop	{r7, pc}
 2220              	.L145:
 2221              		.align	2
 2222              	.L144:
 2223 0014 10E000E0 		.word	-536813552
 2224              		.cfi_endproc
 2225              	.LFE38:
 2226              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2227              		.section	.text.CySysTickClear,"ax",%progbits
 2228              		.align	2
 2229              		.global	CySysTickClear
 2230              		.code	16
 2231              		.thumb_func
 2232              		.type	CySysTickClear, %function
 2233              	CySysTickClear:
 2234              	.LFB39:
2910:.\Generated_Source\PSoC4/CyLib.c **** 
2911:.\Generated_Source\PSoC4/CyLib.c **** 
2912:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2913:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2914:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2915:.\Generated_Source\PSoC4/CyLib.c **** *
2916:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2917:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2918:.\Generated_Source\PSoC4/CyLib.c **** *
2919:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2920:.\Generated_Source\PSoC4/CyLib.c **** *  None
2921:.\Generated_Source\PSoC4/CyLib.c **** *
2922:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2923:.\Generated_Source\PSoC4/CyLib.c **** *  None
2924:.\Generated_Source\PSoC4/CyLib.c **** *
2925:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2927:.\Generated_Source\PSoC4/CyLib.c **** {
 2235              		.loc 1 2927 0
 2236              		.cfi_startproc
 2237 0000 80B5     		push	{r7, lr}
 2238              		.cfi_def_cfa_offset 8
 2239              		.cfi_offset 7, -8
 2240              		.cfi_offset 14, -4
 2241 0002 00AF     		add	r7, sp, #0
 2242              		.cfi_def_cfa_register 7
2928:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2243              		.loc 1 2928 0
 2244 0004 024B     		ldr	r3, .L147
 2245 0006 0022     		mov	r2, #0
 2246 0008 1A60     		str	r2, [r3]
2929:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 92


 2247              		.loc 1 2929 0
 2248 000a BD46     		mov	sp, r7
 2249              		@ sp needed
 2250 000c 80BD     		pop	{r7, pc}
 2251              	.L148:
 2252 000e C046     		.align	2
 2253              	.L147:
 2254 0010 18E000E0 		.word	-536813544
 2255              		.cfi_endproc
 2256              	.LFE39:
 2257              		.size	CySysTickClear, .-CySysTickClear
 2258              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2259              		.align	2
 2260              		.global	CySysTickSetCallback
 2261              		.code	16
 2262              		.thumb_func
 2263              		.type	CySysTickSetCallback, %function
 2264              	CySysTickSetCallback:
 2265              	.LFB40:
2930:.\Generated_Source\PSoC4/CyLib.c **** 
2931:.\Generated_Source\PSoC4/CyLib.c **** 
2932:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2933:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2934:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2935:.\Generated_Source\PSoC4/CyLib.c **** *
2936:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2937:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2938:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2939:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2940:.\Generated_Source\PSoC4/CyLib.c **** *
2941:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2942:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2943:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2944:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2945:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2946:.\Generated_Source\PSoC4/CyLib.c **** *
2947:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2948:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
2949:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2950:.\Generated_Source\PSoC4/CyLib.c **** *
2951:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2952:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2953:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2954:.\Generated_Source\PSoC4/CyLib.c **** *
2955:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2956:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2957:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2958:.\Generated_Source\PSoC4/CyLib.c **** *
2959:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2960:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2961:.\Generated_Source\PSoC4/CyLib.c **** *
2962:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2963:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2964:.\Generated_Source\PSoC4/CyLib.c **** {
 2266              		.loc 1 2964 0
 2267              		.cfi_startproc
 2268 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 93


 2269              		.cfi_def_cfa_offset 8
 2270              		.cfi_offset 7, -8
 2271              		.cfi_offset 14, -4
 2272 0002 84B0     		sub	sp, sp, #16
 2273              		.cfi_def_cfa_offset 24
 2274 0004 00AF     		add	r7, sp, #0
 2275              		.cfi_def_cfa_register 7
 2276 0006 7860     		str	r0, [r7, #4]
 2277 0008 3960     		str	r1, [r7]
2965:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2966:.\Generated_Source\PSoC4/CyLib.c **** 
2967:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2278              		.loc 1 2967 0
 2279 000a 074B     		ldr	r3, .L151
 2280 000c 7A68     		ldr	r2, [r7, #4]
 2281 000e 9200     		lsl	r2, r2, #2
 2282 0010 D358     		ldr	r3, [r2, r3]
 2283 0012 FB60     		str	r3, [r7, #12]
2968:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2284              		.loc 1 2968 0
 2285 0014 044B     		ldr	r3, .L151
 2286 0016 7A68     		ldr	r2, [r7, #4]
 2287 0018 9200     		lsl	r2, r2, #2
 2288 001a 3968     		ldr	r1, [r7]
 2289 001c D150     		str	r1, [r2, r3]
2969:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2290              		.loc 1 2969 0
 2291 001e FB68     		ldr	r3, [r7, #12]
2970:.\Generated_Source\PSoC4/CyLib.c **** }
 2292              		.loc 1 2970 0
 2293 0020 181C     		mov	r0, r3
 2294 0022 BD46     		mov	sp, r7
 2295 0024 04B0     		add	sp, sp, #16
 2296              		@ sp needed
 2297 0026 80BD     		pop	{r7, pc}
 2298              	.L152:
 2299              		.align	2
 2300              	.L151:
 2301 0028 00000000 		.word	CySysTickCallbacks
 2302              		.cfi_endproc
 2303              	.LFE40:
 2304              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2305              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2306              		.align	2
 2307              		.global	CySysTickGetCallback
 2308              		.code	16
 2309              		.thumb_func
 2310              		.type	CySysTickGetCallback, %function
 2311              	CySysTickGetCallback:
 2312              	.LFB41:
2971:.\Generated_Source\PSoC4/CyLib.c **** 
2972:.\Generated_Source\PSoC4/CyLib.c **** 
2973:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2974:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2975:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2976:.\Generated_Source\PSoC4/CyLib.c **** *
2977:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 94


2978:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2979:.\Generated_Source\PSoC4/CyLib.c **** *
2980:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2981:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
2982:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:.\Generated_Source\PSoC4/CyLib.c **** *
2984:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2985:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2986:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2987:.\Generated_Source\PSoC4/CyLib.c **** *
2988:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2989:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2990:.\Generated_Source\PSoC4/CyLib.c **** {
 2313              		.loc 1 2990 0
 2314              		.cfi_startproc
 2315 0000 80B5     		push	{r7, lr}
 2316              		.cfi_def_cfa_offset 8
 2317              		.cfi_offset 7, -8
 2318              		.cfi_offset 14, -4
 2319 0002 82B0     		sub	sp, sp, #8
 2320              		.cfi_def_cfa_offset 16
 2321 0004 00AF     		add	r7, sp, #0
 2322              		.cfi_def_cfa_register 7
 2323 0006 7860     		str	r0, [r7, #4]
2991:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2324              		.loc 1 2991 0
 2325 0008 034B     		ldr	r3, .L155
 2326 000a 7A68     		ldr	r2, [r7, #4]
 2327 000c 9200     		lsl	r2, r2, #2
 2328 000e D358     		ldr	r3, [r2, r3]
2992:.\Generated_Source\PSoC4/CyLib.c **** }
 2329              		.loc 1 2992 0
 2330 0010 181C     		mov	r0, r3
 2331 0012 BD46     		mov	sp, r7
 2332 0014 02B0     		add	sp, sp, #8
 2333              		@ sp needed
 2334 0016 80BD     		pop	{r7, pc}
 2335              	.L156:
 2336              		.align	2
 2337              	.L155:
 2338 0018 00000000 		.word	CySysTickCallbacks
 2339              		.cfi_endproc
 2340              	.LFE41:
 2341              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2342              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2343              		.align	2
 2344              		.code	16
 2345              		.thumb_func
 2346              		.type	CySysTickServiceCallbacks, %function
 2347              	CySysTickServiceCallbacks:
 2348              	.LFB42:
2993:.\Generated_Source\PSoC4/CyLib.c **** 
2994:.\Generated_Source\PSoC4/CyLib.c **** 
2995:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2996:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2997:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2998:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 95


2999:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3000:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3001:.\Generated_Source\PSoC4/CyLib.c **** *
3002:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3003:.\Generated_Source\PSoC4/CyLib.c **** *  None
3004:.\Generated_Source\PSoC4/CyLib.c **** *
3005:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3006:.\Generated_Source\PSoC4/CyLib.c **** *  None
3007:.\Generated_Source\PSoC4/CyLib.c **** *
3008:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3010:.\Generated_Source\PSoC4/CyLib.c **** {
 2349              		.loc 1 3010 0
 2350              		.cfi_startproc
 2351 0000 80B5     		push	{r7, lr}
 2352              		.cfi_def_cfa_offset 8
 2353              		.cfi_offset 7, -8
 2354              		.cfi_offset 14, -4
 2355 0002 82B0     		sub	sp, sp, #8
 2356              		.cfi_def_cfa_offset 16
 2357 0004 00AF     		add	r7, sp, #0
 2358              		.cfi_def_cfa_register 7
3011:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3012:.\Generated_Source\PSoC4/CyLib.c **** 
3013:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3014:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2359              		.loc 1 3014 0
 2360 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2361 000a 031E     		sub	r3, r0, #0
 2362 000c 012B     		cmp	r3, #1
 2363 000e 13D1     		bne	.L157
3015:.\Generated_Source\PSoC4/CyLib.c ****     {
3016:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2364              		.loc 1 3016 0
 2365 0010 0023     		mov	r3, #0
 2366 0012 7B60     		str	r3, [r7, #4]
 2367 0014 0DE0     		b	.L159
 2368              	.L161:
3017:.\Generated_Source\PSoC4/CyLib.c ****         {
3018:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2369              		.loc 1 3018 0
 2370 0016 0A4B     		ldr	r3, .L162
 2371 0018 7A68     		ldr	r2, [r7, #4]
 2372 001a 9200     		lsl	r2, r2, #2
 2373 001c D358     		ldr	r3, [r2, r3]
 2374 001e 002B     		cmp	r3, #0
 2375 0020 04D0     		beq	.L160
3019:.\Generated_Source\PSoC4/CyLib.c ****             {
3020:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2376              		.loc 1 3020 0
 2377 0022 074B     		ldr	r3, .L162
 2378 0024 7A68     		ldr	r2, [r7, #4]
 2379 0026 9200     		lsl	r2, r2, #2
 2380 0028 D358     		ldr	r3, [r2, r3]
 2381 002a 9847     		blx	r3
 2382              	.L160:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 96


 2383              		.loc 1 3016 0 discriminator 2
 2384 002c 7B68     		ldr	r3, [r7, #4]
 2385 002e 0133     		add	r3, r3, #1
 2386 0030 7B60     		str	r3, [r7, #4]
 2387              	.L159:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 2388              		.loc 1 3016 0 is_stmt 0 discriminator 1
 2389 0032 7B68     		ldr	r3, [r7, #4]
 2390 0034 042B     		cmp	r3, #4
 2391 0036 EED9     		bls	.L161
 2392              	.L157:
3021:.\Generated_Source\PSoC4/CyLib.c ****             }
3022:.\Generated_Source\PSoC4/CyLib.c ****         }
3023:.\Generated_Source\PSoC4/CyLib.c ****     }
3024:.\Generated_Source\PSoC4/CyLib.c **** }
 2393              		.loc 1 3024 0 is_stmt 1
 2394 0038 BD46     		mov	sp, r7
 2395 003a 02B0     		add	sp, sp, #8
 2396              		@ sp needed
 2397 003c 80BD     		pop	{r7, pc}
 2398              	.L163:
 2399 003e C046     		.align	2
 2400              	.L162:
 2401 0040 00000000 		.word	CySysTickCallbacks
 2402              		.cfi_endproc
 2403              	.LFE42:
 2404              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2405              		.section	.text.CyGetUniqueId,"ax",%progbits
 2406              		.align	2
 2407              		.global	CyGetUniqueId
 2408              		.code	16
 2409              		.thumb_func
 2410              		.type	CyGetUniqueId, %function
 2411              	CyGetUniqueId:
 2412              	.LFB43:
3025:.\Generated_Source\PSoC4/CyLib.c **** 
3026:.\Generated_Source\PSoC4/CyLib.c **** 
3027:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3028:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3029:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
3030:.\Generated_Source\PSoC4/CyLib.c **** *
3031:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3032:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3033:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3034:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3035:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3036:.\Generated_Source\PSoC4/CyLib.c **** *
3037:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3038:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3039:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3040:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3041:.\Generated_Source\PSoC4/CyLib.c **** *
3042:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3043:.\Generated_Source\PSoC4/CyLib.c **** *  None
3044:.\Generated_Source\PSoC4/CyLib.c **** *
3045:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3046:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 97


3047:.\Generated_Source\PSoC4/CyLib.c **** {
 2413              		.loc 1 3047 0
 2414              		.cfi_startproc
 2415 0000 80B5     		push	{r7, lr}
 2416              		.cfi_def_cfa_offset 8
 2417              		.cfi_offset 7, -8
 2418              		.cfi_offset 14, -4
 2419 0002 82B0     		sub	sp, sp, #8
 2420              		.cfi_def_cfa_offset 16
 2421 0004 00AF     		add	r7, sp, #0
 2422              		.cfi_def_cfa_register 7
 2423 0006 7860     		str	r0, [r7, #4]
3048:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3049:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2424              		.loc 1 3049 0
 2425 0008 254B     		ldr	r3, .L165
 2426 000a 1B78     		ldrb	r3, [r3]
 2427 000c DBB2     		uxtb	r3, r3
 2428 000e 1A1C     		mov	r2, r3
 2429 0010 7B68     		ldr	r3, [r7, #4]
 2430 0012 1A60     		str	r2, [r3]
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2431              		.loc 1 3050 0
 2432 0014 234B     		ldr	r3, .L165+4
 2433 0016 1B78     		ldrb	r3, [r3]
 2434 0018 DBB2     		uxtb	r3, r3
 2435 001a 1A02     		lsl	r2, r3, #8
 2436 001c 7B68     		ldr	r3, [r7, #4]
 2437 001e 1B68     		ldr	r3, [r3]
 2438 0020 1A43     		orr	r2, r3
 2439 0022 7B68     		ldr	r3, [r7, #4]
 2440 0024 1A60     		str	r2, [r3]
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2441              		.loc 1 3051 0
 2442 0026 204B     		ldr	r3, .L165+8
 2443 0028 1B78     		ldrb	r3, [r3]
 2444 002a DBB2     		uxtb	r3, r3
 2445 002c 1A04     		lsl	r2, r3, #16
 2446 002e 7B68     		ldr	r3, [r7, #4]
 2447 0030 1B68     		ldr	r3, [r3]
 2448 0032 1A43     		orr	r2, r3
 2449 0034 7B68     		ldr	r3, [r7, #4]
 2450 0036 1A60     		str	r2, [r3]
3052:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2451              		.loc 1 3052 0
 2452 0038 1C4B     		ldr	r3, .L165+12
 2453 003a 1B78     		ldrb	r3, [r3]
 2454 003c DBB2     		uxtb	r3, r3
 2455 003e 1A06     		lsl	r2, r3, #24
 2456 0040 7B68     		ldr	r3, [r7, #4]
 2457 0042 1B68     		ldr	r3, [r3]
 2458 0044 1A43     		orr	r2, r3
 2459 0046 7B68     		ldr	r3, [r7, #4]
 2460 0048 1A60     		str	r2, [r3]
3053:.\Generated_Source\PSoC4/CyLib.c **** 
3054:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2461              		.loc 1 3054 0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 98


 2462 004a 7B68     		ldr	r3, [r7, #4]
 2463 004c 0433     		add	r3, r3, #4
 2464 004e 184A     		ldr	r2, .L165+16
 2465 0050 1278     		ldrb	r2, [r2]
 2466 0052 D2B2     		uxtb	r2, r2
 2467 0054 1A60     		str	r2, [r3]
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2468              		.loc 1 3055 0
 2469 0056 174B     		ldr	r3, .L165+20
 2470 0058 1B78     		ldrb	r3, [r3]
 2471 005a DBB2     		uxtb	r3, r3
 2472 005c 1902     		lsl	r1, r3, #8
 2473 005e 7B68     		ldr	r3, [r7, #4]
 2474 0060 0433     		add	r3, r3, #4
 2475 0062 7A68     		ldr	r2, [r7, #4]
 2476 0064 0432     		add	r2, r2, #4
 2477 0066 1268     		ldr	r2, [r2]
 2478 0068 0A43     		orr	r2, r1
 2479 006a 1A60     		str	r2, [r3]
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2480              		.loc 1 3056 0
 2481 006c 124B     		ldr	r3, .L165+24
 2482 006e 1B78     		ldrb	r3, [r3]
 2483 0070 DBB2     		uxtb	r3, r3
 2484 0072 1904     		lsl	r1, r3, #16
 2485 0074 7B68     		ldr	r3, [r7, #4]
 2486 0076 0433     		add	r3, r3, #4
 2487 0078 7A68     		ldr	r2, [r7, #4]
 2488 007a 0432     		add	r2, r2, #4
 2489 007c 1268     		ldr	r2, [r2]
 2490 007e 0A43     		orr	r2, r1
 2491 0080 1A60     		str	r2, [r3]
3057:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2492              		.loc 1 3057 0
 2493 0082 0E4B     		ldr	r3, .L165+28
 2494 0084 1B78     		ldrb	r3, [r3]
 2495 0086 DBB2     		uxtb	r3, r3
 2496 0088 1906     		lsl	r1, r3, #24
 2497 008a 7B68     		ldr	r3, [r7, #4]
 2498 008c 0433     		add	r3, r3, #4
 2499 008e 7A68     		ldr	r2, [r7, #4]
 2500 0090 0432     		add	r2, r2, #4
 2501 0092 1268     		ldr	r2, [r2]
 2502 0094 0A43     		orr	r2, r1
 2503 0096 1A60     		str	r2, [r3]
3058:.\Generated_Source\PSoC4/CyLib.c **** #else
3059:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3060:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3061:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3062:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3063:.\Generated_Source\PSoC4/CyLib.c **** 
3064:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3065:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3066:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3067:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3068:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3069:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 99


 2504              		.loc 1 3069 0
 2505 0098 BD46     		mov	sp, r7
 2506 009a 02B0     		add	sp, sp, #8
 2507              		@ sp needed
 2508 009c 80BD     		pop	{r7, pc}
 2509              	.L166:
 2510 009e C046     		.align	2
 2511              	.L165:
 2512 00a0 78F1FF0F 		.word	268431736
 2513 00a4 79F1FF0F 		.word	268431737
 2514 00a8 7AF1FF0F 		.word	268431738
 2515 00ac 7BF1FF0F 		.word	268431739
 2516 00b0 7CF1FF0F 		.word	268431740
 2517 00b4 7DF1FF0F 		.word	268431741
 2518 00b8 7EF1FF0F 		.word	268431742
 2519 00bc 7FF1FF0F 		.word	268431743
 2520              		.cfi_endproc
 2521              	.LFE43:
 2522              		.size	CyGetUniqueId, .-CyGetUniqueId
 2523              		.text
 2524              	.Letext0:
 2525              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2526              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2527              		.section	.debug_info,"",%progbits
 2528              	.Ldebug_info0:
 2529 0000 A8080000 		.4byte	0x8a8
 2530 0004 0400     		.2byte	0x4
 2531 0006 00000000 		.4byte	.Ldebug_abbrev0
 2532 000a 04       		.byte	0x4
 2533 000b 01       		.uleb128 0x1
 2534 000c 2A050000 		.4byte	.LASF98
 2535 0010 01       		.byte	0x1
 2536 0011 B8020000 		.4byte	.LASF99
 2537 0015 DA050000 		.4byte	.LASF100
 2538 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2539 001d 00000000 		.4byte	0
 2540 0021 00000000 		.4byte	.Ldebug_line0
 2541 0025 02       		.uleb128 0x2
 2542 0026 01       		.byte	0x1
 2543 0027 06       		.byte	0x6
 2544 0028 EB000000 		.4byte	.LASF0
 2545 002c 02       		.uleb128 0x2
 2546 002d 01       		.byte	0x1
 2547 002e 08       		.byte	0x8
 2548 002f 07040000 		.4byte	.LASF1
 2549 0033 02       		.uleb128 0x2
 2550 0034 02       		.byte	0x2
 2551 0035 05       		.byte	0x5
 2552 0036 15040000 		.4byte	.LASF2
 2553 003a 02       		.uleb128 0x2
 2554 003b 02       		.byte	0x2
 2555 003c 07       		.byte	0x7
 2556 003d 96020000 		.4byte	.LASF3
 2557 0041 02       		.uleb128 0x2
 2558 0042 04       		.byte	0x4
 2559 0043 05       		.byte	0x5
 2560 0044 2A010000 		.4byte	.LASF4
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 100


 2561 0048 02       		.uleb128 0x2
 2562 0049 04       		.byte	0x4
 2563 004a 07       		.byte	0x7
 2564 004b 35020000 		.4byte	.LASF5
 2565 004f 02       		.uleb128 0x2
 2566 0050 08       		.byte	0x8
 2567 0051 05       		.byte	0x5
 2568 0052 DD000000 		.4byte	.LASF6
 2569 0056 02       		.uleb128 0x2
 2570 0057 08       		.byte	0x8
 2571 0058 07       		.byte	0x7
 2572 0059 71000000 		.4byte	.LASF7
 2573 005d 03       		.uleb128 0x3
 2574 005e 04       		.byte	0x4
 2575 005f 05       		.byte	0x5
 2576 0060 696E7400 		.ascii	"int\000"
 2577 0064 02       		.uleb128 0x2
 2578 0065 04       		.byte	0x4
 2579 0066 07       		.byte	0x7
 2580 0067 19020000 		.4byte	.LASF8
 2581 006b 04       		.uleb128 0x4
 2582 006c 55010000 		.4byte	.LASF9
 2583 0070 02       		.byte	0x2
 2584 0071 3801     		.2byte	0x138
 2585 0073 2C000000 		.4byte	0x2c
 2586 0077 04       		.uleb128 0x4
 2587 0078 17000000 		.4byte	.LASF10
 2588 007c 02       		.byte	0x2
 2589 007d 3901     		.2byte	0x139
 2590 007f 3A000000 		.4byte	0x3a
 2591 0083 04       		.uleb128 0x4
 2592 0084 98010000 		.4byte	.LASF11
 2593 0088 02       		.byte	0x2
 2594 0089 3A01     		.2byte	0x13a
 2595 008b 48000000 		.4byte	0x48
 2596 008f 02       		.uleb128 0x2
 2597 0090 04       		.byte	0x4
 2598 0091 04       		.byte	0x4
 2599 0092 AE030000 		.4byte	.LASF12
 2600 0096 02       		.uleb128 0x2
 2601 0097 08       		.byte	0x8
 2602 0098 04       		.byte	0x4
 2603 0099 74010000 		.4byte	.LASF13
 2604 009d 02       		.uleb128 0x2
 2605 009e 01       		.byte	0x1
 2606 009f 08       		.byte	0x8
 2607 00a0 4E040000 		.4byte	.LASF14
 2608 00a4 04       		.uleb128 0x4
 2609 00a5 F1030000 		.4byte	.LASF15
 2610 00a9 02       		.byte	0x2
 2611 00aa E201     		.2byte	0x1e2
 2612 00ac B0000000 		.4byte	0xb0
 2613 00b0 05       		.uleb128 0x5
 2614 00b1 6B000000 		.4byte	0x6b
 2615 00b5 04       		.uleb128 0x4
 2616 00b6 09030000 		.4byte	.LASF16
 2617 00ba 02       		.byte	0x2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 101


 2618 00bb E401     		.2byte	0x1e4
 2619 00bd C1000000 		.4byte	0xc1
 2620 00c1 05       		.uleb128 0x5
 2621 00c2 83000000 		.4byte	0x83
 2622 00c6 04       		.uleb128 0x4
 2623 00c7 53040000 		.4byte	.LASF17
 2624 00cb 02       		.byte	0x2
 2625 00cc F401     		.2byte	0x1f4
 2626 00ce D2000000 		.4byte	0xd2
 2627 00d2 06       		.uleb128 0x6
 2628 00d3 04       		.byte	0x4
 2629 00d4 D8000000 		.4byte	0xd8
 2630 00d8 07       		.uleb128 0x7
 2631 00d9 02       		.uleb128 0x2
 2632 00da 04       		.byte	0x4
 2633 00db 07       		.byte	0x7
 2634 00dc 2B030000 		.4byte	.LASF18
 2635 00e0 08       		.uleb128 0x8
 2636 00e1 C3030000 		.4byte	.LASF19
 2637 00e5 03       		.byte	0x3
 2638 00e6 6A       		.byte	0x6a
 2639 00e7 D2000000 		.4byte	0xd2
 2640 00eb 09       		.uleb128 0x9
 2641 00ec B8050000 		.4byte	.LASF20
 2642 00f0 01       		.byte	0x1
 2643 00f1 6F       		.byte	0x6f
 2644 00f2 00000000 		.4byte	.LFB0
 2645 00f6 1C000000 		.4byte	.LFE0-.LFB0
 2646 00fa 01       		.uleb128 0x1
 2647 00fb 9C       		.byte	0x9c
 2648 00fc 09       		.uleb128 0x9
 2649 00fd 62020000 		.4byte	.LASF21
 2650 0101 01       		.byte	0x1
 2651 0102 95       		.byte	0x95
 2652 0103 00000000 		.4byte	.LFB1
 2653 0107 18000000 		.4byte	.LFE1-.LFB1
 2654 010b 01       		.uleb128 0x1
 2655 010c 9C       		.byte	0x9c
 2656 010d 0A       		.uleb128 0xa
 2657 010e 27000000 		.4byte	.LASF25
 2658 0112 01       		.byte	0x1
 2659 0113 C401     		.2byte	0x1c4
 2660 0115 00000000 		.4byte	.LFB2
 2661 0119 48000000 		.4byte	.LFE2-.LFB2
 2662 011d 01       		.uleb128 0x1
 2663 011e 9C       		.byte	0x9c
 2664 011f 51010000 		.4byte	0x151
 2665 0123 0B       		.uleb128 0xb
 2666 0124 3D040000 		.4byte	.LASF27
 2667 0128 01       		.byte	0x1
 2668 0129 C401     		.2byte	0x1c4
 2669 012b 83000000 		.4byte	0x83
 2670 012f 02       		.uleb128 0x2
 2671 0130 91       		.byte	0x91
 2672 0131 64       		.sleb128 -28
 2673 0132 0C       		.uleb128 0xc
 2674 0133 08010000 		.4byte	.LASF22
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 102


 2675 0137 01       		.byte	0x1
 2676 0138 C601     		.2byte	0x1c6
 2677 013a 6B000000 		.4byte	0x6b
 2678 013e 02       		.uleb128 0x2
 2679 013f 91       		.byte	0x91
 2680 0140 6F       		.sleb128 -17
 2681 0141 0C       		.uleb128 0xc
 2682 0142 0D060000 		.4byte	.LASF23
 2683 0146 01       		.byte	0x1
 2684 0147 C701     		.2byte	0x1c7
 2685 0149 83000000 		.4byte	0x83
 2686 014d 02       		.uleb128 0x2
 2687 014e 91       		.byte	0x91
 2688 014f 68       		.sleb128 -24
 2689 0150 00       		.byte	0
 2690 0151 0D       		.uleb128 0xd
 2691 0152 AB010000 		.4byte	.LASF40
 2692 0156 01       		.byte	0x1
 2693 0157 EE01     		.2byte	0x1ee
 2694 0159 83000000 		.4byte	0x83
 2695 015d 00000000 		.4byte	.LFB3
 2696 0161 34000000 		.4byte	.LFE3-.LFB3
 2697 0165 01       		.uleb128 0x1
 2698 0166 9C       		.byte	0x9c
 2699 0167 8A010000 		.4byte	0x18a
 2700 016b 0C       		.uleb128 0xc
 2701 016c 08010000 		.4byte	.LASF22
 2702 0170 01       		.byte	0x1
 2703 0171 F001     		.2byte	0x1f0
 2704 0173 6B000000 		.4byte	0x6b
 2705 0177 02       		.uleb128 0x2
 2706 0178 91       		.byte	0x91
 2707 0179 6F       		.sleb128 -17
 2708 017a 0C       		.uleb128 0xc
 2709 017b 56030000 		.4byte	.LASF24
 2710 017f 01       		.byte	0x1
 2711 0180 F101     		.2byte	0x1f1
 2712 0182 83000000 		.4byte	0x83
 2713 0186 02       		.uleb128 0x2
 2714 0187 91       		.byte	0x91
 2715 0188 68       		.sleb128 -24
 2716 0189 00       		.byte	0
 2717 018a 0A       		.uleb128 0xa
 2718 018b 70040000 		.4byte	.LASF26
 2719 018f 01       		.byte	0x1
 2720 0190 2A02     		.2byte	0x22a
 2721 0192 00000000 		.4byte	.LFB4
 2722 0196 44000000 		.4byte	.LFE4-.LFB4
 2723 019a 01       		.uleb128 0x1
 2724 019b 9C       		.byte	0x9c
 2725 019c BF010000 		.4byte	0x1bf
 2726 01a0 0B       		.uleb128 0xb
 2727 01a1 22050000 		.4byte	.LASF28
 2728 01a5 01       		.byte	0x1
 2729 01a6 2A02     		.2byte	0x22a
 2730 01a8 83000000 		.4byte	0x83
 2731 01ac 02       		.uleb128 0x2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 103


 2732 01ad 91       		.byte	0x91
 2733 01ae 64       		.sleb128 -28
 2734 01af 0C       		.uleb128 0xc
 2735 01b0 08010000 		.4byte	.LASF22
 2736 01b4 01       		.byte	0x1
 2737 01b5 2C02     		.2byte	0x22c
 2738 01b7 6B000000 		.4byte	0x6b
 2739 01bb 02       		.uleb128 0x2
 2740 01bc 91       		.byte	0x91
 2741 01bd 6F       		.sleb128 -17
 2742 01be 00       		.byte	0
 2743 01bf 0A       		.uleb128 0xa
 2744 01c0 E2020000 		.4byte	.LASF29
 2745 01c4 01       		.byte	0x1
 2746 01c5 6E02     		.2byte	0x26e
 2747 01c7 00000000 		.4byte	.LFB5
 2748 01cb EC010000 		.4byte	.LFE5-.LFB5
 2749 01cf 01       		.uleb128 0x1
 2750 01d0 9C       		.byte	0x9c
 2751 01d1 3F020000 		.4byte	0x23f
 2752 01d5 0B       		.uleb128 0xb
 2753 01d6 F7000000 		.4byte	.LASF30
 2754 01da 01       		.byte	0x1
 2755 01db 6E02     		.2byte	0x26e
 2756 01dd 83000000 		.4byte	0x83
 2757 01e1 02       		.uleb128 0x2
 2758 01e2 91       		.byte	0x91
 2759 01e3 64       		.sleb128 -28
 2760 01e4 0C       		.uleb128 0xc
 2761 01e5 0F000000 		.4byte	.LASF31
 2762 01e9 01       		.byte	0x1
 2763 01ea 7402     		.2byte	0x274
 2764 01ec 6B000000 		.4byte	0x6b
 2765 01f0 02       		.uleb128 0x2
 2766 01f1 91       		.byte	0x91
 2767 01f2 6F       		.sleb128 -17
 2768 01f3 0C       		.uleb128 0xc
 2769 01f4 4E030000 		.4byte	.LASF32
 2770 01f8 01       		.byte	0x1
 2771 01f9 7502     		.2byte	0x275
 2772 01fb 6B000000 		.4byte	0x6b
 2773 01ff 02       		.uleb128 0x2
 2774 0200 91       		.byte	0x91
 2775 0201 6E       		.sleb128 -18
 2776 0202 0C       		.uleb128 0xc
 2777 0203 C9050000 		.4byte	.LASF33
 2778 0207 01       		.byte	0x1
 2779 0208 7602     		.2byte	0x276
 2780 020a 6B000000 		.4byte	0x6b
 2781 020e 02       		.uleb128 0x2
 2782 020f 91       		.byte	0x91
 2783 0210 6B       		.sleb128 -21
 2784 0211 0C       		.uleb128 0xc
 2785 0212 5C000000 		.4byte	.LASF34
 2786 0216 01       		.byte	0x1
 2787 0217 7702     		.2byte	0x277
 2788 0219 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 104


 2789 021d 02       		.uleb128 0x2
 2790 021e 91       		.byte	0x91
 2791 021f 6D       		.sleb128 -19
 2792 0220 0C       		.uleb128 0xc
 2793 0221 AF040000 		.4byte	.LASF35
 2794 0225 01       		.byte	0x1
 2795 0226 7802     		.2byte	0x278
 2796 0228 6B000000 		.4byte	0x6b
 2797 022c 02       		.uleb128 0x2
 2798 022d 91       		.byte	0x91
 2799 022e 6A       		.sleb128 -22
 2800 022f 0C       		.uleb128 0xc
 2801 0230 08010000 		.4byte	.LASF22
 2802 0234 01       		.byte	0x1
 2803 0235 8302     		.2byte	0x283
 2804 0237 6B000000 		.4byte	0x6b
 2805 023b 02       		.uleb128 0x2
 2806 023c 91       		.byte	0x91
 2807 023d 6C       		.sleb128 -20
 2808 023e 00       		.byte	0
 2809 023f 0A       		.uleb128 0xa
 2810 0240 B4030000 		.4byte	.LASF36
 2811 0244 01       		.byte	0x1
 2812 0245 EA07     		.2byte	0x7ea
 2813 0247 00000000 		.4byte	.LFB6
 2814 024b 60000000 		.4byte	.LFE6-.LFB6
 2815 024f 01       		.uleb128 0x1
 2816 0250 9C       		.byte	0x9c
 2817 0251 65020000 		.4byte	0x265
 2818 0255 0B       		.uleb128 0xb
 2819 0256 F6030000 		.4byte	.LASF37
 2820 025a 01       		.byte	0x1
 2821 025b EA07     		.2byte	0x7ea
 2822 025d 83000000 		.4byte	0x83
 2823 0261 02       		.uleb128 0x2
 2824 0262 91       		.byte	0x91
 2825 0263 74       		.sleb128 -12
 2826 0264 00       		.byte	0
 2827 0265 0E       		.uleb128 0xe
 2828 0266 E8040000 		.4byte	.LASF38
 2829 026a 01       		.byte	0x1
 2830 026b 0F08     		.2byte	0x80f
 2831 026d 00000000 		.4byte	.LFB7
 2832 0271 28000000 		.4byte	.LFE7-.LFB7
 2833 0275 01       		.uleb128 0x1
 2834 0276 9C       		.byte	0x9c
 2835 0277 0F       		.uleb128 0xf
 2836 0278 47020000 		.4byte	.LASF80
 2837 027c 01       		.byte	0x1
 2838 027d 2508     		.2byte	0x825
 2839 027f 83000000 		.4byte	0x83
 2840 0283 00000000 		.4byte	.LFB8
 2841 0287 18000000 		.4byte	.LFE8-.LFB8
 2842 028b 01       		.uleb128 0x1
 2843 028c 9C       		.byte	0x9c
 2844 028d 0E       		.uleb128 0xe
 2845 028e 81010000 		.4byte	.LASF39
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 105


 2846 0292 01       		.byte	0x1
 2847 0293 3908     		.2byte	0x839
 2848 0295 00000000 		.4byte	.LFB9
 2849 0299 14000000 		.4byte	.LFE9-.LFB9
 2850 029d 01       		.uleb128 0x1
 2851 029e 9C       		.byte	0x9c
 2852 029f 10       		.uleb128 0x10
 2853 02a0 82020000 		.4byte	.LASF41
 2854 02a4 01       		.byte	0x1
 2855 02a5 5508     		.2byte	0x855
 2856 02a7 83000000 		.4byte	0x83
 2857 02ab 00000000 		.4byte	.LFB10
 2858 02af 30000000 		.4byte	.LFE10-.LFB10
 2859 02b3 01       		.uleb128 0x1
 2860 02b4 9C       		.byte	0x9c
 2861 02b5 D8020000 		.4byte	0x2d8
 2862 02b9 0B       		.uleb128 0xb
 2863 02ba 47040000 		.4byte	.LASF42
 2864 02be 01       		.byte	0x1
 2865 02bf 5508     		.2byte	0x855
 2866 02c1 83000000 		.4byte	0x83
 2867 02c5 02       		.uleb128 0x2
 2868 02c6 91       		.byte	0x91
 2869 02c7 6C       		.sleb128 -20
 2870 02c8 0C       		.uleb128 0xc
 2871 02c9 1E030000 		.4byte	.LASF43
 2872 02cd 01       		.byte	0x1
 2873 02ce 5708     		.2byte	0x857
 2874 02d0 83000000 		.4byte	0x83
 2875 02d4 02       		.uleb128 0x2
 2876 02d5 91       		.byte	0x91
 2877 02d6 74       		.sleb128 -12
 2878 02d7 00       		.byte	0
 2879 02d8 10       		.uleb128 0x10
 2880 02d9 4E000000 		.4byte	.LASF44
 2881 02dd 01       		.byte	0x1
 2882 02de 7008     		.2byte	0x870
 2883 02e0 83000000 		.4byte	0x83
 2884 02e4 00000000 		.4byte	.LFB11
 2885 02e8 24000000 		.4byte	.LFE11-.LFB11
 2886 02ec 01       		.uleb128 0x1
 2887 02ed 9C       		.byte	0x9c
 2888 02ee 02030000 		.4byte	0x302
 2889 02f2 0C       		.uleb128 0xc
 2890 02f3 1E000000 		.4byte	.LASF45
 2891 02f7 01       		.byte	0x1
 2892 02f8 7208     		.2byte	0x872
 2893 02fa 83000000 		.4byte	0x83
 2894 02fe 02       		.uleb128 0x2
 2895 02ff 91       		.byte	0x91
 2896 0300 74       		.sleb128 -12
 2897 0301 00       		.byte	0
 2898 0302 11       		.uleb128 0x11
 2899 0303 99000000 		.4byte	.LASF46
 2900 0307 01       		.byte	0x1
 2901 0308 8C08     		.2byte	0x88c
 2902 030a 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 106


 2903 030e 18000000 		.4byte	.LFE12-.LFB12
 2904 0312 01       		.uleb128 0x1
 2905 0313 9C       		.byte	0x9c
 2906 0314 28030000 		.4byte	0x328
 2907 0318 0B       		.uleb128 0xb
 2908 0319 A6010000 		.4byte	.LASF47
 2909 031d 01       		.byte	0x1
 2910 031e 8C08     		.2byte	0x88c
 2911 0320 83000000 		.4byte	0x83
 2912 0324 02       		.uleb128 0x2
 2913 0325 91       		.byte	0x91
 2914 0326 74       		.sleb128 -12
 2915 0327 00       		.byte	0
 2916 0328 0D       		.uleb128 0xd
 2917 0329 F7020000 		.4byte	.LASF48
 2918 032d 01       		.byte	0x1
 2919 032e A808     		.2byte	0x8a8
 2920 0330 C6000000 		.4byte	0xc6
 2921 0334 00000000 		.4byte	.LFB13
 2922 0338 48000000 		.4byte	.LFE13-.LFB13
 2923 033c 01       		.uleb128 0x1
 2924 033d 9C       		.byte	0x9c
 2925 033e 7F030000 		.4byte	0x37f
 2926 0342 0B       		.uleb128 0xb
 2927 0343 9F010000 		.4byte	.LASF49
 2928 0347 01       		.byte	0x1
 2929 0348 A808     		.2byte	0x8a8
 2930 034a 6B000000 		.4byte	0x6b
 2931 034e 02       		.uleb128 0x2
 2932 034f 91       		.byte	0x91
 2933 0350 6F       		.sleb128 -17
 2934 0351 0B       		.uleb128 0xb
 2935 0352 46030000 		.4byte	.LASF50
 2936 0356 01       		.byte	0x1
 2937 0357 A808     		.2byte	0x8a8
 2938 0359 C6000000 		.4byte	0xc6
 2939 035d 02       		.uleb128 0x2
 2940 035e 91       		.byte	0x91
 2941 035f 68       		.sleb128 -24
 2942 0360 0C       		.uleb128 0xc
 2943 0361 40000000 		.4byte	.LASF51
 2944 0365 01       		.byte	0x1
 2945 0366 AA08     		.2byte	0x8aa
 2946 0368 C6000000 		.4byte	0xc6
 2947 036c 02       		.uleb128 0x2
 2948 036d 91       		.byte	0x91
 2949 036e 70       		.sleb128 -16
 2950 036f 0C       		.uleb128 0xc
 2951 0370 00000000 		.4byte	.LASF52
 2952 0374 01       		.byte	0x1
 2953 0375 AB08     		.2byte	0x8ab
 2954 0377 7F030000 		.4byte	0x37f
 2955 037b 02       		.uleb128 0x2
 2956 037c 91       		.byte	0x91
 2957 037d 74       		.sleb128 -12
 2958 037e 00       		.byte	0
 2959 037f 06       		.uleb128 0x6
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 107


 2960 0380 04       		.byte	0x4
 2961 0381 C6000000 		.4byte	0xc6
 2962 0385 0D       		.uleb128 0xd
 2963 0386 2B040000 		.4byte	.LASF53
 2964 038a 01       		.byte	0x1
 2965 038b CD08     		.2byte	0x8cd
 2966 038d C6000000 		.4byte	0xc6
 2967 0391 00000000 		.4byte	.LFB14
 2968 0395 34000000 		.4byte	.LFE14-.LFB14
 2969 0399 01       		.uleb128 0x1
 2970 039a 9C       		.byte	0x9c
 2971 039b BE030000 		.4byte	0x3be
 2972 039f 0B       		.uleb128 0xb
 2973 03a0 9F010000 		.4byte	.LASF49
 2974 03a4 01       		.byte	0x1
 2975 03a5 CD08     		.2byte	0x8cd
 2976 03a7 6B000000 		.4byte	0x6b
 2977 03ab 02       		.uleb128 0x2
 2978 03ac 91       		.byte	0x91
 2979 03ad 6F       		.sleb128 -17
 2980 03ae 0C       		.uleb128 0xc
 2981 03af 00000000 		.4byte	.LASF52
 2982 03b3 01       		.byte	0x1
 2983 03b4 CF08     		.2byte	0x8cf
 2984 03b6 7F030000 		.4byte	0x37f
 2985 03ba 02       		.uleb128 0x2
 2986 03bb 91       		.byte	0x91
 2987 03bc 74       		.sleb128 -12
 2988 03bd 00       		.byte	0
 2989 03be 0D       		.uleb128 0xd
 2990 03bf A9020000 		.4byte	.LASF54
 2991 03c3 01       		.byte	0x1
 2992 03c4 E608     		.2byte	0x8e6
 2993 03c6 C6000000 		.4byte	0xc6
 2994 03ca 00000000 		.4byte	.LFB15
 2995 03ce 4C000000 		.4byte	.LFE15-.LFB15
 2996 03d2 01       		.uleb128 0x1
 2997 03d3 9C       		.byte	0x9c
 2998 03d4 15040000 		.4byte	0x415
 2999 03d8 0B       		.uleb128 0xb
 3000 03d9 9F010000 		.4byte	.LASF49
 3001 03dd 01       		.byte	0x1
 3002 03de E608     		.2byte	0x8e6
 3003 03e0 6B000000 		.4byte	0x6b
 3004 03e4 02       		.uleb128 0x2
 3005 03e5 91       		.byte	0x91
 3006 03e6 6F       		.sleb128 -17
 3007 03e7 0B       		.uleb128 0xb
 3008 03e8 46030000 		.4byte	.LASF50
 3009 03ec 01       		.byte	0x1
 3010 03ed E608     		.2byte	0x8e6
 3011 03ef C6000000 		.4byte	0xc6
 3012 03f3 02       		.uleb128 0x2
 3013 03f4 91       		.byte	0x91
 3014 03f5 68       		.sleb128 -24
 3015 03f6 0C       		.uleb128 0xc
 3016 03f7 40000000 		.4byte	.LASF51
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 108


 3017 03fb 01       		.byte	0x1
 3018 03fc E808     		.2byte	0x8e8
 3019 03fe C6000000 		.4byte	0xc6
 3020 0402 02       		.uleb128 0x2
 3021 0403 91       		.byte	0x91
 3022 0404 70       		.sleb128 -16
 3023 0405 0C       		.uleb128 0xc
 3024 0406 00000000 		.4byte	.LASF52
 3025 040a 01       		.byte	0x1
 3026 040b E908     		.2byte	0x8e9
 3027 040d 7F030000 		.4byte	0x37f
 3028 0411 02       		.uleb128 0x2
 3029 0412 91       		.byte	0x91
 3030 0413 74       		.sleb128 -12
 3031 0414 00       		.byte	0
 3032 0415 0D       		.uleb128 0xd
 3033 0416 D5030000 		.4byte	.LASF55
 3034 041a 01       		.byte	0x1
 3035 041b 0509     		.2byte	0x905
 3036 041d C6000000 		.4byte	0xc6
 3037 0421 00000000 		.4byte	.LFB16
 3038 0425 36000000 		.4byte	.LFE16-.LFB16
 3039 0429 01       		.uleb128 0x1
 3040 042a 9C       		.byte	0x9c
 3041 042b 4E040000 		.4byte	0x44e
 3042 042f 0B       		.uleb128 0xb
 3043 0430 9F010000 		.4byte	.LASF49
 3044 0434 01       		.byte	0x1
 3045 0435 0509     		.2byte	0x905
 3046 0437 6B000000 		.4byte	0x6b
 3047 043b 02       		.uleb128 0x2
 3048 043c 91       		.byte	0x91
 3049 043d 6F       		.sleb128 -17
 3050 043e 0C       		.uleb128 0xc
 3051 043f 00000000 		.4byte	.LASF52
 3052 0443 01       		.byte	0x1
 3053 0444 0709     		.2byte	0x907
 3054 0446 7F030000 		.4byte	0x37f
 3055 044a 02       		.uleb128 0x2
 3056 044b 91       		.byte	0x91
 3057 044c 74       		.sleb128 -12
 3058 044d 00       		.byte	0
 3059 044e 0A       		.uleb128 0xa
 3060 044f 9D030000 		.4byte	.LASF56
 3061 0453 01       		.byte	0x1
 3062 0454 1D09     		.2byte	0x91d
 3063 0456 00000000 		.4byte	.LFB17
 3064 045a A8000000 		.4byte	.LFE17-.LFB17
 3065 045e 01       		.uleb128 0x1
 3066 045f 9C       		.byte	0x9c
 3067 0460 B0040000 		.4byte	0x4b0
 3068 0464 0B       		.uleb128 0xb
 3069 0465 9F010000 		.4byte	.LASF49
 3070 0469 01       		.byte	0x1
 3071 046a 1D09     		.2byte	0x91d
 3072 046c 6B000000 		.4byte	0x6b
 3073 0470 02       		.uleb128 0x2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 109


 3074 0471 91       		.byte	0x91
 3075 0472 5F       		.sleb128 -33
 3076 0473 0B       		.uleb128 0xb
 3077 0474 D9020000 		.4byte	.LASF57
 3078 0478 01       		.byte	0x1
 3079 0479 1D09     		.2byte	0x91d
 3080 047b 6B000000 		.4byte	0x6b
 3081 047f 02       		.uleb128 0x2
 3082 0480 91       		.byte	0x91
 3083 0481 5E       		.sleb128 -34
 3084 0482 0C       		.uleb128 0xc
 3085 0483 08010000 		.4byte	.LASF22
 3086 0487 01       		.byte	0x1
 3087 0488 1F09     		.2byte	0x91f
 3088 048a 6B000000 		.4byte	0x6b
 3089 048e 02       		.uleb128 0x2
 3090 048f 91       		.byte	0x91
 3091 0490 6B       		.sleb128 -21
 3092 0491 0C       		.uleb128 0xc
 3093 0492 7B010000 		.4byte	.LASF58
 3094 0496 01       		.byte	0x1
 3095 0497 2009     		.2byte	0x920
 3096 0499 83000000 		.4byte	0x83
 3097 049d 02       		.uleb128 0x2
 3098 049e 91       		.byte	0x91
 3099 049f 6C       		.sleb128 -20
 3100 04a0 0C       		.uleb128 0xc
 3101 04a1 EF010000 		.4byte	.LASF59
 3102 04a5 01       		.byte	0x1
 3103 04a6 2109     		.2byte	0x921
 3104 04a8 83000000 		.4byte	0x83
 3105 04ac 02       		.uleb128 0x2
 3106 04ad 91       		.byte	0x91
 3107 04ae 64       		.sleb128 -28
 3108 04af 00       		.byte	0
 3109 04b0 0D       		.uleb128 0xd
 3110 04b1 C3010000 		.4byte	.LASF60
 3111 04b5 01       		.byte	0x1
 3112 04b6 4109     		.2byte	0x941
 3113 04b8 6B000000 		.4byte	0x6b
 3114 04bc 00000000 		.4byte	.LFB18
 3115 04c0 5C000000 		.4byte	.LFE18-.LFB18
 3116 04c4 01       		.uleb128 0x1
 3117 04c5 9C       		.byte	0x9c
 3118 04c6 E9040000 		.4byte	0x4e9
 3119 04ca 0B       		.uleb128 0xb
 3120 04cb 9F010000 		.4byte	.LASF49
 3121 04cf 01       		.byte	0x1
 3122 04d0 4109     		.2byte	0x941
 3123 04d2 6B000000 		.4byte	0x6b
 3124 04d6 02       		.uleb128 0x2
 3125 04d7 91       		.byte	0x91
 3126 04d8 6F       		.sleb128 -17
 3127 04d9 0C       		.uleb128 0xc
 3128 04da D9020000 		.4byte	.LASF57
 3129 04de 01       		.byte	0x1
 3130 04df 4309     		.2byte	0x943
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 110


 3131 04e1 6B000000 		.4byte	0x6b
 3132 04e5 02       		.uleb128 0x2
 3133 04e6 91       		.byte	0x91
 3134 04e7 77       		.sleb128 -9
 3135 04e8 00       		.byte	0
 3136 04e9 11       		.uleb128 0x11
 3137 04ea 1F040000 		.4byte	.LASF61
 3138 04ee 01       		.byte	0x1
 3139 04ef 5B09     		.2byte	0x95b
 3140 04f1 00000000 		.4byte	.LFB19
 3141 04f5 28000000 		.4byte	.LFE19-.LFB19
 3142 04f9 01       		.uleb128 0x1
 3143 04fa 9C       		.byte	0x9c
 3144 04fb 0F050000 		.4byte	0x50f
 3145 04ff 0B       		.uleb128 0xb
 3146 0500 9F010000 		.4byte	.LASF49
 3147 0504 01       		.byte	0x1
 3148 0505 5B09     		.2byte	0x95b
 3149 0507 6B000000 		.4byte	0x6b
 3150 050b 02       		.uleb128 0x2
 3151 050c 91       		.byte	0x91
 3152 050d 77       		.sleb128 -9
 3153 050e 00       		.byte	0
 3154 050f 10       		.uleb128 0x10
 3155 0510 CF000000 		.4byte	.LASF62
 3156 0514 01       		.byte	0x1
 3157 0515 6F09     		.2byte	0x96f
 3158 0517 6B000000 		.4byte	0x6b
 3159 051b 00000000 		.4byte	.LFB20
 3160 051f 30000000 		.4byte	.LFE20-.LFB20
 3161 0523 01       		.uleb128 0x1
 3162 0524 9C       		.byte	0x9c
 3163 0525 39050000 		.4byte	0x539
 3164 0529 0B       		.uleb128 0xb
 3165 052a 9F010000 		.4byte	.LASF49
 3166 052e 01       		.byte	0x1
 3167 052f 6F09     		.2byte	0x96f
 3168 0531 6B000000 		.4byte	0x6b
 3169 0535 02       		.uleb128 0x2
 3170 0536 91       		.byte	0x91
 3171 0537 77       		.sleb128 -9
 3172 0538 00       		.byte	0
 3173 0539 11       		.uleb128 0x11
 3174 053a 33010000 		.4byte	.LASF63
 3175 053e 01       		.byte	0x1
 3176 053f 8409     		.2byte	0x984
 3177 0541 00000000 		.4byte	.LFB21
 3178 0545 28000000 		.4byte	.LFE21-.LFB21
 3179 0549 01       		.uleb128 0x1
 3180 054a 9C       		.byte	0x9c
 3181 054b 5F050000 		.4byte	0x55f
 3182 054f 0B       		.uleb128 0xb
 3183 0550 9F010000 		.4byte	.LASF49
 3184 0554 01       		.byte	0x1
 3185 0555 8409     		.2byte	0x984
 3186 0557 6B000000 		.4byte	0x6b
 3187 055b 02       		.uleb128 0x2
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 111


 3188 055c 91       		.byte	0x91
 3189 055d 77       		.sleb128 -9
 3190 055e 00       		.byte	0
 3191 055f 11       		.uleb128 0x11
 3192 0560 72020000 		.4byte	.LASF64
 3193 0564 01       		.byte	0x1
 3194 0565 9709     		.2byte	0x997
 3195 0567 00000000 		.4byte	.LFB22
 3196 056b 28000000 		.4byte	.LFE22-.LFB22
 3197 056f 01       		.uleb128 0x1
 3198 0570 9C       		.byte	0x9c
 3199 0571 85050000 		.4byte	0x585
 3200 0575 0B       		.uleb128 0xb
 3201 0576 9F010000 		.4byte	.LASF49
 3202 057a 01       		.byte	0x1
 3203 057b 9709     		.2byte	0x997
 3204 057d 6B000000 		.4byte	0x6b
 3205 0581 02       		.uleb128 0x2
 3206 0582 91       		.byte	0x91
 3207 0583 77       		.sleb128 -9
 3208 0584 00       		.byte	0
 3209 0585 11       		.uleb128 0x11
 3210 0586 34030000 		.4byte	.LASF65
 3211 058a 01       		.byte	0x1
 3212 058b AB09     		.2byte	0x9ab
 3213 058d 00000000 		.4byte	.LFB23
 3214 0591 28000000 		.4byte	.LFE23-.LFB23
 3215 0595 01       		.uleb128 0x1
 3216 0596 9C       		.byte	0x9c
 3217 0597 AB050000 		.4byte	0x5ab
 3218 059b 0B       		.uleb128 0xb
 3219 059c 9F010000 		.4byte	.LASF49
 3220 05a0 01       		.byte	0x1
 3221 05a1 AB09     		.2byte	0x9ab
 3222 05a3 6B000000 		.4byte	0x6b
 3223 05a7 02       		.uleb128 0x2
 3224 05a8 91       		.byte	0x91
 3225 05a9 77       		.sleb128 -9
 3226 05aa 00       		.byte	0
 3227 05ab 11       		.uleb128 0x11
 3228 05ac 00040000 		.4byte	.LASF66
 3229 05b0 01       		.byte	0x1
 3230 05b1 BF09     		.2byte	0x9bf
 3231 05b3 00000000 		.4byte	.LFB24
 3232 05b7 14000000 		.4byte	.LFE24-.LFB24
 3233 05bb 01       		.uleb128 0x1
 3234 05bc 9C       		.byte	0x9c
 3235 05bd D1050000 		.4byte	0x5d1
 3236 05c1 0B       		.uleb128 0xb
 3237 05c2 47040000 		.4byte	.LASF42
 3238 05c6 01       		.byte	0x1
 3239 05c7 BF09     		.2byte	0x9bf
 3240 05c9 6B000000 		.4byte	0x6b
 3241 05cd 02       		.uleb128 0x2
 3242 05ce 91       		.byte	0x91
 3243 05cf 77       		.sleb128 -9
 3244 05d0 00       		.byte	0
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 112


 3245 05d1 0E       		.uleb128 0xe
 3246 05d2 A6000000 		.4byte	.LASF67
 3247 05d6 01       		.byte	0x1
 3248 05d7 DE09     		.2byte	0x9de
 3249 05d9 00000000 		.4byte	.LFB25
 3250 05dd 20000000 		.4byte	.LFE25-.LFB25
 3251 05e1 01       		.uleb128 0x1
 3252 05e2 9C       		.byte	0x9c
 3253 05e3 0A       		.uleb128 0xa
 3254 05e4 C6040000 		.4byte	.LASF68
 3255 05e8 01       		.byte	0x1
 3256 05e9 F709     		.2byte	0x9f7
 3257 05eb 00000000 		.4byte	.LFB26
 3258 05ef 48000000 		.4byte	.LFE26-.LFB26
 3259 05f3 01       		.uleb128 0x1
 3260 05f4 9C       		.byte	0x9c
 3261 05f5 09060000 		.4byte	0x609
 3262 05f9 0B       		.uleb128 0xb
 3263 05fa E4030000 		.4byte	.LASF69
 3264 05fe 01       		.byte	0x1
 3265 05ff F709     		.2byte	0x9f7
 3266 0601 83000000 		.4byte	0x83
 3267 0605 02       		.uleb128 0x2
 3268 0606 91       		.byte	0x91
 3269 0607 74       		.sleb128 -12
 3270 0608 00       		.byte	0
 3271 0609 0A       		.uleb128 0xa
 3272 060a 6A010000 		.4byte	.LASF70
 3273 060e 01       		.byte	0x1
 3274 060f 130A     		.2byte	0xa13
 3275 0611 00000000 		.4byte	.LFB27
 3276 0615 28000000 		.4byte	.LFE27-.LFB27
 3277 0619 01       		.uleb128 0x1
 3278 061a 9C       		.byte	0x9c
 3279 061b 2F060000 		.4byte	0x62f
 3280 061f 0B       		.uleb128 0xb
 3281 0620 07050000 		.4byte	.LASF71
 3282 0624 01       		.byte	0x1
 3283 0625 130A     		.2byte	0xa13
 3284 0627 77000000 		.4byte	0x77
 3285 062b 02       		.uleb128 0x2
 3286 062c 91       		.byte	0x91
 3287 062d 76       		.sleb128 -10
 3288 062e 00       		.byte	0
 3289 062f 0A       		.uleb128 0xa
 3290 0630 FC000000 		.4byte	.LASF72
 3291 0634 01       		.byte	0x1
 3292 0635 260A     		.2byte	0xa26
 3293 0637 00000000 		.4byte	.LFB28
 3294 063b 84000000 		.4byte	.LFE28-.LFB28
 3295 063f 01       		.uleb128 0x1
 3296 0640 9C       		.byte	0x9c
 3297 0641 55060000 		.4byte	0x655
 3298 0645 0B       		.uleb128 0xb
 3299 0646 F7000000 		.4byte	.LASF30
 3300 064a 01       		.byte	0x1
 3301 064b 260A     		.2byte	0xa26
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 113


 3302 064d 83000000 		.4byte	0x83
 3303 0651 02       		.uleb128 0x2
 3304 0652 91       		.byte	0x91
 3305 0653 74       		.sleb128 -12
 3306 0654 00       		.byte	0
 3307 0655 12       		.uleb128 0x12
 3308 0656 0F030000 		.4byte	.LASF73
 3309 065a 01       		.byte	0x1
 3310 065b 490A     		.2byte	0xa49
 3311 065d 00000000 		.4byte	.LFB29
 3312 0661 24000000 		.4byte	.LFE29-.LFB29
 3313 0665 01       		.uleb128 0x1
 3314 0666 9C       		.byte	0x9c
 3315 0667 0A       		.uleb128 0xa
 3316 0668 E1010000 		.4byte	.LASF74
 3317 066c 01       		.byte	0x1
 3318 066d 6D0A     		.2byte	0xa6d
 3319 066f 00000000 		.4byte	.LFB30
 3320 0673 60000000 		.4byte	.LFE30-.LFB30
 3321 0677 01       		.uleb128 0x1
 3322 0678 9C       		.byte	0x9c
 3323 0679 8B060000 		.4byte	0x68b
 3324 067d 13       		.uleb128 0x13
 3325 067e 6900     		.ascii	"i\000"
 3326 0680 01       		.byte	0x1
 3327 0681 6F0A     		.2byte	0xa6f
 3328 0683 83000000 		.4byte	0x83
 3329 0687 02       		.uleb128 0x2
 3330 0688 91       		.byte	0x91
 3331 0689 74       		.sleb128 -12
 3332 068a 00       		.byte	0
 3333 068b 12       		.uleb128 0x12
 3334 068c 60040000 		.4byte	.LASF75
 3335 0690 01       		.byte	0x1
 3336 0691 930A     		.2byte	0xa93
 3337 0693 00000000 		.4byte	.LFB31
 3338 0697 1C000000 		.4byte	.LFE31-.LFB31
 3339 069b 01       		.uleb128 0x1
 3340 069c 9C       		.byte	0x9c
 3341 069d 0E       		.uleb128 0xe
 3342 069e 14050000 		.4byte	.LASF76
 3343 06a2 01       		.byte	0x1
 3344 06a3 AB0A     		.2byte	0xaab
 3345 06a5 00000000 		.4byte	.LFB32
 3346 06a9 18000000 		.4byte	.LFE32-.LFB32
 3347 06ad 01       		.uleb128 0x1
 3348 06ae 9C       		.byte	0x9c
 3349 06af 0E       		.uleb128 0xe
 3350 06b0 B6000000 		.4byte	.LASF77
 3351 06b4 01       		.byte	0x1
 3352 06b5 C20A     		.2byte	0xac2
 3353 06b7 00000000 		.4byte	.LFB33
 3354 06bb 18000000 		.4byte	.LFE33-.LFB33
 3355 06bf 01       		.uleb128 0x1
 3356 06c0 9C       		.byte	0x9c
 3357 06c1 0E       		.uleb128 0xe
 3358 06c2 CE040000 		.4byte	.LASF78
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 114


 3359 06c6 01       		.byte	0x1
 3360 06c7 D90A     		.2byte	0xad9
 3361 06c9 00000000 		.4byte	.LFB34
 3362 06cd 18000000 		.4byte	.LFE34-.LFB34
 3363 06d1 01       		.uleb128 0x1
 3364 06d2 9C       		.byte	0x9c
 3365 06d3 11       		.uleb128 0x11
 3366 06d4 14060000 		.4byte	.LASF79
 3367 06d8 01       		.byte	0x1
 3368 06d9 EF0A     		.2byte	0xaef
 3369 06db 00000000 		.4byte	.LFB35
 3370 06df 1C000000 		.4byte	.LFE35-.LFB35
 3371 06e3 01       		.uleb128 0x1
 3372 06e4 9C       		.byte	0x9c
 3373 06e5 F9060000 		.4byte	0x6f9
 3374 06e9 0B       		.uleb128 0xb
 3375 06ea EF010000 		.4byte	.LASF59
 3376 06ee 01       		.byte	0x1
 3377 06ef EF0A     		.2byte	0xaef
 3378 06f1 83000000 		.4byte	0x83
 3379 06f5 02       		.uleb128 0x2
 3380 06f6 91       		.byte	0x91
 3381 06f7 74       		.sleb128 -12
 3382 06f8 00       		.byte	0
 3383 06f9 0F       		.uleb128 0xf
 3384 06fa 17010000 		.4byte	.LASF81
 3385 06fe 01       		.byte	0x1
 3386 06ff 030B     		.2byte	0xb03
 3387 0701 83000000 		.4byte	0x83
 3388 0705 00000000 		.4byte	.LFB36
 3389 0709 18000000 		.4byte	.LFE36-.LFB36
 3390 070d 01       		.uleb128 0x1
 3391 070e 9C       		.byte	0x9c
 3392 070f 0F       		.uleb128 0xf
 3393 0710 7D030000 		.4byte	.LASF82
 3394 0714 01       		.byte	0x1
 3395 0715 170B     		.2byte	0xb17
 3396 0717 83000000 		.4byte	0x83
 3397 071b 00000000 		.4byte	.LFB37
 3398 071f 18000000 		.4byte	.LFE37-.LFB37
 3399 0723 01       		.uleb128 0x1
 3400 0724 9C       		.byte	0x9c
 3401 0725 0F       		.uleb128 0xf
 3402 0726 03020000 		.4byte	.LASF83
 3403 072a 01       		.byte	0x1
 3404 072b 5A0B     		.2byte	0xb5a
 3405 072d 83000000 		.4byte	0x83
 3406 0731 00000000 		.4byte	.LFB38
 3407 0735 18000000 		.4byte	.LFE38-.LFB38
 3408 0739 01       		.uleb128 0x1
 3409 073a 9C       		.byte	0x9c
 3410 073b 0E       		.uleb128 0xe
 3411 073c 26020000 		.4byte	.LASF84
 3412 0740 01       		.byte	0x1
 3413 0741 6E0B     		.2byte	0xb6e
 3414 0743 00000000 		.4byte	.LFB39
 3415 0747 14000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 115


 3416 074b 01       		.uleb128 0x1
 3417 074c 9C       		.byte	0x9c
 3418 074d 10       		.uleb128 0x10
 3419 074e 87040000 		.4byte	.LASF85
 3420 0752 01       		.byte	0x1
 3421 0753 930B     		.2byte	0xb93
 3422 0755 E0000000 		.4byte	0xe0
 3423 0759 00000000 		.4byte	.LFB40
 3424 075d 2C000000 		.4byte	.LFE40-.LFB40
 3425 0761 01       		.uleb128 0x1
 3426 0762 9C       		.byte	0x9c
 3427 0763 95070000 		.4byte	0x795
 3428 0767 0B       		.uleb128 0xb
 3429 0768 9F010000 		.4byte	.LASF49
 3430 076c 01       		.byte	0x1
 3431 076d 930B     		.2byte	0xb93
 3432 076f 83000000 		.4byte	0x83
 3433 0773 02       		.uleb128 0x2
 3434 0774 91       		.byte	0x91
 3435 0775 6C       		.sleb128 -20
 3436 0776 0B       		.uleb128 0xb
 3437 0777 63030000 		.4byte	.LASF86
 3438 077b 01       		.byte	0x1
 3439 077c 930B     		.2byte	0xb93
 3440 077e E0000000 		.4byte	0xe0
 3441 0782 02       		.uleb128 0x2
 3442 0783 91       		.byte	0x91
 3443 0784 68       		.sleb128 -24
 3444 0785 0C       		.uleb128 0xc
 3445 0786 47000000 		.4byte	.LASF87
 3446 078a 01       		.byte	0x1
 3447 078b 950B     		.2byte	0xb95
 3448 078d E0000000 		.4byte	0xe0
 3449 0791 02       		.uleb128 0x2
 3450 0792 91       		.byte	0x91
 3451 0793 74       		.sleb128 -12
 3452 0794 00       		.byte	0
 3453 0795 10       		.uleb128 0x10
 3454 0796 40010000 		.4byte	.LASF88
 3455 079a 01       		.byte	0x1
 3456 079b AD0B     		.2byte	0xbad
 3457 079d E0000000 		.4byte	0xe0
 3458 07a1 00000000 		.4byte	.LFB41
 3459 07a5 1C000000 		.4byte	.LFE41-.LFB41
 3460 07a9 01       		.uleb128 0x1
 3461 07aa 9C       		.byte	0x9c
 3462 07ab BF070000 		.4byte	0x7bf
 3463 07af 0B       		.uleb128 0xb
 3464 07b0 9F010000 		.4byte	.LASF49
 3465 07b4 01       		.byte	0x1
 3466 07b5 AD0B     		.2byte	0xbad
 3467 07b7 83000000 		.4byte	0x83
 3468 07bb 02       		.uleb128 0x2
 3469 07bc 91       		.byte	0x91
 3470 07bd 74       		.sleb128 -12
 3471 07be 00       		.byte	0
 3472 07bf 14       		.uleb128 0x14
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 116


 3473 07c0 27060000 		.4byte	.LASF101
 3474 07c4 01       		.byte	0x1
 3475 07c5 C10B     		.2byte	0xbc1
 3476 07c7 00000000 		.4byte	.LFB42
 3477 07cb 44000000 		.4byte	.LFE42-.LFB42
 3478 07cf 01       		.uleb128 0x1
 3479 07d0 9C       		.byte	0x9c
 3480 07d1 E3070000 		.4byte	0x7e3
 3481 07d5 13       		.uleb128 0x13
 3482 07d6 6900     		.ascii	"i\000"
 3483 07d8 01       		.byte	0x1
 3484 07d9 C30B     		.2byte	0xbc3
 3485 07db 83000000 		.4byte	0x83
 3486 07df 02       		.uleb128 0x2
 3487 07e0 91       		.byte	0x91
 3488 07e1 74       		.sleb128 -12
 3489 07e2 00       		.byte	0
 3490 07e3 11       		.uleb128 0x11
 3491 07e4 F5010000 		.4byte	.LASF89
 3492 07e8 01       		.byte	0x1
 3493 07e9 E60B     		.2byte	0xbe6
 3494 07eb 00000000 		.4byte	.LFB43
 3495 07ef C0000000 		.4byte	.LFE43-.LFB43
 3496 07f3 01       		.uleb128 0x1
 3497 07f4 9C       		.byte	0x9c
 3498 07f5 09080000 		.4byte	0x809
 3499 07f9 0B       		.uleb128 0xb
 3500 07fa BD040000 		.4byte	.LASF90
 3501 07fe 01       		.byte	0x1
 3502 07ff E60B     		.2byte	0xbe6
 3503 0801 09080000 		.4byte	0x809
 3504 0805 02       		.uleb128 0x2
 3505 0806 91       		.byte	0x91
 3506 0807 74       		.sleb128 -12
 3507 0808 00       		.byte	0
 3508 0809 06       		.uleb128 0x6
 3509 080a 04       		.byte	0x4
 3510 080b 83000000 		.4byte	0x83
 3511 080f 15       		.uleb128 0x15
 3512 0810 E0000000 		.4byte	0xe0
 3513 0814 1F080000 		.4byte	0x81f
 3514 0818 16       		.uleb128 0x16
 3515 0819 D9000000 		.4byte	0xd9
 3516 081d 04       		.byte	0x4
 3517 081e 00       		.byte	0
 3518 081f 17       		.uleb128 0x17
 3519 0820 9C040000 		.4byte	.LASF91
 3520 0824 01       		.byte	0x1
 3521 0825 23       		.byte	0x23
 3522 0826 0F080000 		.4byte	0x80f
 3523 082a 05       		.uleb128 0x5
 3524 082b 03       		.byte	0x3
 3525 082c 00000000 		.4byte	CySysTickCallbacks
 3526 0830 18       		.uleb128 0x18
 3527 0831 88000000 		.4byte	.LASF92
 3528 0835 01       		.byte	0x1
 3529 0836 36       		.byte	0x36
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 117


 3530 0837 83000000 		.4byte	0x83
 3531 083b 05       		.uleb128 0x5
 3532 083c 03       		.byte	0x3
 3533 083d 00000000 		.4byte	CySysTickInitVar
 3534 0841 18       		.uleb128 0x18
 3535 0842 8F030000 		.4byte	.LASF93
 3536 0846 01       		.byte	0x1
 3537 0847 1C       		.byte	0x1c
 3538 0848 83000000 		.4byte	0x83
 3539 084c 05       		.uleb128 0x5
 3540 084d 03       		.byte	0x3
 3541 084e 00000000 		.4byte	cydelayFreqHz
 3542 0852 18       		.uleb128 0x18
 3543 0853 5B010000 		.4byte	.LASF94
 3544 0857 01       		.byte	0x1
 3545 0858 1D       		.byte	0x1d
 3546 0859 83000000 		.4byte	0x83
 3547 085d 05       		.uleb128 0x5
 3548 085e 03       		.byte	0x3
 3549 085f 00000000 		.4byte	cydelayFreqKhz
 3550 0863 18       		.uleb128 0x18
 3551 0864 F8040000 		.4byte	.LASF95
 3552 0868 01       		.byte	0x1
 3553 0869 1E       		.byte	0x1e
 3554 086a 6B000000 		.4byte	0x6b
 3555 086e 05       		.uleb128 0x5
 3556 086f 03       		.byte	0x3
 3557 0870 00000000 		.4byte	cydelayFreqMhz
 3558 0874 18       		.uleb128 0x18
 3559 0875 D4010000 		.4byte	.LASF96
 3560 0879 01       		.byte	0x1
 3561 087a 1F       		.byte	0x1f
 3562 087b 83000000 		.4byte	0x83
 3563 087f 05       		.uleb128 0x5
 3564 0880 03       		.byte	0x3
 3565 0881 00000000 		.4byte	cydelay32kMs
 3566 0885 15       		.uleb128 0x15
 3567 0886 6B000000 		.4byte	0x6b
 3568 088a 95080000 		.4byte	0x895
 3569 088e 16       		.uleb128 0x16
 3570 088f D9000000 		.4byte	0xd9
 3571 0893 2D       		.byte	0x2d
 3572 0894 00       		.byte	0
 3573 0895 18       		.uleb128 0x18
 3574 0896 6C030000 		.4byte	.LASF97
 3575 089a 01       		.byte	0x1
 3576 089b 3B       		.byte	0x3b
 3577 089c A6080000 		.4byte	0x8a6
 3578 08a0 05       		.uleb128 0x5
 3579 08a1 03       		.byte	0x3
 3580 08a2 00000000 		.4byte	cyImoFreqMhz2Reg
 3581 08a6 19       		.uleb128 0x19
 3582 08a7 85080000 		.4byte	0x885
 3583 08ab 00       		.byte	0
 3584              		.section	.debug_abbrev,"",%progbits
 3585              	.Ldebug_abbrev0:
 3586 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 118


 3587 0001 11       		.uleb128 0x11
 3588 0002 01       		.byte	0x1
 3589 0003 25       		.uleb128 0x25
 3590 0004 0E       		.uleb128 0xe
 3591 0005 13       		.uleb128 0x13
 3592 0006 0B       		.uleb128 0xb
 3593 0007 03       		.uleb128 0x3
 3594 0008 0E       		.uleb128 0xe
 3595 0009 1B       		.uleb128 0x1b
 3596 000a 0E       		.uleb128 0xe
 3597 000b 55       		.uleb128 0x55
 3598 000c 17       		.uleb128 0x17
 3599 000d 11       		.uleb128 0x11
 3600 000e 01       		.uleb128 0x1
 3601 000f 10       		.uleb128 0x10
 3602 0010 17       		.uleb128 0x17
 3603 0011 00       		.byte	0
 3604 0012 00       		.byte	0
 3605 0013 02       		.uleb128 0x2
 3606 0014 24       		.uleb128 0x24
 3607 0015 00       		.byte	0
 3608 0016 0B       		.uleb128 0xb
 3609 0017 0B       		.uleb128 0xb
 3610 0018 3E       		.uleb128 0x3e
 3611 0019 0B       		.uleb128 0xb
 3612 001a 03       		.uleb128 0x3
 3613 001b 0E       		.uleb128 0xe
 3614 001c 00       		.byte	0
 3615 001d 00       		.byte	0
 3616 001e 03       		.uleb128 0x3
 3617 001f 24       		.uleb128 0x24
 3618 0020 00       		.byte	0
 3619 0021 0B       		.uleb128 0xb
 3620 0022 0B       		.uleb128 0xb
 3621 0023 3E       		.uleb128 0x3e
 3622 0024 0B       		.uleb128 0xb
 3623 0025 03       		.uleb128 0x3
 3624 0026 08       		.uleb128 0x8
 3625 0027 00       		.byte	0
 3626 0028 00       		.byte	0
 3627 0029 04       		.uleb128 0x4
 3628 002a 16       		.uleb128 0x16
 3629 002b 00       		.byte	0
 3630 002c 03       		.uleb128 0x3
 3631 002d 0E       		.uleb128 0xe
 3632 002e 3A       		.uleb128 0x3a
 3633 002f 0B       		.uleb128 0xb
 3634 0030 3B       		.uleb128 0x3b
 3635 0031 05       		.uleb128 0x5
 3636 0032 49       		.uleb128 0x49
 3637 0033 13       		.uleb128 0x13
 3638 0034 00       		.byte	0
 3639 0035 00       		.byte	0
 3640 0036 05       		.uleb128 0x5
 3641 0037 35       		.uleb128 0x35
 3642 0038 00       		.byte	0
 3643 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 119


 3644 003a 13       		.uleb128 0x13
 3645 003b 00       		.byte	0
 3646 003c 00       		.byte	0
 3647 003d 06       		.uleb128 0x6
 3648 003e 0F       		.uleb128 0xf
 3649 003f 00       		.byte	0
 3650 0040 0B       		.uleb128 0xb
 3651 0041 0B       		.uleb128 0xb
 3652 0042 49       		.uleb128 0x49
 3653 0043 13       		.uleb128 0x13
 3654 0044 00       		.byte	0
 3655 0045 00       		.byte	0
 3656 0046 07       		.uleb128 0x7
 3657 0047 15       		.uleb128 0x15
 3658 0048 00       		.byte	0
 3659 0049 27       		.uleb128 0x27
 3660 004a 19       		.uleb128 0x19
 3661 004b 00       		.byte	0
 3662 004c 00       		.byte	0
 3663 004d 08       		.uleb128 0x8
 3664 004e 16       		.uleb128 0x16
 3665 004f 00       		.byte	0
 3666 0050 03       		.uleb128 0x3
 3667 0051 0E       		.uleb128 0xe
 3668 0052 3A       		.uleb128 0x3a
 3669 0053 0B       		.uleb128 0xb
 3670 0054 3B       		.uleb128 0x3b
 3671 0055 0B       		.uleb128 0xb
 3672 0056 49       		.uleb128 0x49
 3673 0057 13       		.uleb128 0x13
 3674 0058 00       		.byte	0
 3675 0059 00       		.byte	0
 3676 005a 09       		.uleb128 0x9
 3677 005b 2E       		.uleb128 0x2e
 3678 005c 00       		.byte	0
 3679 005d 3F       		.uleb128 0x3f
 3680 005e 19       		.uleb128 0x19
 3681 005f 03       		.uleb128 0x3
 3682 0060 0E       		.uleb128 0xe
 3683 0061 3A       		.uleb128 0x3a
 3684 0062 0B       		.uleb128 0xb
 3685 0063 3B       		.uleb128 0x3b
 3686 0064 0B       		.uleb128 0xb
 3687 0065 27       		.uleb128 0x27
 3688 0066 19       		.uleb128 0x19
 3689 0067 11       		.uleb128 0x11
 3690 0068 01       		.uleb128 0x1
 3691 0069 12       		.uleb128 0x12
 3692 006a 06       		.uleb128 0x6
 3693 006b 40       		.uleb128 0x40
 3694 006c 18       		.uleb128 0x18
 3695 006d 9742     		.uleb128 0x2117
 3696 006f 19       		.uleb128 0x19
 3697 0070 00       		.byte	0
 3698 0071 00       		.byte	0
 3699 0072 0A       		.uleb128 0xa
 3700 0073 2E       		.uleb128 0x2e
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 120


 3701 0074 01       		.byte	0x1
 3702 0075 3F       		.uleb128 0x3f
 3703 0076 19       		.uleb128 0x19
 3704 0077 03       		.uleb128 0x3
 3705 0078 0E       		.uleb128 0xe
 3706 0079 3A       		.uleb128 0x3a
 3707 007a 0B       		.uleb128 0xb
 3708 007b 3B       		.uleb128 0x3b
 3709 007c 05       		.uleb128 0x5
 3710 007d 27       		.uleb128 0x27
 3711 007e 19       		.uleb128 0x19
 3712 007f 11       		.uleb128 0x11
 3713 0080 01       		.uleb128 0x1
 3714 0081 12       		.uleb128 0x12
 3715 0082 06       		.uleb128 0x6
 3716 0083 40       		.uleb128 0x40
 3717 0084 18       		.uleb128 0x18
 3718 0085 9642     		.uleb128 0x2116
 3719 0087 19       		.uleb128 0x19
 3720 0088 01       		.uleb128 0x1
 3721 0089 13       		.uleb128 0x13
 3722 008a 00       		.byte	0
 3723 008b 00       		.byte	0
 3724 008c 0B       		.uleb128 0xb
 3725 008d 05       		.uleb128 0x5
 3726 008e 00       		.byte	0
 3727 008f 03       		.uleb128 0x3
 3728 0090 0E       		.uleb128 0xe
 3729 0091 3A       		.uleb128 0x3a
 3730 0092 0B       		.uleb128 0xb
 3731 0093 3B       		.uleb128 0x3b
 3732 0094 05       		.uleb128 0x5
 3733 0095 49       		.uleb128 0x49
 3734 0096 13       		.uleb128 0x13
 3735 0097 02       		.uleb128 0x2
 3736 0098 18       		.uleb128 0x18
 3737 0099 00       		.byte	0
 3738 009a 00       		.byte	0
 3739 009b 0C       		.uleb128 0xc
 3740 009c 34       		.uleb128 0x34
 3741 009d 00       		.byte	0
 3742 009e 03       		.uleb128 0x3
 3743 009f 0E       		.uleb128 0xe
 3744 00a0 3A       		.uleb128 0x3a
 3745 00a1 0B       		.uleb128 0xb
 3746 00a2 3B       		.uleb128 0x3b
 3747 00a3 05       		.uleb128 0x5
 3748 00a4 49       		.uleb128 0x49
 3749 00a5 13       		.uleb128 0x13
 3750 00a6 02       		.uleb128 0x2
 3751 00a7 18       		.uleb128 0x18
 3752 00a8 00       		.byte	0
 3753 00a9 00       		.byte	0
 3754 00aa 0D       		.uleb128 0xd
 3755 00ab 2E       		.uleb128 0x2e
 3756 00ac 01       		.byte	0x1
 3757 00ad 3F       		.uleb128 0x3f
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 121


 3758 00ae 19       		.uleb128 0x19
 3759 00af 03       		.uleb128 0x3
 3760 00b0 0E       		.uleb128 0xe
 3761 00b1 3A       		.uleb128 0x3a
 3762 00b2 0B       		.uleb128 0xb
 3763 00b3 3B       		.uleb128 0x3b
 3764 00b4 05       		.uleb128 0x5
 3765 00b5 27       		.uleb128 0x27
 3766 00b6 19       		.uleb128 0x19
 3767 00b7 49       		.uleb128 0x49
 3768 00b8 13       		.uleb128 0x13
 3769 00b9 11       		.uleb128 0x11
 3770 00ba 01       		.uleb128 0x1
 3771 00bb 12       		.uleb128 0x12
 3772 00bc 06       		.uleb128 0x6
 3773 00bd 40       		.uleb128 0x40
 3774 00be 18       		.uleb128 0x18
 3775 00bf 9642     		.uleb128 0x2116
 3776 00c1 19       		.uleb128 0x19
 3777 00c2 01       		.uleb128 0x1
 3778 00c3 13       		.uleb128 0x13
 3779 00c4 00       		.byte	0
 3780 00c5 00       		.byte	0
 3781 00c6 0E       		.uleb128 0xe
 3782 00c7 2E       		.uleb128 0x2e
 3783 00c8 00       		.byte	0
 3784 00c9 3F       		.uleb128 0x3f
 3785 00ca 19       		.uleb128 0x19
 3786 00cb 03       		.uleb128 0x3
 3787 00cc 0E       		.uleb128 0xe
 3788 00cd 3A       		.uleb128 0x3a
 3789 00ce 0B       		.uleb128 0xb
 3790 00cf 3B       		.uleb128 0x3b
 3791 00d0 05       		.uleb128 0x5
 3792 00d1 27       		.uleb128 0x27
 3793 00d2 19       		.uleb128 0x19
 3794 00d3 11       		.uleb128 0x11
 3795 00d4 01       		.uleb128 0x1
 3796 00d5 12       		.uleb128 0x12
 3797 00d6 06       		.uleb128 0x6
 3798 00d7 40       		.uleb128 0x40
 3799 00d8 18       		.uleb128 0x18
 3800 00d9 9742     		.uleb128 0x2117
 3801 00db 19       		.uleb128 0x19
 3802 00dc 00       		.byte	0
 3803 00dd 00       		.byte	0
 3804 00de 0F       		.uleb128 0xf
 3805 00df 2E       		.uleb128 0x2e
 3806 00e0 00       		.byte	0
 3807 00e1 3F       		.uleb128 0x3f
 3808 00e2 19       		.uleb128 0x19
 3809 00e3 03       		.uleb128 0x3
 3810 00e4 0E       		.uleb128 0xe
 3811 00e5 3A       		.uleb128 0x3a
 3812 00e6 0B       		.uleb128 0xb
 3813 00e7 3B       		.uleb128 0x3b
 3814 00e8 05       		.uleb128 0x5
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 122


 3815 00e9 27       		.uleb128 0x27
 3816 00ea 19       		.uleb128 0x19
 3817 00eb 49       		.uleb128 0x49
 3818 00ec 13       		.uleb128 0x13
 3819 00ed 11       		.uleb128 0x11
 3820 00ee 01       		.uleb128 0x1
 3821 00ef 12       		.uleb128 0x12
 3822 00f0 06       		.uleb128 0x6
 3823 00f1 40       		.uleb128 0x40
 3824 00f2 18       		.uleb128 0x18
 3825 00f3 9742     		.uleb128 0x2117
 3826 00f5 19       		.uleb128 0x19
 3827 00f6 00       		.byte	0
 3828 00f7 00       		.byte	0
 3829 00f8 10       		.uleb128 0x10
 3830 00f9 2E       		.uleb128 0x2e
 3831 00fa 01       		.byte	0x1
 3832 00fb 3F       		.uleb128 0x3f
 3833 00fc 19       		.uleb128 0x19
 3834 00fd 03       		.uleb128 0x3
 3835 00fe 0E       		.uleb128 0xe
 3836 00ff 3A       		.uleb128 0x3a
 3837 0100 0B       		.uleb128 0xb
 3838 0101 3B       		.uleb128 0x3b
 3839 0102 05       		.uleb128 0x5
 3840 0103 27       		.uleb128 0x27
 3841 0104 19       		.uleb128 0x19
 3842 0105 49       		.uleb128 0x49
 3843 0106 13       		.uleb128 0x13
 3844 0107 11       		.uleb128 0x11
 3845 0108 01       		.uleb128 0x1
 3846 0109 12       		.uleb128 0x12
 3847 010a 06       		.uleb128 0x6
 3848 010b 40       		.uleb128 0x40
 3849 010c 18       		.uleb128 0x18
 3850 010d 9742     		.uleb128 0x2117
 3851 010f 19       		.uleb128 0x19
 3852 0110 01       		.uleb128 0x1
 3853 0111 13       		.uleb128 0x13
 3854 0112 00       		.byte	0
 3855 0113 00       		.byte	0
 3856 0114 11       		.uleb128 0x11
 3857 0115 2E       		.uleb128 0x2e
 3858 0116 01       		.byte	0x1
 3859 0117 3F       		.uleb128 0x3f
 3860 0118 19       		.uleb128 0x19
 3861 0119 03       		.uleb128 0x3
 3862 011a 0E       		.uleb128 0xe
 3863 011b 3A       		.uleb128 0x3a
 3864 011c 0B       		.uleb128 0xb
 3865 011d 3B       		.uleb128 0x3b
 3866 011e 05       		.uleb128 0x5
 3867 011f 27       		.uleb128 0x27
 3868 0120 19       		.uleb128 0x19
 3869 0121 11       		.uleb128 0x11
 3870 0122 01       		.uleb128 0x1
 3871 0123 12       		.uleb128 0x12
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 123


 3872 0124 06       		.uleb128 0x6
 3873 0125 40       		.uleb128 0x40
 3874 0126 18       		.uleb128 0x18
 3875 0127 9742     		.uleb128 0x2117
 3876 0129 19       		.uleb128 0x19
 3877 012a 01       		.uleb128 0x1
 3878 012b 13       		.uleb128 0x13
 3879 012c 00       		.byte	0
 3880 012d 00       		.byte	0
 3881 012e 12       		.uleb128 0x12
 3882 012f 2E       		.uleb128 0x2e
 3883 0130 00       		.byte	0
 3884 0131 3F       		.uleb128 0x3f
 3885 0132 19       		.uleb128 0x19
 3886 0133 03       		.uleb128 0x3
 3887 0134 0E       		.uleb128 0xe
 3888 0135 3A       		.uleb128 0x3a
 3889 0136 0B       		.uleb128 0xb
 3890 0137 3B       		.uleb128 0x3b
 3891 0138 05       		.uleb128 0x5
 3892 0139 27       		.uleb128 0x27
 3893 013a 19       		.uleb128 0x19
 3894 013b 11       		.uleb128 0x11
 3895 013c 01       		.uleb128 0x1
 3896 013d 12       		.uleb128 0x12
 3897 013e 06       		.uleb128 0x6
 3898 013f 40       		.uleb128 0x40
 3899 0140 18       		.uleb128 0x18
 3900 0141 9642     		.uleb128 0x2116
 3901 0143 19       		.uleb128 0x19
 3902 0144 00       		.byte	0
 3903 0145 00       		.byte	0
 3904 0146 13       		.uleb128 0x13
 3905 0147 34       		.uleb128 0x34
 3906 0148 00       		.byte	0
 3907 0149 03       		.uleb128 0x3
 3908 014a 08       		.uleb128 0x8
 3909 014b 3A       		.uleb128 0x3a
 3910 014c 0B       		.uleb128 0xb
 3911 014d 3B       		.uleb128 0x3b
 3912 014e 05       		.uleb128 0x5
 3913 014f 49       		.uleb128 0x49
 3914 0150 13       		.uleb128 0x13
 3915 0151 02       		.uleb128 0x2
 3916 0152 18       		.uleb128 0x18
 3917 0153 00       		.byte	0
 3918 0154 00       		.byte	0
 3919 0155 14       		.uleb128 0x14
 3920 0156 2E       		.uleb128 0x2e
 3921 0157 01       		.byte	0x1
 3922 0158 03       		.uleb128 0x3
 3923 0159 0E       		.uleb128 0xe
 3924 015a 3A       		.uleb128 0x3a
 3925 015b 0B       		.uleb128 0xb
 3926 015c 3B       		.uleb128 0x3b
 3927 015d 05       		.uleb128 0x5
 3928 015e 27       		.uleb128 0x27
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 124


 3929 015f 19       		.uleb128 0x19
 3930 0160 11       		.uleb128 0x11
 3931 0161 01       		.uleb128 0x1
 3932 0162 12       		.uleb128 0x12
 3933 0163 06       		.uleb128 0x6
 3934 0164 40       		.uleb128 0x40
 3935 0165 18       		.uleb128 0x18
 3936 0166 9642     		.uleb128 0x2116
 3937 0168 19       		.uleb128 0x19
 3938 0169 01       		.uleb128 0x1
 3939 016a 13       		.uleb128 0x13
 3940 016b 00       		.byte	0
 3941 016c 00       		.byte	0
 3942 016d 15       		.uleb128 0x15
 3943 016e 01       		.uleb128 0x1
 3944 016f 01       		.byte	0x1
 3945 0170 49       		.uleb128 0x49
 3946 0171 13       		.uleb128 0x13
 3947 0172 01       		.uleb128 0x1
 3948 0173 13       		.uleb128 0x13
 3949 0174 00       		.byte	0
 3950 0175 00       		.byte	0
 3951 0176 16       		.uleb128 0x16
 3952 0177 21       		.uleb128 0x21
 3953 0178 00       		.byte	0
 3954 0179 49       		.uleb128 0x49
 3955 017a 13       		.uleb128 0x13
 3956 017b 2F       		.uleb128 0x2f
 3957 017c 0B       		.uleb128 0xb
 3958 017d 00       		.byte	0
 3959 017e 00       		.byte	0
 3960 017f 17       		.uleb128 0x17
 3961 0180 34       		.uleb128 0x34
 3962 0181 00       		.byte	0
 3963 0182 03       		.uleb128 0x3
 3964 0183 0E       		.uleb128 0xe
 3965 0184 3A       		.uleb128 0x3a
 3966 0185 0B       		.uleb128 0xb
 3967 0186 3B       		.uleb128 0x3b
 3968 0187 0B       		.uleb128 0xb
 3969 0188 49       		.uleb128 0x49
 3970 0189 13       		.uleb128 0x13
 3971 018a 02       		.uleb128 0x2
 3972 018b 18       		.uleb128 0x18
 3973 018c 00       		.byte	0
 3974 018d 00       		.byte	0
 3975 018e 18       		.uleb128 0x18
 3976 018f 34       		.uleb128 0x34
 3977 0190 00       		.byte	0
 3978 0191 03       		.uleb128 0x3
 3979 0192 0E       		.uleb128 0xe
 3980 0193 3A       		.uleb128 0x3a
 3981 0194 0B       		.uleb128 0xb
 3982 0195 3B       		.uleb128 0x3b
 3983 0196 0B       		.uleb128 0xb
 3984 0197 49       		.uleb128 0x49
 3985 0198 13       		.uleb128 0x13
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 125


 3986 0199 3F       		.uleb128 0x3f
 3987 019a 19       		.uleb128 0x19
 3988 019b 02       		.uleb128 0x2
 3989 019c 18       		.uleb128 0x18
 3990 019d 00       		.byte	0
 3991 019e 00       		.byte	0
 3992 019f 19       		.uleb128 0x19
 3993 01a0 26       		.uleb128 0x26
 3994 01a1 00       		.byte	0
 3995 01a2 49       		.uleb128 0x49
 3996 01a3 13       		.uleb128 0x13
 3997 01a4 00       		.byte	0
 3998 01a5 00       		.byte	0
 3999 01a6 00       		.byte	0
 4000              		.section	.debug_aranges,"",%progbits
 4001 0000 74010000 		.4byte	0x174
 4002 0004 0200     		.2byte	0x2
 4003 0006 00000000 		.4byte	.Ldebug_info0
 4004 000a 04       		.byte	0x4
 4005 000b 00       		.byte	0
 4006 000c 0000     		.2byte	0
 4007 000e 0000     		.2byte	0
 4008 0010 00000000 		.4byte	.LFB0
 4009 0014 1C000000 		.4byte	.LFE0-.LFB0
 4010 0018 00000000 		.4byte	.LFB1
 4011 001c 18000000 		.4byte	.LFE1-.LFB1
 4012 0020 00000000 		.4byte	.LFB2
 4013 0024 48000000 		.4byte	.LFE2-.LFB2
 4014 0028 00000000 		.4byte	.LFB3
 4015 002c 34000000 		.4byte	.LFE3-.LFB3
 4016 0030 00000000 		.4byte	.LFB4
 4017 0034 44000000 		.4byte	.LFE4-.LFB4
 4018 0038 00000000 		.4byte	.LFB5
 4019 003c EC010000 		.4byte	.LFE5-.LFB5
 4020 0040 00000000 		.4byte	.LFB6
 4021 0044 60000000 		.4byte	.LFE6-.LFB6
 4022 0048 00000000 		.4byte	.LFB7
 4023 004c 28000000 		.4byte	.LFE7-.LFB7
 4024 0050 00000000 		.4byte	.LFB8
 4025 0054 18000000 		.4byte	.LFE8-.LFB8
 4026 0058 00000000 		.4byte	.LFB9
 4027 005c 14000000 		.4byte	.LFE9-.LFB9
 4028 0060 00000000 		.4byte	.LFB10
 4029 0064 30000000 		.4byte	.LFE10-.LFB10
 4030 0068 00000000 		.4byte	.LFB11
 4031 006c 24000000 		.4byte	.LFE11-.LFB11
 4032 0070 00000000 		.4byte	.LFB12
 4033 0074 18000000 		.4byte	.LFE12-.LFB12
 4034 0078 00000000 		.4byte	.LFB13
 4035 007c 48000000 		.4byte	.LFE13-.LFB13
 4036 0080 00000000 		.4byte	.LFB14
 4037 0084 34000000 		.4byte	.LFE14-.LFB14
 4038 0088 00000000 		.4byte	.LFB15
 4039 008c 4C000000 		.4byte	.LFE15-.LFB15
 4040 0090 00000000 		.4byte	.LFB16
 4041 0094 36000000 		.4byte	.LFE16-.LFB16
 4042 0098 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 126


 4043 009c A8000000 		.4byte	.LFE17-.LFB17
 4044 00a0 00000000 		.4byte	.LFB18
 4045 00a4 5C000000 		.4byte	.LFE18-.LFB18
 4046 00a8 00000000 		.4byte	.LFB19
 4047 00ac 28000000 		.4byte	.LFE19-.LFB19
 4048 00b0 00000000 		.4byte	.LFB20
 4049 00b4 30000000 		.4byte	.LFE20-.LFB20
 4050 00b8 00000000 		.4byte	.LFB21
 4051 00bc 28000000 		.4byte	.LFE21-.LFB21
 4052 00c0 00000000 		.4byte	.LFB22
 4053 00c4 28000000 		.4byte	.LFE22-.LFB22
 4054 00c8 00000000 		.4byte	.LFB23
 4055 00cc 28000000 		.4byte	.LFE23-.LFB23
 4056 00d0 00000000 		.4byte	.LFB24
 4057 00d4 14000000 		.4byte	.LFE24-.LFB24
 4058 00d8 00000000 		.4byte	.LFB25
 4059 00dc 20000000 		.4byte	.LFE25-.LFB25
 4060 00e0 00000000 		.4byte	.LFB26
 4061 00e4 48000000 		.4byte	.LFE26-.LFB26
 4062 00e8 00000000 		.4byte	.LFB27
 4063 00ec 28000000 		.4byte	.LFE27-.LFB27
 4064 00f0 00000000 		.4byte	.LFB28
 4065 00f4 84000000 		.4byte	.LFE28-.LFB28
 4066 00f8 00000000 		.4byte	.LFB29
 4067 00fc 24000000 		.4byte	.LFE29-.LFB29
 4068 0100 00000000 		.4byte	.LFB30
 4069 0104 60000000 		.4byte	.LFE30-.LFB30
 4070 0108 00000000 		.4byte	.LFB31
 4071 010c 1C000000 		.4byte	.LFE31-.LFB31
 4072 0110 00000000 		.4byte	.LFB32
 4073 0114 18000000 		.4byte	.LFE32-.LFB32
 4074 0118 00000000 		.4byte	.LFB33
 4075 011c 18000000 		.4byte	.LFE33-.LFB33
 4076 0120 00000000 		.4byte	.LFB34
 4077 0124 18000000 		.4byte	.LFE34-.LFB34
 4078 0128 00000000 		.4byte	.LFB35
 4079 012c 1C000000 		.4byte	.LFE35-.LFB35
 4080 0130 00000000 		.4byte	.LFB36
 4081 0134 18000000 		.4byte	.LFE36-.LFB36
 4082 0138 00000000 		.4byte	.LFB37
 4083 013c 18000000 		.4byte	.LFE37-.LFB37
 4084 0140 00000000 		.4byte	.LFB38
 4085 0144 18000000 		.4byte	.LFE38-.LFB38
 4086 0148 00000000 		.4byte	.LFB39
 4087 014c 14000000 		.4byte	.LFE39-.LFB39
 4088 0150 00000000 		.4byte	.LFB40
 4089 0154 2C000000 		.4byte	.LFE40-.LFB40
 4090 0158 00000000 		.4byte	.LFB41
 4091 015c 1C000000 		.4byte	.LFE41-.LFB41
 4092 0160 00000000 		.4byte	.LFB42
 4093 0164 44000000 		.4byte	.LFE42-.LFB42
 4094 0168 00000000 		.4byte	.LFB43
 4095 016c C0000000 		.4byte	.LFE43-.LFB43
 4096 0170 00000000 		.4byte	0
 4097 0174 00000000 		.4byte	0
 4098              		.section	.debug_ranges,"",%progbits
 4099              	.Ldebug_ranges0:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 127


 4100 0000 00000000 		.4byte	.LFB0
 4101 0004 1C000000 		.4byte	.LFE0
 4102 0008 00000000 		.4byte	.LFB1
 4103 000c 18000000 		.4byte	.LFE1
 4104 0010 00000000 		.4byte	.LFB2
 4105 0014 48000000 		.4byte	.LFE2
 4106 0018 00000000 		.4byte	.LFB3
 4107 001c 34000000 		.4byte	.LFE3
 4108 0020 00000000 		.4byte	.LFB4
 4109 0024 44000000 		.4byte	.LFE4
 4110 0028 00000000 		.4byte	.LFB5
 4111 002c EC010000 		.4byte	.LFE5
 4112 0030 00000000 		.4byte	.LFB6
 4113 0034 60000000 		.4byte	.LFE6
 4114 0038 00000000 		.4byte	.LFB7
 4115 003c 28000000 		.4byte	.LFE7
 4116 0040 00000000 		.4byte	.LFB8
 4117 0044 18000000 		.4byte	.LFE8
 4118 0048 00000000 		.4byte	.LFB9
 4119 004c 14000000 		.4byte	.LFE9
 4120 0050 00000000 		.4byte	.LFB10
 4121 0054 30000000 		.4byte	.LFE10
 4122 0058 00000000 		.4byte	.LFB11
 4123 005c 24000000 		.4byte	.LFE11
 4124 0060 00000000 		.4byte	.LFB12
 4125 0064 18000000 		.4byte	.LFE12
 4126 0068 00000000 		.4byte	.LFB13
 4127 006c 48000000 		.4byte	.LFE13
 4128 0070 00000000 		.4byte	.LFB14
 4129 0074 34000000 		.4byte	.LFE14
 4130 0078 00000000 		.4byte	.LFB15
 4131 007c 4C000000 		.4byte	.LFE15
 4132 0080 00000000 		.4byte	.LFB16
 4133 0084 36000000 		.4byte	.LFE16
 4134 0088 00000000 		.4byte	.LFB17
 4135 008c A8000000 		.4byte	.LFE17
 4136 0090 00000000 		.4byte	.LFB18
 4137 0094 5C000000 		.4byte	.LFE18
 4138 0098 00000000 		.4byte	.LFB19
 4139 009c 28000000 		.4byte	.LFE19
 4140 00a0 00000000 		.4byte	.LFB20
 4141 00a4 30000000 		.4byte	.LFE20
 4142 00a8 00000000 		.4byte	.LFB21
 4143 00ac 28000000 		.4byte	.LFE21
 4144 00b0 00000000 		.4byte	.LFB22
 4145 00b4 28000000 		.4byte	.LFE22
 4146 00b8 00000000 		.4byte	.LFB23
 4147 00bc 28000000 		.4byte	.LFE23
 4148 00c0 00000000 		.4byte	.LFB24
 4149 00c4 14000000 		.4byte	.LFE24
 4150 00c8 00000000 		.4byte	.LFB25
 4151 00cc 20000000 		.4byte	.LFE25
 4152 00d0 00000000 		.4byte	.LFB26
 4153 00d4 48000000 		.4byte	.LFE26
 4154 00d8 00000000 		.4byte	.LFB27
 4155 00dc 28000000 		.4byte	.LFE27
 4156 00e0 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 128


 4157 00e4 84000000 		.4byte	.LFE28
 4158 00e8 00000000 		.4byte	.LFB29
 4159 00ec 24000000 		.4byte	.LFE29
 4160 00f0 00000000 		.4byte	.LFB30
 4161 00f4 60000000 		.4byte	.LFE30
 4162 00f8 00000000 		.4byte	.LFB31
 4163 00fc 1C000000 		.4byte	.LFE31
 4164 0100 00000000 		.4byte	.LFB32
 4165 0104 18000000 		.4byte	.LFE32
 4166 0108 00000000 		.4byte	.LFB33
 4167 010c 18000000 		.4byte	.LFE33
 4168 0110 00000000 		.4byte	.LFB34
 4169 0114 18000000 		.4byte	.LFE34
 4170 0118 00000000 		.4byte	.LFB35
 4171 011c 1C000000 		.4byte	.LFE35
 4172 0120 00000000 		.4byte	.LFB36
 4173 0124 18000000 		.4byte	.LFE36
 4174 0128 00000000 		.4byte	.LFB37
 4175 012c 18000000 		.4byte	.LFE37
 4176 0130 00000000 		.4byte	.LFB38
 4177 0134 18000000 		.4byte	.LFE38
 4178 0138 00000000 		.4byte	.LFB39
 4179 013c 14000000 		.4byte	.LFE39
 4180 0140 00000000 		.4byte	.LFB40
 4181 0144 2C000000 		.4byte	.LFE40
 4182 0148 00000000 		.4byte	.LFB41
 4183 014c 1C000000 		.4byte	.LFE41
 4184 0150 00000000 		.4byte	.LFB42
 4185 0154 44000000 		.4byte	.LFE42
 4186 0158 00000000 		.4byte	.LFB43
 4187 015c C0000000 		.4byte	.LFE43
 4188 0160 00000000 		.4byte	0
 4189 0164 00000000 		.4byte	0
 4190              		.section	.debug_line,"",%progbits
 4191              	.Ldebug_line0:
 4192 0000 5D040000 		.section	.debug_str,"MS",%progbits,1
 4192      02004F00 
 4192      00000201 
 4192      FB0E0D00 
 4192      01010101 
 4193              	.LASF52:
 4194 0000 72616D56 		.ascii	"ramVectorTable\000"
 4194      6563746F 
 4194      72546162 
 4194      6C6500
 4195              	.LASF31:
 4196 000f 62675472 		.ascii	"bgTrim4\000"
 4196      696D3400 
 4197              	.LASF10:
 4198 0017 75696E74 		.ascii	"uint16\000"
 4198      313600
 4199              	.LASF45:
 4200 001e 696E7453 		.ascii	"intState\000"
 4200      74617465 
 4200      00
 4201              	.LASF25:
 4202 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 129


 4202      73436C6B 
 4202      57726974 
 4202      65486663 
 4202      6C6B4469 
 4203              	.LASF51:
 4204 0040 6F6C6449 		.ascii	"oldIsr\000"
 4204      737200
 4205              	.LASF87:
 4206 0047 72657456 		.ascii	"retVal\000"
 4206      616C00
 4207              	.LASF44:
 4208 004e 43794469 		.ascii	"CyDisableInts\000"
 4208      7361626C 
 4208      65496E74 
 4208      7300
 4209              	.LASF34:
 4210 005c 63757272 		.ascii	"currentImoTrim2Value\000"
 4210      656E7449 
 4210      6D6F5472 
 4210      696D3256 
 4210      616C7565 
 4211              	.LASF7:
 4212 0071 6C6F6E67 		.ascii	"long long unsigned int\000"
 4212      206C6F6E 
 4212      6720756E 
 4212      7369676E 
 4212      65642069 
 4213              	.LASF92:
 4214 0088 43795379 		.ascii	"CySysTickInitVar\000"
 4214      73546963 
 4214      6B496E69 
 4214      74566172 
 4214      00
 4215              	.LASF46:
 4216 0099 4379456E 		.ascii	"CyEnableInts\000"
 4216      61626C65 
 4216      496E7473 
 4216      00
 4217              	.LASF67:
 4218 00a6 4379536F 		.ascii	"CySoftwareReset\000"
 4218      66747761 
 4218      72655265 
 4218      73657400 
 4219              	.LASF77:
 4220 00b6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4220      73546963 
 4220      6B456E61 
 4220      626C6549 
 4220      6E746572 
 4221              	.LASF62:
 4222 00cf 4379496E 		.ascii	"CyIntGetState\000"
 4222      74476574 
 4222      53746174 
 4222      6500
 4223              	.LASF6:
 4224 00dd 6C6F6E67 		.ascii	"long long int\000"
 4224      206C6F6E 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 130


 4224      6720696E 
 4224      7400
 4225              	.LASF0:
 4226 00eb 7369676E 		.ascii	"signed char\000"
 4226      65642063 
 4226      68617200 
 4227              	.LASF30:
 4228 00f7 66726571 		.ascii	"freq\000"
 4228      00
 4229              	.LASF72:
 4230 00fc 43794465 		.ascii	"CyDelayFreq\000"
 4230      6C617946 
 4230      72657100 
 4231              	.LASF22:
 4232 0108 696E7465 		.ascii	"interruptState\000"
 4232      72727570 
 4232      74537461 
 4232      746500
 4233              	.LASF81:
 4234 0117 43795379 		.ascii	"CySysTickGetReload\000"
 4234      73546963 
 4234      6B476574 
 4234      52656C6F 
 4234      616400
 4235              	.LASF4:
 4236 012a 6C6F6E67 		.ascii	"long int\000"
 4236      20696E74 
 4236      00
 4237              	.LASF63:
 4238 0133 4379496E 		.ascii	"CyIntDisable\000"
 4238      74446973 
 4238      61626C65 
 4238      00
 4239              	.LASF88:
 4240 0140 43795379 		.ascii	"CySysTickGetCallback\000"
 4240      73546963 
 4240      6B476574 
 4240      43616C6C 
 4240      6261636B 
 4241              	.LASF9:
 4242 0155 75696E74 		.ascii	"uint8\000"
 4242      3800
 4243              	.LASF94:
 4244 015b 63796465 		.ascii	"cydelayFreqKhz\000"
 4244      6C617946 
 4244      7265714B 
 4244      687A00
 4245              	.LASF70:
 4246 016a 43794465 		.ascii	"CyDelayUs\000"
 4246      6C617955 
 4246      7300
 4247              	.LASF13:
 4248 0174 646F7562 		.ascii	"double\000"
 4248      6C6500
 4249              	.LASF58:
 4250 017b 73686966 		.ascii	"shift\000"
 4250      7400
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 131


 4251              	.LASF39:
 4252 0181 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4252      734C7664 
 4252      436C6561 
 4252      72496E74 
 4252      65727275 
 4253              	.LASF11:
 4254 0198 75696E74 		.ascii	"uint32\000"
 4254      333200
 4255              	.LASF49:
 4256 019f 6E756D62 		.ascii	"number\000"
 4256      657200
 4257              	.LASF47:
 4258 01a6 6D61736B 		.ascii	"mask\000"
 4258      00
 4259              	.LASF40:
 4260 01ab 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4260      73436C6B 
 4260      47657453 
 4260      7973636C 
 4260      6B536F75 
 4261              	.LASF60:
 4262 01c3 4379496E 		.ascii	"CyIntGetPriority\000"
 4262      74476574 
 4262      5072696F 
 4262      72697479 
 4262      00
 4263              	.LASF96:
 4264 01d4 63796465 		.ascii	"cydelay32kMs\000"
 4264      6C617933 
 4264      326B4D73 
 4264      00
 4265              	.LASF74:
 4266 01e1 43795379 		.ascii	"CySysTickInit\000"
 4266      73546963 
 4266      6B496E69 
 4266      7400
 4267              	.LASF59:
 4268 01ef 76616C75 		.ascii	"value\000"
 4268      6500
 4269              	.LASF89:
 4270 01f5 43794765 		.ascii	"CyGetUniqueId\000"
 4270      74556E69 
 4270      71756549 
 4270      6400
 4271              	.LASF83:
 4272 0203 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4272      73546963 
 4272      6B476574 
 4272      436F756E 
 4272      74466C61 
 4273              	.LASF8:
 4274 0219 756E7369 		.ascii	"unsigned int\000"
 4274      676E6564 
 4274      20696E74 
 4274      00
 4275              	.LASF84:
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 132


 4276 0226 43795379 		.ascii	"CySysTickClear\000"
 4276      73546963 
 4276      6B436C65 
 4276      617200
 4277              	.LASF5:
 4278 0235 6C6F6E67 		.ascii	"long unsigned int\000"
 4278      20756E73 
 4278      69676E65 
 4278      6420696E 
 4278      7400
 4279              	.LASF80:
 4280 0247 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4280      734C7664 
 4280      47657449 
 4280      6E746572 
 4280      72757074 
 4281              	.LASF21:
 4282 0262 43795379 		.ascii	"CySysClkImoStop\000"
 4282      73436C6B 
 4282      496D6F53 
 4282      746F7000 
 4283              	.LASF64:
 4284 0272 4379496E 		.ascii	"CyIntSetPending\000"
 4284      74536574 
 4284      50656E64 
 4284      696E6700 
 4285              	.LASF41:
 4286 0282 43795379 		.ascii	"CySysGetResetReason\000"
 4286      73476574 
 4286      52657365 
 4286      74526561 
 4286      736F6E00 
 4287              	.LASF3:
 4288 0296 73686F72 		.ascii	"short unsigned int\000"
 4288      7420756E 
 4288      7369676E 
 4288      65642069 
 4288      6E7400
 4289              	.LASF54:
 4290 02a9 4379496E 		.ascii	"CyIntSetVector\000"
 4290      74536574 
 4290      56656374 
 4290      6F7200
 4291              	.LASF99:
 4292 02b8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4292      6E657261 
 4292      7465645F 
 4292      536F7572 
 4292      63655C50 
 4293              	.LASF57:
 4294 02d9 7072696F 		.ascii	"priority\000"
 4294      72697479 
 4294      00
 4295              	.LASF29:
 4296 02e2 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4296      73436C6B 
 4296      57726974 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 133


 4296      65496D6F 
 4296      46726571 
 4297              	.LASF48:
 4298 02f7 4379496E 		.ascii	"CyIntSetSysVector\000"
 4298      74536574 
 4298      53797356 
 4298      6563746F 
 4298      7200
 4299              	.LASF16:
 4300 0309 72656733 		.ascii	"reg32\000"
 4300      3200
 4301              	.LASF73:
 4302 030f 43795379 		.ascii	"CySysTickStart\000"
 4302      73546963 
 4302      6B537461 
 4302      727400
 4303              	.LASF43:
 4304 031e 72657475 		.ascii	"returnStatus\000"
 4304      726E5374 
 4304      61747573 
 4304      00
 4305              	.LASF18:
 4306 032b 73697A65 		.ascii	"sizetype\000"
 4306      74797065 
 4306      00
 4307              	.LASF65:
 4308 0334 4379496E 		.ascii	"CyIntClearPending\000"
 4308      74436C65 
 4308      61725065 
 4308      6E64696E 
 4308      6700
 4309              	.LASF50:
 4310 0346 61646472 		.ascii	"address\000"
 4310      65737300 
 4311              	.LASF32:
 4312 034e 62675472 		.ascii	"bgTrim5\000"
 4312      696D3500 
 4313              	.LASF24:
 4314 0356 73797363 		.ascii	"sysclkSource\000"
 4314      6C6B536F 
 4314      75726365 
 4314      00
 4315              	.LASF86:
 4316 0363 66756E63 		.ascii	"function\000"
 4316      74696F6E 
 4316      00
 4317              	.LASF97:
 4318 036c 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4318      6F467265 
 4318      714D687A 
 4318      32526567 
 4318      00
 4319              	.LASF82:
 4320 037d 43795379 		.ascii	"CySysTickGetValue\000"
 4320      73546963 
 4320      6B476574 
 4320      56616C75 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 134


 4320      6500
 4321              	.LASF93:
 4322 038f 63796465 		.ascii	"cydelayFreqHz\000"
 4322      6C617946 
 4322      72657148 
 4322      7A00
 4323              	.LASF56:
 4324 039d 4379496E 		.ascii	"CyIntSetPriority\000"
 4324      74536574 
 4324      5072696F 
 4324      72697479 
 4324      00
 4325              	.LASF12:
 4326 03ae 666C6F61 		.ascii	"float\000"
 4326      7400
 4327              	.LASF36:
 4328 03b4 43795379 		.ascii	"CySysLvdEnable\000"
 4328      734C7664 
 4328      456E6162 
 4328      6C6500
 4329              	.LASF19:
 4330 03c3 63795379 		.ascii	"cySysTickCallback\000"
 4330      73546963 
 4330      6B43616C 
 4330      6C626163 
 4330      6B00
 4331              	.LASF55:
 4332 03d5 4379496E 		.ascii	"CyIntGetVector\000"
 4332      74476574 
 4332      56656374 
 4332      6F7200
 4333              	.LASF69:
 4334 03e4 6D696C6C 		.ascii	"milliseconds\000"
 4334      69736563 
 4334      6F6E6473 
 4334      00
 4335              	.LASF15:
 4336 03f1 72656738 		.ascii	"reg8\000"
 4336      00
 4337              	.LASF37:
 4338 03f6 74687265 		.ascii	"threshold\000"
 4338      73686F6C 
 4338      6400
 4339              	.LASF66:
 4340 0400 43794861 		.ascii	"CyHalt\000"
 4340      6C7400
 4341              	.LASF1:
 4342 0407 756E7369 		.ascii	"unsigned char\000"
 4342      676E6564 
 4342      20636861 
 4342      7200
 4343              	.LASF2:
 4344 0415 73686F72 		.ascii	"short int\000"
 4344      7420696E 
 4344      7400
 4345              	.LASF61:
 4346 041f 4379496E 		.ascii	"CyIntEnable\000"
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 135


 4346      74456E61 
 4346      626C6500 
 4347              	.LASF53:
 4348 042b 4379496E 		.ascii	"CyIntGetSysVector\000"
 4348      74476574 
 4348      53797356 
 4348      6563746F 
 4348      7200
 4349              	.LASF27:
 4350 043d 636C6B53 		.ascii	"clkSelect\000"
 4350      656C6563 
 4350      7400
 4351              	.LASF42:
 4352 0447 72656173 		.ascii	"reason\000"
 4352      6F6E00
 4353              	.LASF14:
 4354 044e 63686172 		.ascii	"char\000"
 4354      00
 4355              	.LASF17:
 4356 0453 63796973 		.ascii	"cyisraddress\000"
 4356      72616464 
 4356      72657373 
 4356      00
 4357              	.LASF75:
 4358 0460 43795379 		.ascii	"CySysTickEnable\000"
 4358      73546963 
 4358      6B456E61 
 4358      626C6500 
 4359              	.LASF26:
 4360 0470 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4360      73436C6B 
 4360      57726974 
 4360      65537973 
 4360      636C6B44 
 4361              	.LASF85:
 4362 0487 43795379 		.ascii	"CySysTickSetCallback\000"
 4362      73546963 
 4362      6B536574 
 4362      43616C6C 
 4362      6261636B 
 4363              	.LASF91:
 4364 049c 43795379 		.ascii	"CySysTickCallbacks\000"
 4364      73546963 
 4364      6B43616C 
 4364      6C626163 
 4364      6B7300
 4365              	.LASF35:
 4366 04af 696D6F54 		.ascii	"imoTrim1Value\000"
 4366      72696D31 
 4366      56616C75 
 4366      6500
 4367              	.LASF90:
 4368 04bd 756E6971 		.ascii	"uniqueId\000"
 4368      75654964 
 4368      00
 4369              	.LASF68:
 4370 04c6 43794465 		.ascii	"CyDelay\000"
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 136


 4370      6C617900 
 4371              	.LASF78:
 4372 04ce 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4372      73546963 
 4372      6B446973 
 4372      61626C65 
 4372      496E7465 
 4373              	.LASF38:
 4374 04e8 43795379 		.ascii	"CySysLvdDisable\000"
 4374      734C7664 
 4374      44697361 
 4374      626C6500 
 4375              	.LASF95:
 4376 04f8 63796465 		.ascii	"cydelayFreqMhz\000"
 4376      6C617946 
 4376      7265714D 
 4376      687A00
 4377              	.LASF71:
 4378 0507 6D696372 		.ascii	"microseconds\000"
 4378      6F736563 
 4378      6F6E6473 
 4378      00
 4379              	.LASF76:
 4380 0514 43795379 		.ascii	"CySysTickStop\000"
 4380      73546963 
 4380      6B53746F 
 4380      7000
 4381              	.LASF28:
 4382 0522 64697669 		.ascii	"divider\000"
 4382      64657200 
 4383              	.LASF98:
 4384 052a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4384      4320342E 
 4384      392E3320 
 4384      32303135 
 4384      30333033 
 4385 055d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4385      20726576 
 4385      6973696F 
 4385      6E203232 
 4385      31323230 
 4386 0590 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4386      66756E63 
 4386      74696F6E 
 4386      2D736563 
 4386      74696F6E 
 4387              	.LASF20:
 4388 05b8 43795379 		.ascii	"CySysClkImoStart\000"
 4388      73436C6B 
 4388      496D6F53 
 4388      74617274 
 4388      00
 4389              	.LASF33:
 4390 05c9 6E657749 		.ascii	"newImoTrim2Value\000"
 4390      6D6F5472 
 4390      696D3256 
 4390      616C7565 
ARM GAS  C:\Users\HERMIN~1\AppData\Local\Temp\ccbLZ0s5.s 			page 137


 4390      00
 4391              	.LASF100:
 4392 05da 433A5C70 		.ascii	"C:\\projekts\\Gunshow_PSoC\\SCB_I2cCommMaster01.cyd"
 4392      726F6A65 
 4392      6B74735C 
 4392      47756E73 
 4392      686F775F 
 4393 060a 736E00   		.ascii	"sn\000"
 4394              	.LASF23:
 4395 060d 746D7052 		.ascii	"tmpReg\000"
 4395      656700
 4396              	.LASF79:
 4397 0614 43795379 		.ascii	"CySysTickSetReload\000"
 4397      73546963 
 4397      6B536574 
 4397      52656C6F 
 4397      616400
 4398              	.LASF101:
 4399 0627 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4399      73546963 
 4399      6B536572 
 4399      76696365 
 4399      43616C6C 
 4400              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
